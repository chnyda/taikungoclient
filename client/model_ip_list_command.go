/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the IpListCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpListCommand{}

// IpListCommand struct for IpListCommand
type IpListCommand struct {
	IpAddress *string `json:"ipAddress,omitempty"`
	NetMask *int32 `json:"netMask,omitempty"`
}

// NewIpListCommand instantiates a new IpListCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpListCommand() *IpListCommand {
	this := IpListCommand{}
	return &this
}

// NewIpListCommandWithDefaults instantiates a new IpListCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpListCommandWithDefaults() *IpListCommand {
	this := IpListCommand{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *IpListCommand) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpListCommand) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *IpListCommand) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *IpListCommand) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetNetMask returns the NetMask field value if set, zero value otherwise.
func (o *IpListCommand) GetNetMask() int32 {
	if o == nil || IsNil(o.NetMask) {
		var ret int32
		return ret
	}
	return *o.NetMask
}

// GetNetMaskOk returns a tuple with the NetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpListCommand) GetNetMaskOk() (*int32, bool) {
	if o == nil || IsNil(o.NetMask) {
		return nil, false
	}
	return o.NetMask, true
}

// HasNetMask returns a boolean if a field has been set.
func (o *IpListCommand) HasNetMask() bool {
	if o != nil && !IsNil(o.NetMask) {
		return true
	}

	return false
}

// SetNetMask gets a reference to the given int32 and assigns it to the NetMask field.
func (o *IpListCommand) SetNetMask(v int32) {
	o.NetMask = &v
}

func (o IpListCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpListCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.NetMask) {
		toSerialize["netMask"] = o.NetMask
	}
	return toSerialize, nil
}

type NullableIpListCommand struct {
	value *IpListCommand
	isSet bool
}

func (v NullableIpListCommand) Get() *IpListCommand {
	return v.value
}

func (v *NullableIpListCommand) Set(val *IpListCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableIpListCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableIpListCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpListCommand(val *IpListCommand) *NullableIpListCommand {
	return &NullableIpListCommand{value: val, isSet: true}
}

func (v NullableIpListCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpListCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


