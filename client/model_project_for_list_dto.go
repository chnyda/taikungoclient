/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"time"
)

// checks if the ProjectForListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectForListDto{}

// ProjectForListDto struct for ProjectForListDto
type ProjectForListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Operation *string `json:"operation,omitempty"`
	JobUrl *string `json:"jobUrl,omitempty"`
	TopicName *string `json:"topicName,omitempty"`
	ImageName *string `json:"imageName,omitempty"`
	Token *string `json:"token,omitempty"`
	IsKubernetes *bool `json:"isKubernetes,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	IsBackupEnabled *bool `json:"isBackupEnabled,omitempty"`
	IsMonitoringEnabled *bool `json:"isMonitoringEnabled,omitempty"`
	IsOpaEnabled *bool `json:"isOpaEnabled,omitempty"`
	IsAutoUpgrade *bool `json:"isAutoUpgrade,omitempty"`
	HasKubeConfigFile *bool `json:"hasKubeConfigFile,omitempty"`
	HasSelectedFlavors *bool `json:"hasSelectedFlavors,omitempty"`
	Master *int32 `json:"master,omitempty"`
	MasterReady *int32 `json:"masterReady,omitempty"`
	QuotaId *int32 `json:"quotaId,omitempty"`
	Bastion *int32 `json:"bastion,omitempty"`
	AccessProfileRevision *int32 `json:"accessProfileRevision,omitempty"`
	OpaProfileRevision *int32 `json:"opaProfileRevision,omitempty"`
	CloudCredentialName *string `json:"cloudCredentialName,omitempty"`
	CloudCredentialId *int32 `json:"cloudCredentialId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	Status *string `json:"status,omitempty"`
	Health *string `json:"health,omitempty"`
	AccessIp *string `json:"accessIp,omitempty"`
	TotalServersCount *int32 `json:"totalServersCount,omitempty"`
	CloudType *string `json:"cloudType,omitempty"`
	KubesprayCurrentVersion *string `json:"kubesprayCurrentVersion,omitempty"`
	KubesprayTargetVersion *string `json:"kubesprayTargetVersion,omitempty"`
	KubernetesCurrentVersion *string `json:"kubernetesCurrentVersion,omitempty"`
	KubernetesTargetVersion *string `json:"kubernetesTargetVersion,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	BoundUsers []UserDto `json:"boundUsers,omitempty"`
	MonitoringCredential *MonitoringCredentialsListDto `json:"monitoringCredential,omitempty"`
	IsAutoscalingEnabled *bool `json:"isAutoscalingEnabled,omitempty"`
	Flavors []string `json:"flavors,omitempty"`
	AccessProfile *AccessProfilesForProjectListDto `json:"accessProfile,omitempty"`
	KubernetesProfiles *KubernetesProfilesLisForPollerDto `json:"kubernetesProfiles,omitempty"`
	OpaProfile *OpaProfileListDto `json:"opaProfile,omitempty"`
	KubernetesAlerts []KubernetesAlertDto `json:"kubernetesAlerts,omitempty"`
	S3BucketName *string `json:"s3BucketName,omitempty"`
	S3AccessKeyId *string `json:"s3AccessKeyId,omitempty"`
	S3SecretKey *string `json:"s3SecretKey,omitempty"`
	S3Endpoint *string `json:"s3Endpoint,omitempty"`
	S3Region *string `json:"s3Region,omitempty"`
	IsDeleteCluster *bool `json:"isDeleteCluster,omitempty"`
	TaikunLBFlavor *string `json:"taikunLBFlavor,omitempty"`
	TaikunLBPrivateKey *string `json:"taikunLBPrivateKey,omitempty"`
	TaikunLBPublicKey *string `json:"taikunLBPublicKey,omitempty"`
	RouterIdStartRange *int32 `json:"routerIdStartRange,omitempty"`
	RouterIdEndRange *int32 `json:"routerIdEndRange,omitempty"`
	TaikunPrivateSSHKey *string `json:"taikunPrivateSSHKey,omitempty"`
	TaikunPublicSSHKey *string `json:"taikunPublicSSHKey,omitempty"`
	GoogleProjectId *string `json:"googleProjectId,omitempty"`
	Cidr *string `json:"cidr,omitempty"`
	NetMask *int32 `json:"netMask,omitempty"`
	PrivateIp *string `json:"privateIp,omitempty"`
	PublicIp *string `json:"publicIp,omitempty"`
	IsKubevapEnabled *bool `json:"isKubevapEnabled,omitempty"`
	TanzuReleaseVersion *string `json:"tanzuReleaseVersion,omitempty"`
	NfsDiskSize *int32 `json:"nfsDiskSize,omitempty"`
	KubevapEnabeledKubernetesVersions []string `json:"kubevapEnabeledKubernetesVersions,omitempty"`
	AwsProjectAZSubnets []AwsProjectAZSubnetDto `json:"awsProjectAZSubnets,omitempty"`
	AvailabilityZones []string `json:"availabilityZones,omitempty"`
}

// NewProjectForListDto instantiates a new ProjectForListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectForListDto() *ProjectForListDto {
	this := ProjectForListDto{}
	return &this
}

// NewProjectForListDtoWithDefaults instantiates a new ProjectForListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectForListDtoWithDefaults() *ProjectForListDto {
	this := ProjectForListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectForListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectForListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectForListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectForListDto) SetName(v string) {
	o.Name = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *ProjectForListDto) SetOperation(v string) {
	o.Operation = &v
}

// GetJobUrl returns the JobUrl field value if set, zero value otherwise.
func (o *ProjectForListDto) GetJobUrl() string {
	if o == nil || IsNil(o.JobUrl) {
		var ret string
		return ret
	}
	return *o.JobUrl
}

// GetJobUrlOk returns a tuple with the JobUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetJobUrlOk() (*string, bool) {
	if o == nil || IsNil(o.JobUrl) {
		return nil, false
	}
	return o.JobUrl, true
}

// HasJobUrl returns a boolean if a field has been set.
func (o *ProjectForListDto) HasJobUrl() bool {
	if o != nil && !IsNil(o.JobUrl) {
		return true
	}

	return false
}

// SetJobUrl gets a reference to the given string and assigns it to the JobUrl field.
func (o *ProjectForListDto) SetJobUrl(v string) {
	o.JobUrl = &v
}

// GetTopicName returns the TopicName field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTopicName() string {
	if o == nil || IsNil(o.TopicName) {
		var ret string
		return ret
	}
	return *o.TopicName
}

// GetTopicNameOk returns a tuple with the TopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTopicNameOk() (*string, bool) {
	if o == nil || IsNil(o.TopicName) {
		return nil, false
	}
	return o.TopicName, true
}

// HasTopicName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTopicName() bool {
	if o != nil && !IsNil(o.TopicName) {
		return true
	}

	return false
}

// SetTopicName gets a reference to the given string and assigns it to the TopicName field.
func (o *ProjectForListDto) SetTopicName(v string) {
	o.TopicName = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *ProjectForListDto) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *ProjectForListDto) SetImageName(v string) {
	o.ImageName = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ProjectForListDto) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ProjectForListDto) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ProjectForListDto) SetToken(v string) {
	o.Token = &v
}

// GetIsKubernetes returns the IsKubernetes field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsKubernetes() bool {
	if o == nil || IsNil(o.IsKubernetes) {
		var ret bool
		return ret
	}
	return *o.IsKubernetes
}

// GetIsKubernetesOk returns a tuple with the IsKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubernetes) {
		return nil, false
	}
	return o.IsKubernetes, true
}

// HasIsKubernetes returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsKubernetes() bool {
	if o != nil && !IsNil(o.IsKubernetes) {
		return true
	}

	return false
}

// SetIsKubernetes gets a reference to the given bool and assigns it to the IsKubernetes field.
func (o *ProjectForListDto) SetIsKubernetes(v bool) {
	o.IsKubernetes = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectForListDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetIsBackupEnabled returns the IsBackupEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsBackupEnabled() bool {
	if o == nil || IsNil(o.IsBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsBackupEnabled
}

// GetIsBackupEnabledOk returns a tuple with the IsBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupEnabled) {
		return nil, false
	}
	return o.IsBackupEnabled, true
}

// HasIsBackupEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsBackupEnabled() bool {
	if o != nil && !IsNil(o.IsBackupEnabled) {
		return true
	}

	return false
}

// SetIsBackupEnabled gets a reference to the given bool and assigns it to the IsBackupEnabled field.
func (o *ProjectForListDto) SetIsBackupEnabled(v bool) {
	o.IsBackupEnabled = &v
}

// GetIsMonitoringEnabled returns the IsMonitoringEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsMonitoringEnabled() bool {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringEnabled
}

// GetIsMonitoringEnabledOk returns a tuple with the IsMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		return nil, false
	}
	return o.IsMonitoringEnabled, true
}

// HasIsMonitoringEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsMonitoringEnabled() bool {
	if o != nil && !IsNil(o.IsMonitoringEnabled) {
		return true
	}

	return false
}

// SetIsMonitoringEnabled gets a reference to the given bool and assigns it to the IsMonitoringEnabled field.
func (o *ProjectForListDto) SetIsMonitoringEnabled(v bool) {
	o.IsMonitoringEnabled = &v
}

// GetIsOpaEnabled returns the IsOpaEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsOpaEnabled() bool {
	if o == nil || IsNil(o.IsOpaEnabled) {
		var ret bool
		return ret
	}
	return *o.IsOpaEnabled
}

// GetIsOpaEnabledOk returns a tuple with the IsOpaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsOpaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOpaEnabled) {
		return nil, false
	}
	return o.IsOpaEnabled, true
}

// HasIsOpaEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsOpaEnabled() bool {
	if o != nil && !IsNil(o.IsOpaEnabled) {
		return true
	}

	return false
}

// SetIsOpaEnabled gets a reference to the given bool and assigns it to the IsOpaEnabled field.
func (o *ProjectForListDto) SetIsOpaEnabled(v bool) {
	o.IsOpaEnabled = &v
}

// GetIsAutoUpgrade returns the IsAutoUpgrade field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsAutoUpgrade() bool {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		var ret bool
		return ret
	}
	return *o.IsAutoUpgrade
}

// GetIsAutoUpgradeOk returns a tuple with the IsAutoUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsAutoUpgradeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		return nil, false
	}
	return o.IsAutoUpgrade, true
}

// HasIsAutoUpgrade returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsAutoUpgrade() bool {
	if o != nil && !IsNil(o.IsAutoUpgrade) {
		return true
	}

	return false
}

// SetIsAutoUpgrade gets a reference to the given bool and assigns it to the IsAutoUpgrade field.
func (o *ProjectForListDto) SetIsAutoUpgrade(v bool) {
	o.IsAutoUpgrade = &v
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *ProjectForListDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *ProjectForListDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *ProjectForListDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetHasSelectedFlavors returns the HasSelectedFlavors field value if set, zero value otherwise.
func (o *ProjectForListDto) GetHasSelectedFlavors() bool {
	if o == nil || IsNil(o.HasSelectedFlavors) {
		var ret bool
		return ret
	}
	return *o.HasSelectedFlavors
}

// GetHasSelectedFlavorsOk returns a tuple with the HasSelectedFlavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetHasSelectedFlavorsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSelectedFlavors) {
		return nil, false
	}
	return o.HasSelectedFlavors, true
}

// HasHasSelectedFlavors returns a boolean if a field has been set.
func (o *ProjectForListDto) HasHasSelectedFlavors() bool {
	if o != nil && !IsNil(o.HasSelectedFlavors) {
		return true
	}

	return false
}

// SetHasSelectedFlavors gets a reference to the given bool and assigns it to the HasSelectedFlavors field.
func (o *ProjectForListDto) SetHasSelectedFlavors(v bool) {
	o.HasSelectedFlavors = &v
}

// GetMaster returns the Master field value if set, zero value otherwise.
func (o *ProjectForListDto) GetMaster() int32 {
	if o == nil || IsNil(o.Master) {
		var ret int32
		return ret
	}
	return *o.Master
}

// GetMasterOk returns a tuple with the Master field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetMasterOk() (*int32, bool) {
	if o == nil || IsNil(o.Master) {
		return nil, false
	}
	return o.Master, true
}

// HasMaster returns a boolean if a field has been set.
func (o *ProjectForListDto) HasMaster() bool {
	if o != nil && !IsNil(o.Master) {
		return true
	}

	return false
}

// SetMaster gets a reference to the given int32 and assigns it to the Master field.
func (o *ProjectForListDto) SetMaster(v int32) {
	o.Master = &v
}

// GetMasterReady returns the MasterReady field value if set, zero value otherwise.
func (o *ProjectForListDto) GetMasterReady() int32 {
	if o == nil || IsNil(o.MasterReady) {
		var ret int32
		return ret
	}
	return *o.MasterReady
}

// GetMasterReadyOk returns a tuple with the MasterReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetMasterReadyOk() (*int32, bool) {
	if o == nil || IsNil(o.MasterReady) {
		return nil, false
	}
	return o.MasterReady, true
}

// HasMasterReady returns a boolean if a field has been set.
func (o *ProjectForListDto) HasMasterReady() bool {
	if o != nil && !IsNil(o.MasterReady) {
		return true
	}

	return false
}

// SetMasterReady gets a reference to the given int32 and assigns it to the MasterReady field.
func (o *ProjectForListDto) SetMasterReady(v int32) {
	o.MasterReady = &v
}

// GetQuotaId returns the QuotaId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetQuotaId() int32 {
	if o == nil || IsNil(o.QuotaId) {
		var ret int32
		return ret
	}
	return *o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetQuotaIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaId) {
		return nil, false
	}
	return o.QuotaId, true
}

// HasQuotaId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasQuotaId() bool {
	if o != nil && !IsNil(o.QuotaId) {
		return true
	}

	return false
}

// SetQuotaId gets a reference to the given int32 and assigns it to the QuotaId field.
func (o *ProjectForListDto) SetQuotaId(v int32) {
	o.QuotaId = &v
}

// GetBastion returns the Bastion field value if set, zero value otherwise.
func (o *ProjectForListDto) GetBastion() int32 {
	if o == nil || IsNil(o.Bastion) {
		var ret int32
		return ret
	}
	return *o.Bastion
}

// GetBastionOk returns a tuple with the Bastion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetBastionOk() (*int32, bool) {
	if o == nil || IsNil(o.Bastion) {
		return nil, false
	}
	return o.Bastion, true
}

// HasBastion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasBastion() bool {
	if o != nil && !IsNil(o.Bastion) {
		return true
	}

	return false
}

// SetBastion gets a reference to the given int32 and assigns it to the Bastion field.
func (o *ProjectForListDto) SetBastion(v int32) {
	o.Bastion = &v
}

// GetAccessProfileRevision returns the AccessProfileRevision field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAccessProfileRevision() int32 {
	if o == nil || IsNil(o.AccessProfileRevision) {
		var ret int32
		return ret
	}
	return *o.AccessProfileRevision
}

// GetAccessProfileRevisionOk returns a tuple with the AccessProfileRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAccessProfileRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessProfileRevision) {
		return nil, false
	}
	return o.AccessProfileRevision, true
}

// HasAccessProfileRevision returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAccessProfileRevision() bool {
	if o != nil && !IsNil(o.AccessProfileRevision) {
		return true
	}

	return false
}

// SetAccessProfileRevision gets a reference to the given int32 and assigns it to the AccessProfileRevision field.
func (o *ProjectForListDto) SetAccessProfileRevision(v int32) {
	o.AccessProfileRevision = &v
}

// GetOpaProfileRevision returns the OpaProfileRevision field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOpaProfileRevision() int32 {
	if o == nil || IsNil(o.OpaProfileRevision) {
		var ret int32
		return ret
	}
	return *o.OpaProfileRevision
}

// GetOpaProfileRevisionOk returns a tuple with the OpaProfileRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOpaProfileRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.OpaProfileRevision) {
		return nil, false
	}
	return o.OpaProfileRevision, true
}

// HasOpaProfileRevision returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOpaProfileRevision() bool {
	if o != nil && !IsNil(o.OpaProfileRevision) {
		return true
	}

	return false
}

// SetOpaProfileRevision gets a reference to the given int32 and assigns it to the OpaProfileRevision field.
func (o *ProjectForListDto) SetOpaProfileRevision(v int32) {
	o.OpaProfileRevision = &v
}

// GetCloudCredentialName returns the CloudCredentialName field value if set, zero value otherwise.
func (o *ProjectForListDto) GetCloudCredentialName() string {
	if o == nil || IsNil(o.CloudCredentialName) {
		var ret string
		return ret
	}
	return *o.CloudCredentialName
}

// GetCloudCredentialNameOk returns a tuple with the CloudCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetCloudCredentialNameOk() (*string, bool) {
	if o == nil || IsNil(o.CloudCredentialName) {
		return nil, false
	}
	return o.CloudCredentialName, true
}

// HasCloudCredentialName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCloudCredentialName() bool {
	if o != nil && !IsNil(o.CloudCredentialName) {
		return true
	}

	return false
}

// SetCloudCredentialName gets a reference to the given string and assigns it to the CloudCredentialName field.
func (o *ProjectForListDto) SetCloudCredentialName(v string) {
	o.CloudCredentialName = &v
}

// GetCloudCredentialId returns the CloudCredentialId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetCloudCredentialId() int32 {
	if o == nil || IsNil(o.CloudCredentialId) {
		var ret int32
		return ret
	}
	return *o.CloudCredentialId
}

// GetCloudCredentialIdOk returns a tuple with the CloudCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetCloudCredentialIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CloudCredentialId) {
		return nil, false
	}
	return o.CloudCredentialId, true
}

// HasCloudCredentialId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCloudCredentialId() bool {
	if o != nil && !IsNil(o.CloudCredentialId) {
		return true
	}

	return false
}

// SetCloudCredentialId gets a reference to the given int32 and assigns it to the CloudCredentialId field.
func (o *ProjectForListDto) SetCloudCredentialId(v int32) {
	o.CloudCredentialId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ProjectForListDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectForListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetPartnerId() int32 {
	if o == nil || IsNil(o.PartnerId) {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetPartnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *ProjectForListDto) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProjectForListDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectForListDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProjectForListDto) SetStatus(v string) {
	o.Status = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *ProjectForListDto) GetHealth() string {
	if o == nil || IsNil(o.Health) {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetHealthOk() (*string, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *ProjectForListDto) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *ProjectForListDto) SetHealth(v string) {
	o.Health = &v
}

// GetAccessIp returns the AccessIp field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAccessIp() string {
	if o == nil || IsNil(o.AccessIp) {
		var ret string
		return ret
	}
	return *o.AccessIp
}

// GetAccessIpOk returns a tuple with the AccessIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAccessIpOk() (*string, bool) {
	if o == nil || IsNil(o.AccessIp) {
		return nil, false
	}
	return o.AccessIp, true
}

// HasAccessIp returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAccessIp() bool {
	if o != nil && !IsNil(o.AccessIp) {
		return true
	}

	return false
}

// SetAccessIp gets a reference to the given string and assigns it to the AccessIp field.
func (o *ProjectForListDto) SetAccessIp(v string) {
	o.AccessIp = &v
}

// GetTotalServersCount returns the TotalServersCount field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTotalServersCount() int32 {
	if o == nil || IsNil(o.TotalServersCount) {
		var ret int32
		return ret
	}
	return *o.TotalServersCount
}

// GetTotalServersCountOk returns a tuple with the TotalServersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTotalServersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalServersCount) {
		return nil, false
	}
	return o.TotalServersCount, true
}

// HasTotalServersCount returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTotalServersCount() bool {
	if o != nil && !IsNil(o.TotalServersCount) {
		return true
	}

	return false
}

// SetTotalServersCount gets a reference to the given int32 and assigns it to the TotalServersCount field.
func (o *ProjectForListDto) SetTotalServersCount(v int32) {
	o.TotalServersCount = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *ProjectForListDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetCloudTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *ProjectForListDto) SetCloudType(v string) {
	o.CloudType = &v
}

// GetKubesprayCurrentVersion returns the KubesprayCurrentVersion field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubesprayCurrentVersion() string {
	if o == nil || IsNil(o.KubesprayCurrentVersion) {
		var ret string
		return ret
	}
	return *o.KubesprayCurrentVersion
}

// GetKubesprayCurrentVersionOk returns a tuple with the KubesprayCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubesprayCurrentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubesprayCurrentVersion) {
		return nil, false
	}
	return o.KubesprayCurrentVersion, true
}

// HasKubesprayCurrentVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubesprayCurrentVersion() bool {
	if o != nil && !IsNil(o.KubesprayCurrentVersion) {
		return true
	}

	return false
}

// SetKubesprayCurrentVersion gets a reference to the given string and assigns it to the KubesprayCurrentVersion field.
func (o *ProjectForListDto) SetKubesprayCurrentVersion(v string) {
	o.KubesprayCurrentVersion = &v
}

// GetKubesprayTargetVersion returns the KubesprayTargetVersion field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubesprayTargetVersion() string {
	if o == nil || IsNil(o.KubesprayTargetVersion) {
		var ret string
		return ret
	}
	return *o.KubesprayTargetVersion
}

// GetKubesprayTargetVersionOk returns a tuple with the KubesprayTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubesprayTargetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubesprayTargetVersion) {
		return nil, false
	}
	return o.KubesprayTargetVersion, true
}

// HasKubesprayTargetVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubesprayTargetVersion() bool {
	if o != nil && !IsNil(o.KubesprayTargetVersion) {
		return true
	}

	return false
}

// SetKubesprayTargetVersion gets a reference to the given string and assigns it to the KubesprayTargetVersion field.
func (o *ProjectForListDto) SetKubesprayTargetVersion(v string) {
	o.KubesprayTargetVersion = &v
}

// GetKubernetesCurrentVersion returns the KubernetesCurrentVersion field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubernetesCurrentVersion() string {
	if o == nil || IsNil(o.KubernetesCurrentVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesCurrentVersion
}

// GetKubernetesCurrentVersionOk returns a tuple with the KubernetesCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubernetesCurrentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesCurrentVersion) {
		return nil, false
	}
	return o.KubernetesCurrentVersion, true
}

// HasKubernetesCurrentVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesCurrentVersion() bool {
	if o != nil && !IsNil(o.KubernetesCurrentVersion) {
		return true
	}

	return false
}

// SetKubernetesCurrentVersion gets a reference to the given string and assigns it to the KubernetesCurrentVersion field.
func (o *ProjectForListDto) SetKubernetesCurrentVersion(v string) {
	o.KubernetesCurrentVersion = &v
}

// GetKubernetesTargetVersion returns the KubernetesTargetVersion field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubernetesTargetVersion() string {
	if o == nil || IsNil(o.KubernetesTargetVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesTargetVersion
}

// GetKubernetesTargetVersionOk returns a tuple with the KubernetesTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubernetesTargetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesTargetVersion) {
		return nil, false
	}
	return o.KubernetesTargetVersion, true
}

// HasKubernetesTargetVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesTargetVersion() bool {
	if o != nil && !IsNil(o.KubernetesTargetVersion) {
		return true
	}

	return false
}

// SetKubernetesTargetVersion gets a reference to the given string and assigns it to the KubernetesTargetVersion field.
func (o *ProjectForListDto) SetKubernetesTargetVersion(v string) {
	o.KubernetesTargetVersion = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProjectForListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ProjectForListDto) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ProjectForListDto) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProjectForListDto) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ProjectForListDto) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetBoundUsers returns the BoundUsers field value if set, zero value otherwise.
func (o *ProjectForListDto) GetBoundUsers() []UserDto {
	if o == nil || IsNil(o.BoundUsers) {
		var ret []UserDto
		return ret
	}
	return o.BoundUsers
}

// GetBoundUsersOk returns a tuple with the BoundUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetBoundUsersOk() ([]UserDto, bool) {
	if o == nil || IsNil(o.BoundUsers) {
		return nil, false
	}
	return o.BoundUsers, true
}

// HasBoundUsers returns a boolean if a field has been set.
func (o *ProjectForListDto) HasBoundUsers() bool {
	if o != nil && !IsNil(o.BoundUsers) {
		return true
	}

	return false
}

// SetBoundUsers gets a reference to the given []UserDto and assigns it to the BoundUsers field.
func (o *ProjectForListDto) SetBoundUsers(v []UserDto) {
	o.BoundUsers = v
}

// GetMonitoringCredential returns the MonitoringCredential field value if set, zero value otherwise.
func (o *ProjectForListDto) GetMonitoringCredential() MonitoringCredentialsListDto {
	if o == nil || IsNil(o.MonitoringCredential) {
		var ret MonitoringCredentialsListDto
		return ret
	}
	return *o.MonitoringCredential
}

// GetMonitoringCredentialOk returns a tuple with the MonitoringCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetMonitoringCredentialOk() (*MonitoringCredentialsListDto, bool) {
	if o == nil || IsNil(o.MonitoringCredential) {
		return nil, false
	}
	return o.MonitoringCredential, true
}

// HasMonitoringCredential returns a boolean if a field has been set.
func (o *ProjectForListDto) HasMonitoringCredential() bool {
	if o != nil && !IsNil(o.MonitoringCredential) {
		return true
	}

	return false
}

// SetMonitoringCredential gets a reference to the given MonitoringCredentialsListDto and assigns it to the MonitoringCredential field.
func (o *ProjectForListDto) SetMonitoringCredential(v MonitoringCredentialsListDto) {
	o.MonitoringCredential = &v
}

// GetIsAutoscalingEnabled returns the IsAutoscalingEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsAutoscalingEnabled() bool {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoscalingEnabled
}

// GetIsAutoscalingEnabledOk returns a tuple with the IsAutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		return nil, false
	}
	return o.IsAutoscalingEnabled, true
}

// HasIsAutoscalingEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.IsAutoscalingEnabled) {
		return true
	}

	return false
}

// SetIsAutoscalingEnabled gets a reference to the given bool and assigns it to the IsAutoscalingEnabled field.
func (o *ProjectForListDto) SetIsAutoscalingEnabled(v bool) {
	o.IsAutoscalingEnabled = &v
}

// GetFlavors returns the Flavors field value if set, zero value otherwise.
func (o *ProjectForListDto) GetFlavors() []string {
	if o == nil || IsNil(o.Flavors) {
		var ret []string
		return ret
	}
	return o.Flavors
}

// GetFlavorsOk returns a tuple with the Flavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetFlavorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flavors) {
		return nil, false
	}
	return o.Flavors, true
}

// HasFlavors returns a boolean if a field has been set.
func (o *ProjectForListDto) HasFlavors() bool {
	if o != nil && !IsNil(o.Flavors) {
		return true
	}

	return false
}

// SetFlavors gets a reference to the given []string and assigns it to the Flavors field.
func (o *ProjectForListDto) SetFlavors(v []string) {
	o.Flavors = v
}

// GetAccessProfile returns the AccessProfile field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAccessProfile() AccessProfilesForProjectListDto {
	if o == nil || IsNil(o.AccessProfile) {
		var ret AccessProfilesForProjectListDto
		return ret
	}
	return *o.AccessProfile
}

// GetAccessProfileOk returns a tuple with the AccessProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAccessProfileOk() (*AccessProfilesForProjectListDto, bool) {
	if o == nil || IsNil(o.AccessProfile) {
		return nil, false
	}
	return o.AccessProfile, true
}

// HasAccessProfile returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAccessProfile() bool {
	if o != nil && !IsNil(o.AccessProfile) {
		return true
	}

	return false
}

// SetAccessProfile gets a reference to the given AccessProfilesForProjectListDto and assigns it to the AccessProfile field.
func (o *ProjectForListDto) SetAccessProfile(v AccessProfilesForProjectListDto) {
	o.AccessProfile = &v
}

// GetKubernetesProfiles returns the KubernetesProfiles field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubernetesProfiles() KubernetesProfilesLisForPollerDto {
	if o == nil || IsNil(o.KubernetesProfiles) {
		var ret KubernetesProfilesLisForPollerDto
		return ret
	}
	return *o.KubernetesProfiles
}

// GetKubernetesProfilesOk returns a tuple with the KubernetesProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubernetesProfilesOk() (*KubernetesProfilesLisForPollerDto, bool) {
	if o == nil || IsNil(o.KubernetesProfiles) {
		return nil, false
	}
	return o.KubernetesProfiles, true
}

// HasKubernetesProfiles returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesProfiles() bool {
	if o != nil && !IsNil(o.KubernetesProfiles) {
		return true
	}

	return false
}

// SetKubernetesProfiles gets a reference to the given KubernetesProfilesLisForPollerDto and assigns it to the KubernetesProfiles field.
func (o *ProjectForListDto) SetKubernetesProfiles(v KubernetesProfilesLisForPollerDto) {
	o.KubernetesProfiles = &v
}

// GetOpaProfile returns the OpaProfile field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOpaProfile() OpaProfileListDto {
	if o == nil || IsNil(o.OpaProfile) {
		var ret OpaProfileListDto
		return ret
	}
	return *o.OpaProfile
}

// GetOpaProfileOk returns a tuple with the OpaProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOpaProfileOk() (*OpaProfileListDto, bool) {
	if o == nil || IsNil(o.OpaProfile) {
		return nil, false
	}
	return o.OpaProfile, true
}

// HasOpaProfile returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOpaProfile() bool {
	if o != nil && !IsNil(o.OpaProfile) {
		return true
	}

	return false
}

// SetOpaProfile gets a reference to the given OpaProfileListDto and assigns it to the OpaProfile field.
func (o *ProjectForListDto) SetOpaProfile(v OpaProfileListDto) {
	o.OpaProfile = &v
}

// GetKubernetesAlerts returns the KubernetesAlerts field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubernetesAlerts() []KubernetesAlertDto {
	if o == nil || IsNil(o.KubernetesAlerts) {
		var ret []KubernetesAlertDto
		return ret
	}
	return o.KubernetesAlerts
}

// GetKubernetesAlertsOk returns a tuple with the KubernetesAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubernetesAlertsOk() ([]KubernetesAlertDto, bool) {
	if o == nil || IsNil(o.KubernetesAlerts) {
		return nil, false
	}
	return o.KubernetesAlerts, true
}

// HasKubernetesAlerts returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesAlerts() bool {
	if o != nil && !IsNil(o.KubernetesAlerts) {
		return true
	}

	return false
}

// SetKubernetesAlerts gets a reference to the given []KubernetesAlertDto and assigns it to the KubernetesAlerts field.
func (o *ProjectForListDto) SetKubernetesAlerts(v []KubernetesAlertDto) {
	o.KubernetesAlerts = v
}

// GetS3BucketName returns the S3BucketName field value if set, zero value otherwise.
func (o *ProjectForListDto) GetS3BucketName() string {
	if o == nil || IsNil(o.S3BucketName) {
		var ret string
		return ret
	}
	return *o.S3BucketName
}

// GetS3BucketNameOk returns a tuple with the S3BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetS3BucketNameOk() (*string, bool) {
	if o == nil || IsNil(o.S3BucketName) {
		return nil, false
	}
	return o.S3BucketName, true
}

// HasS3BucketName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3BucketName() bool {
	if o != nil && !IsNil(o.S3BucketName) {
		return true
	}

	return false
}

// SetS3BucketName gets a reference to the given string and assigns it to the S3BucketName field.
func (o *ProjectForListDto) SetS3BucketName(v string) {
	o.S3BucketName = &v
}

// GetS3AccessKeyId returns the S3AccessKeyId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetS3AccessKeyId() string {
	if o == nil || IsNil(o.S3AccessKeyId) {
		var ret string
		return ret
	}
	return *o.S3AccessKeyId
}

// GetS3AccessKeyIdOk returns a tuple with the S3AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetS3AccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.S3AccessKeyId) {
		return nil, false
	}
	return o.S3AccessKeyId, true
}

// HasS3AccessKeyId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3AccessKeyId() bool {
	if o != nil && !IsNil(o.S3AccessKeyId) {
		return true
	}

	return false
}

// SetS3AccessKeyId gets a reference to the given string and assigns it to the S3AccessKeyId field.
func (o *ProjectForListDto) SetS3AccessKeyId(v string) {
	o.S3AccessKeyId = &v
}

// GetS3SecretKey returns the S3SecretKey field value if set, zero value otherwise.
func (o *ProjectForListDto) GetS3SecretKey() string {
	if o == nil || IsNil(o.S3SecretKey) {
		var ret string
		return ret
	}
	return *o.S3SecretKey
}

// GetS3SecretKeyOk returns a tuple with the S3SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetS3SecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.S3SecretKey) {
		return nil, false
	}
	return o.S3SecretKey, true
}

// HasS3SecretKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3SecretKey() bool {
	if o != nil && !IsNil(o.S3SecretKey) {
		return true
	}

	return false
}

// SetS3SecretKey gets a reference to the given string and assigns it to the S3SecretKey field.
func (o *ProjectForListDto) SetS3SecretKey(v string) {
	o.S3SecretKey = &v
}

// GetS3Endpoint returns the S3Endpoint field value if set, zero value otherwise.
func (o *ProjectForListDto) GetS3Endpoint() string {
	if o == nil || IsNil(o.S3Endpoint) {
		var ret string
		return ret
	}
	return *o.S3Endpoint
}

// GetS3EndpointOk returns a tuple with the S3Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetS3EndpointOk() (*string, bool) {
	if o == nil || IsNil(o.S3Endpoint) {
		return nil, false
	}
	return o.S3Endpoint, true
}

// HasS3Endpoint returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3Endpoint() bool {
	if o != nil && !IsNil(o.S3Endpoint) {
		return true
	}

	return false
}

// SetS3Endpoint gets a reference to the given string and assigns it to the S3Endpoint field.
func (o *ProjectForListDto) SetS3Endpoint(v string) {
	o.S3Endpoint = &v
}

// GetS3Region returns the S3Region field value if set, zero value otherwise.
func (o *ProjectForListDto) GetS3Region() string {
	if o == nil || IsNil(o.S3Region) {
		var ret string
		return ret
	}
	return *o.S3Region
}

// GetS3RegionOk returns a tuple with the S3Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetS3RegionOk() (*string, bool) {
	if o == nil || IsNil(o.S3Region) {
		return nil, false
	}
	return o.S3Region, true
}

// HasS3Region returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3Region() bool {
	if o != nil && !IsNil(o.S3Region) {
		return true
	}

	return false
}

// SetS3Region gets a reference to the given string and assigns it to the S3Region field.
func (o *ProjectForListDto) SetS3Region(v string) {
	o.S3Region = &v
}

// GetIsDeleteCluster returns the IsDeleteCluster field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsDeleteCluster() bool {
	if o == nil || IsNil(o.IsDeleteCluster) {
		var ret bool
		return ret
	}
	return *o.IsDeleteCluster
}

// GetIsDeleteClusterOk returns a tuple with the IsDeleteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsDeleteClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleteCluster) {
		return nil, false
	}
	return o.IsDeleteCluster, true
}

// HasIsDeleteCluster returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsDeleteCluster() bool {
	if o != nil && !IsNil(o.IsDeleteCluster) {
		return true
	}

	return false
}

// SetIsDeleteCluster gets a reference to the given bool and assigns it to the IsDeleteCluster field.
func (o *ProjectForListDto) SetIsDeleteCluster(v bool) {
	o.IsDeleteCluster = &v
}

// GetTaikunLBFlavor returns the TaikunLBFlavor field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTaikunLBFlavor() string {
	if o == nil || IsNil(o.TaikunLBFlavor) {
		var ret string
		return ret
	}
	return *o.TaikunLBFlavor
}

// GetTaikunLBFlavorOk returns a tuple with the TaikunLBFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTaikunLBFlavorOk() (*string, bool) {
	if o == nil || IsNil(o.TaikunLBFlavor) {
		return nil, false
	}
	return o.TaikunLBFlavor, true
}

// HasTaikunLBFlavor returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunLBFlavor() bool {
	if o != nil && !IsNil(o.TaikunLBFlavor) {
		return true
	}

	return false
}

// SetTaikunLBFlavor gets a reference to the given string and assigns it to the TaikunLBFlavor field.
func (o *ProjectForListDto) SetTaikunLBFlavor(v string) {
	o.TaikunLBFlavor = &v
}

// GetTaikunLBPrivateKey returns the TaikunLBPrivateKey field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTaikunLBPrivateKey() string {
	if o == nil || IsNil(o.TaikunLBPrivateKey) {
		var ret string
		return ret
	}
	return *o.TaikunLBPrivateKey
}

// GetTaikunLBPrivateKeyOk returns a tuple with the TaikunLBPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTaikunLBPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TaikunLBPrivateKey) {
		return nil, false
	}
	return o.TaikunLBPrivateKey, true
}

// HasTaikunLBPrivateKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunLBPrivateKey() bool {
	if o != nil && !IsNil(o.TaikunLBPrivateKey) {
		return true
	}

	return false
}

// SetTaikunLBPrivateKey gets a reference to the given string and assigns it to the TaikunLBPrivateKey field.
func (o *ProjectForListDto) SetTaikunLBPrivateKey(v string) {
	o.TaikunLBPrivateKey = &v
}

// GetTaikunLBPublicKey returns the TaikunLBPublicKey field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTaikunLBPublicKey() string {
	if o == nil || IsNil(o.TaikunLBPublicKey) {
		var ret string
		return ret
	}
	return *o.TaikunLBPublicKey
}

// GetTaikunLBPublicKeyOk returns a tuple with the TaikunLBPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTaikunLBPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TaikunLBPublicKey) {
		return nil, false
	}
	return o.TaikunLBPublicKey, true
}

// HasTaikunLBPublicKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunLBPublicKey() bool {
	if o != nil && !IsNil(o.TaikunLBPublicKey) {
		return true
	}

	return false
}

// SetTaikunLBPublicKey gets a reference to the given string and assigns it to the TaikunLBPublicKey field.
func (o *ProjectForListDto) SetTaikunLBPublicKey(v string) {
	o.TaikunLBPublicKey = &v
}

// GetRouterIdStartRange returns the RouterIdStartRange field value if set, zero value otherwise.
func (o *ProjectForListDto) GetRouterIdStartRange() int32 {
	if o == nil || IsNil(o.RouterIdStartRange) {
		var ret int32
		return ret
	}
	return *o.RouterIdStartRange
}

// GetRouterIdStartRangeOk returns a tuple with the RouterIdStartRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetRouterIdStartRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.RouterIdStartRange) {
		return nil, false
	}
	return o.RouterIdStartRange, true
}

// HasRouterIdStartRange returns a boolean if a field has been set.
func (o *ProjectForListDto) HasRouterIdStartRange() bool {
	if o != nil && !IsNil(o.RouterIdStartRange) {
		return true
	}

	return false
}

// SetRouterIdStartRange gets a reference to the given int32 and assigns it to the RouterIdStartRange field.
func (o *ProjectForListDto) SetRouterIdStartRange(v int32) {
	o.RouterIdStartRange = &v
}

// GetRouterIdEndRange returns the RouterIdEndRange field value if set, zero value otherwise.
func (o *ProjectForListDto) GetRouterIdEndRange() int32 {
	if o == nil || IsNil(o.RouterIdEndRange) {
		var ret int32
		return ret
	}
	return *o.RouterIdEndRange
}

// GetRouterIdEndRangeOk returns a tuple with the RouterIdEndRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetRouterIdEndRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.RouterIdEndRange) {
		return nil, false
	}
	return o.RouterIdEndRange, true
}

// HasRouterIdEndRange returns a boolean if a field has been set.
func (o *ProjectForListDto) HasRouterIdEndRange() bool {
	if o != nil && !IsNil(o.RouterIdEndRange) {
		return true
	}

	return false
}

// SetRouterIdEndRange gets a reference to the given int32 and assigns it to the RouterIdEndRange field.
func (o *ProjectForListDto) SetRouterIdEndRange(v int32) {
	o.RouterIdEndRange = &v
}

// GetTaikunPrivateSSHKey returns the TaikunPrivateSSHKey field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTaikunPrivateSSHKey() string {
	if o == nil || IsNil(o.TaikunPrivateSSHKey) {
		var ret string
		return ret
	}
	return *o.TaikunPrivateSSHKey
}

// GetTaikunPrivateSSHKeyOk returns a tuple with the TaikunPrivateSSHKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTaikunPrivateSSHKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TaikunPrivateSSHKey) {
		return nil, false
	}
	return o.TaikunPrivateSSHKey, true
}

// HasTaikunPrivateSSHKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunPrivateSSHKey() bool {
	if o != nil && !IsNil(o.TaikunPrivateSSHKey) {
		return true
	}

	return false
}

// SetTaikunPrivateSSHKey gets a reference to the given string and assigns it to the TaikunPrivateSSHKey field.
func (o *ProjectForListDto) SetTaikunPrivateSSHKey(v string) {
	o.TaikunPrivateSSHKey = &v
}

// GetTaikunPublicSSHKey returns the TaikunPublicSSHKey field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTaikunPublicSSHKey() string {
	if o == nil || IsNil(o.TaikunPublicSSHKey) {
		var ret string
		return ret
	}
	return *o.TaikunPublicSSHKey
}

// GetTaikunPublicSSHKeyOk returns a tuple with the TaikunPublicSSHKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTaikunPublicSSHKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TaikunPublicSSHKey) {
		return nil, false
	}
	return o.TaikunPublicSSHKey, true
}

// HasTaikunPublicSSHKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunPublicSSHKey() bool {
	if o != nil && !IsNil(o.TaikunPublicSSHKey) {
		return true
	}

	return false
}

// SetTaikunPublicSSHKey gets a reference to the given string and assigns it to the TaikunPublicSSHKey field.
func (o *ProjectForListDto) SetTaikunPublicSSHKey(v string) {
	o.TaikunPublicSSHKey = &v
}

// GetGoogleProjectId returns the GoogleProjectId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetGoogleProjectId() string {
	if o == nil || IsNil(o.GoogleProjectId) {
		var ret string
		return ret
	}
	return *o.GoogleProjectId
}

// GetGoogleProjectIdOk returns a tuple with the GoogleProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetGoogleProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleProjectId) {
		return nil, false
	}
	return o.GoogleProjectId, true
}

// HasGoogleProjectId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasGoogleProjectId() bool {
	if o != nil && !IsNil(o.GoogleProjectId) {
		return true
	}

	return false
}

// SetGoogleProjectId gets a reference to the given string and assigns it to the GoogleProjectId field.
func (o *ProjectForListDto) SetGoogleProjectId(v string) {
	o.GoogleProjectId = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *ProjectForListDto) GetCidr() string {
	if o == nil || IsNil(o.Cidr) {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetCidrOk() (*string, bool) {
	if o == nil || IsNil(o.Cidr) {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCidr() bool {
	if o != nil && !IsNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *ProjectForListDto) SetCidr(v string) {
	o.Cidr = &v
}

// GetNetMask returns the NetMask field value if set, zero value otherwise.
func (o *ProjectForListDto) GetNetMask() int32 {
	if o == nil || IsNil(o.NetMask) {
		var ret int32
		return ret
	}
	return *o.NetMask
}

// GetNetMaskOk returns a tuple with the NetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetNetMaskOk() (*int32, bool) {
	if o == nil || IsNil(o.NetMask) {
		return nil, false
	}
	return o.NetMask, true
}

// HasNetMask returns a boolean if a field has been set.
func (o *ProjectForListDto) HasNetMask() bool {
	if o != nil && !IsNil(o.NetMask) {
		return true
	}

	return false
}

// SetNetMask gets a reference to the given int32 and assigns it to the NetMask field.
func (o *ProjectForListDto) SetNetMask(v int32) {
	o.NetMask = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *ProjectForListDto) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *ProjectForListDto) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *ProjectForListDto) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *ProjectForListDto) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ProjectForListDto) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *ProjectForListDto) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetIsKubevapEnabled returns the IsKubevapEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsKubevapEnabled() bool {
	if o == nil || IsNil(o.IsKubevapEnabled) {
		var ret bool
		return ret
	}
	return *o.IsKubevapEnabled
}

// GetIsKubevapEnabledOk returns a tuple with the IsKubevapEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsKubevapEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubevapEnabled) {
		return nil, false
	}
	return o.IsKubevapEnabled, true
}

// HasIsKubevapEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsKubevapEnabled() bool {
	if o != nil && !IsNil(o.IsKubevapEnabled) {
		return true
	}

	return false
}

// SetIsKubevapEnabled gets a reference to the given bool and assigns it to the IsKubevapEnabled field.
func (o *ProjectForListDto) SetIsKubevapEnabled(v bool) {
	o.IsKubevapEnabled = &v
}

// GetTanzuReleaseVersion returns the TanzuReleaseVersion field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTanzuReleaseVersion() string {
	if o == nil || IsNil(o.TanzuReleaseVersion) {
		var ret string
		return ret
	}
	return *o.TanzuReleaseVersion
}

// GetTanzuReleaseVersionOk returns a tuple with the TanzuReleaseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTanzuReleaseVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TanzuReleaseVersion) {
		return nil, false
	}
	return o.TanzuReleaseVersion, true
}

// HasTanzuReleaseVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTanzuReleaseVersion() bool {
	if o != nil && !IsNil(o.TanzuReleaseVersion) {
		return true
	}

	return false
}

// SetTanzuReleaseVersion gets a reference to the given string and assigns it to the TanzuReleaseVersion field.
func (o *ProjectForListDto) SetTanzuReleaseVersion(v string) {
	o.TanzuReleaseVersion = &v
}

// GetNfsDiskSize returns the NfsDiskSize field value if set, zero value otherwise.
func (o *ProjectForListDto) GetNfsDiskSize() int32 {
	if o == nil || IsNil(o.NfsDiskSize) {
		var ret int32
		return ret
	}
	return *o.NfsDiskSize
}

// GetNfsDiskSizeOk returns a tuple with the NfsDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetNfsDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.NfsDiskSize) {
		return nil, false
	}
	return o.NfsDiskSize, true
}

// HasNfsDiskSize returns a boolean if a field has been set.
func (o *ProjectForListDto) HasNfsDiskSize() bool {
	if o != nil && !IsNil(o.NfsDiskSize) {
		return true
	}

	return false
}

// SetNfsDiskSize gets a reference to the given int32 and assigns it to the NfsDiskSize field.
func (o *ProjectForListDto) SetNfsDiskSize(v int32) {
	o.NfsDiskSize = &v
}

// GetKubevapEnabeledKubernetesVersions returns the KubevapEnabeledKubernetesVersions field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubevapEnabeledKubernetesVersions() []string {
	if o == nil || IsNil(o.KubevapEnabeledKubernetesVersions) {
		var ret []string
		return ret
	}
	return o.KubevapEnabeledKubernetesVersions
}

// GetKubevapEnabeledKubernetesVersionsOk returns a tuple with the KubevapEnabeledKubernetesVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubevapEnabeledKubernetesVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.KubevapEnabeledKubernetesVersions) {
		return nil, false
	}
	return o.KubevapEnabeledKubernetesVersions, true
}

// HasKubevapEnabeledKubernetesVersions returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubevapEnabeledKubernetesVersions() bool {
	if o != nil && !IsNil(o.KubevapEnabeledKubernetesVersions) {
		return true
	}

	return false
}

// SetKubevapEnabeledKubernetesVersions gets a reference to the given []string and assigns it to the KubevapEnabeledKubernetesVersions field.
func (o *ProjectForListDto) SetKubevapEnabeledKubernetesVersions(v []string) {
	o.KubevapEnabeledKubernetesVersions = v
}

// GetAwsProjectAZSubnets returns the AwsProjectAZSubnets field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAwsProjectAZSubnets() []AwsProjectAZSubnetDto {
	if o == nil || IsNil(o.AwsProjectAZSubnets) {
		var ret []AwsProjectAZSubnetDto
		return ret
	}
	return o.AwsProjectAZSubnets
}

// GetAwsProjectAZSubnetsOk returns a tuple with the AwsProjectAZSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAwsProjectAZSubnetsOk() ([]AwsProjectAZSubnetDto, bool) {
	if o == nil || IsNil(o.AwsProjectAZSubnets) {
		return nil, false
	}
	return o.AwsProjectAZSubnets, true
}

// HasAwsProjectAZSubnets returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAwsProjectAZSubnets() bool {
	if o != nil && !IsNil(o.AwsProjectAZSubnets) {
		return true
	}

	return false
}

// SetAwsProjectAZSubnets gets a reference to the given []AwsProjectAZSubnetDto and assigns it to the AwsProjectAZSubnets field.
func (o *ProjectForListDto) SetAwsProjectAZSubnets(v []AwsProjectAZSubnetDto) {
	o.AwsProjectAZSubnets = v
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAvailabilityZones() []string {
	if o == nil || IsNil(o.AvailabilityZones) {
		var ret []string
		return ret
	}
	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAvailabilityZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailabilityZones) {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAvailabilityZones() bool {
	if o != nil && !IsNil(o.AvailabilityZones) {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []string and assigns it to the AvailabilityZones field.
func (o *ProjectForListDto) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = v
}

func (o ProjectForListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectForListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.JobUrl) {
		toSerialize["jobUrl"] = o.JobUrl
	}
	if !IsNil(o.TopicName) {
		toSerialize["topicName"] = o.TopicName
	}
	if !IsNil(o.ImageName) {
		toSerialize["imageName"] = o.ImageName
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.IsKubernetes) {
		toSerialize["isKubernetes"] = o.IsKubernetes
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.IsBackupEnabled) {
		toSerialize["isBackupEnabled"] = o.IsBackupEnabled
	}
	if !IsNil(o.IsMonitoringEnabled) {
		toSerialize["isMonitoringEnabled"] = o.IsMonitoringEnabled
	}
	if !IsNil(o.IsOpaEnabled) {
		toSerialize["isOpaEnabled"] = o.IsOpaEnabled
	}
	if !IsNil(o.IsAutoUpgrade) {
		toSerialize["isAutoUpgrade"] = o.IsAutoUpgrade
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if !IsNil(o.HasSelectedFlavors) {
		toSerialize["hasSelectedFlavors"] = o.HasSelectedFlavors
	}
	if !IsNil(o.Master) {
		toSerialize["master"] = o.Master
	}
	if !IsNil(o.MasterReady) {
		toSerialize["masterReady"] = o.MasterReady
	}
	if !IsNil(o.QuotaId) {
		toSerialize["quotaId"] = o.QuotaId
	}
	if !IsNil(o.Bastion) {
		toSerialize["bastion"] = o.Bastion
	}
	if !IsNil(o.AccessProfileRevision) {
		toSerialize["accessProfileRevision"] = o.AccessProfileRevision
	}
	if !IsNil(o.OpaProfileRevision) {
		toSerialize["opaProfileRevision"] = o.OpaProfileRevision
	}
	if !IsNil(o.CloudCredentialName) {
		toSerialize["cloudCredentialName"] = o.CloudCredentialName
	}
	if !IsNil(o.CloudCredentialId) {
		toSerialize["cloudCredentialId"] = o.CloudCredentialId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partnerId"] = o.PartnerId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.AccessIp) {
		toSerialize["accessIp"] = o.AccessIp
	}
	if !IsNil(o.TotalServersCount) {
		toSerialize["totalServersCount"] = o.TotalServersCount
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.KubesprayCurrentVersion) {
		toSerialize["kubesprayCurrentVersion"] = o.KubesprayCurrentVersion
	}
	if !IsNil(o.KubesprayTargetVersion) {
		toSerialize["kubesprayTargetVersion"] = o.KubesprayTargetVersion
	}
	if !IsNil(o.KubernetesCurrentVersion) {
		toSerialize["kubernetesCurrentVersion"] = o.KubernetesCurrentVersion
	}
	if !IsNil(o.KubernetesTargetVersion) {
		toSerialize["kubernetesTargetVersion"] = o.KubernetesTargetVersion
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.BoundUsers) {
		toSerialize["boundUsers"] = o.BoundUsers
	}
	if !IsNil(o.MonitoringCredential) {
		toSerialize["monitoringCredential"] = o.MonitoringCredential
	}
	if !IsNil(o.IsAutoscalingEnabled) {
		toSerialize["isAutoscalingEnabled"] = o.IsAutoscalingEnabled
	}
	if !IsNil(o.Flavors) {
		toSerialize["flavors"] = o.Flavors
	}
	if !IsNil(o.AccessProfile) {
		toSerialize["accessProfile"] = o.AccessProfile
	}
	if !IsNil(o.KubernetesProfiles) {
		toSerialize["kubernetesProfiles"] = o.KubernetesProfiles
	}
	if !IsNil(o.OpaProfile) {
		toSerialize["opaProfile"] = o.OpaProfile
	}
	if !IsNil(o.KubernetesAlerts) {
		toSerialize["kubernetesAlerts"] = o.KubernetesAlerts
	}
	if !IsNil(o.S3BucketName) {
		toSerialize["s3BucketName"] = o.S3BucketName
	}
	if !IsNil(o.S3AccessKeyId) {
		toSerialize["s3AccessKeyId"] = o.S3AccessKeyId
	}
	if !IsNil(o.S3SecretKey) {
		toSerialize["s3SecretKey"] = o.S3SecretKey
	}
	if !IsNil(o.S3Endpoint) {
		toSerialize["s3Endpoint"] = o.S3Endpoint
	}
	if !IsNil(o.S3Region) {
		toSerialize["s3Region"] = o.S3Region
	}
	if !IsNil(o.IsDeleteCluster) {
		toSerialize["isDeleteCluster"] = o.IsDeleteCluster
	}
	if !IsNil(o.TaikunLBFlavor) {
		toSerialize["taikunLBFlavor"] = o.TaikunLBFlavor
	}
	if !IsNil(o.TaikunLBPrivateKey) {
		toSerialize["taikunLBPrivateKey"] = o.TaikunLBPrivateKey
	}
	if !IsNil(o.TaikunLBPublicKey) {
		toSerialize["taikunLBPublicKey"] = o.TaikunLBPublicKey
	}
	if !IsNil(o.RouterIdStartRange) {
		toSerialize["routerIdStartRange"] = o.RouterIdStartRange
	}
	if !IsNil(o.RouterIdEndRange) {
		toSerialize["routerIdEndRange"] = o.RouterIdEndRange
	}
	if !IsNil(o.TaikunPrivateSSHKey) {
		toSerialize["taikunPrivateSSHKey"] = o.TaikunPrivateSSHKey
	}
	if !IsNil(o.TaikunPublicSSHKey) {
		toSerialize["taikunPublicSSHKey"] = o.TaikunPublicSSHKey
	}
	if !IsNil(o.GoogleProjectId) {
		toSerialize["googleProjectId"] = o.GoogleProjectId
	}
	if !IsNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}
	if !IsNil(o.NetMask) {
		toSerialize["netMask"] = o.NetMask
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["privateIp"] = o.PrivateIp
	}
	if !IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !IsNil(o.IsKubevapEnabled) {
		toSerialize["isKubevapEnabled"] = o.IsKubevapEnabled
	}
	if !IsNil(o.TanzuReleaseVersion) {
		toSerialize["tanzuReleaseVersion"] = o.TanzuReleaseVersion
	}
	if !IsNil(o.NfsDiskSize) {
		toSerialize["nfsDiskSize"] = o.NfsDiskSize
	}
	if !IsNil(o.KubevapEnabeledKubernetesVersions) {
		toSerialize["kubevapEnabeledKubernetesVersions"] = o.KubevapEnabeledKubernetesVersions
	}
	if !IsNil(o.AwsProjectAZSubnets) {
		toSerialize["awsProjectAZSubnets"] = o.AwsProjectAZSubnets
	}
	if !IsNil(o.AvailabilityZones) {
		toSerialize["availabilityZones"] = o.AvailabilityZones
	}
	return toSerialize, nil
}

type NullableProjectForListDto struct {
	value *ProjectForListDto
	isSet bool
}

func (v NullableProjectForListDto) Get() *ProjectForListDto {
	return v.value
}

func (v *NullableProjectForListDto) Set(val *ProjectForListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectForListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectForListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectForListDto(val *ProjectForListDto) *NullableProjectForListDto {
	return &NullableProjectForListDto{value: val, isSet: true}
}

func (v NullableProjectForListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectForListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


