openapi: 3.0.1
info:
  contact:
    email: noreply@itera.io
    name: taikun cloud
    url: http://taikun.cloud/
  description: This Api will be responsible for overall data distribution and authorization.
  title: Taikun - WebApi
  version: v1
servers:
- url: /
security:
- Bearer: []
paths:
  /api/v{v}/AccessProfiles/create:
    post:
      operationId: AccessProfiles_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAccessProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAccessProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAccessProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create access profile
      tags:
      - AccessProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AccessProfiles/update/{id}:
    put:
      operationId: AccessProfiles_Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateAccessProfileDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessProfileDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessProfileDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAccessProfileDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update access profile
      tags:
      - AccessProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AccessProfiles/lockmanager:
    post:
      operationId: AccessProfiles_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccessProfilesLockManagementCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfilesLockManagementCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AccessProfilesLockManagementCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccessProfilesLockManagementCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/unlock access profiles
      tags:
      - AccessProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AccessProfiles/list:
    get:
      operationId: AccessProfiles_AccessProfilesForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve access profiles by organization Id
      tags:
      - AccessProfiles
  /api/v{v}/AccessProfiles:
    get:
      operationId: AccessProfiles_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccessProfilesList'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfilesList'
            text/json:
              schema:
                $ref: '#/components/schemas/AccessProfilesList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all access profiles
      tags:
      - AccessProfiles
  /api/v{v}/AccessProfiles/{id}:
    delete:
      operationId: AccessProfiles_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete access profile by Id
      tags:
      - AccessProfiles
  /api/v{v}/Admin/projects/list:
    get:
      operationId: Admin_ProjectsList
      parameters:
      - description: Limits projects size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminProjectsList'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProjectsList'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminProjectsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Projects for admin
      tags:
      - Admin
  /api/v{v}/Admin/keycloak/list:
    get:
      operationId: Admin_KeycloakList
      parameters:
      - description: Limits projects size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminKeycloakList'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminKeycloakList'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminKeycloakList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Keycloak list for admin
      tags:
      - Admin
  /api/v{v}/Admin/projects/update/version:
    post:
      operationId: Admin_UpdateProjectVersion
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminProjectUpdateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProjectUpdateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminProjectUpdateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminProjectUpdateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Projects update for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/projects/update/kubeconfig:
    post:
      operationId: Admin_UpdateProjectKubeConfig
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminUpdateProjectKubeConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateProjectKubeConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateProjectKubeConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminUpdateProjectKubeConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Projects update for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/projects/update/userkube:
    post:
      operationId: Admin_UpdateUserKubeConfig
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserKubeConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserKubeConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserKubeConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserKubeConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Projects update for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/users/list:
    get:
      operationId: Admin_UsersList
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminUsersList'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUsersList'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminUsersList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Users for admin
      tags:
      - Admin
  /api/v{v}/Admin/users/update/password:
    post:
      operationId: Admin_UpdateUserPassword
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdatePasswordCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdatePasswordCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdatePasswordCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdatePasswordCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: User password update for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/users/make/csm:
    post:
      operationId: Admin_MakeCsmUser
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MakeCsmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/MakeCsmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/MakeCsmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MakeCsmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: User csm update for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/users/make/owner:
    post:
      operationId: Admin_MakeOwner
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MakeOwnerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/MakeOwnerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/MakeOwnerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MakeOwnerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: User choose owner for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/users/update/email:
    post:
      operationId: Admin_UpdateUserEmail
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdateEmailCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdateEmailCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdateEmailCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminUsersUpdateEmailCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: User email update for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/users/create:
    post:
      operationId: Admin_CreateUser
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: User creation for admin
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/organizations/add/balance:
    post:
      operationId: Admin_AddBalance
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminAddBalanceCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAddBalanceCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminAddBalanceCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminAddBalanceCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add balance for organization
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/organizations/delete:
    post:
      operationId: Admin_DeleteOrganization
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationsDeleteCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationsDeleteCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationsDeleteCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminOrganizationsDeleteCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete organization
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/cloudcredentials/billing:
    post:
      operationId: Admin_BillingOperations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdminBillingOperationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminBillingOperationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AdminBillingOperationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdminBillingOperationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: "Billing operations: enable/disable billing"
      tags:
      - Admin
      x-codegen-request-body-name: body
  /api/v{v}/Admin/organizations/list:
    get:
      operationId: Admin_Organizations
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: partnerId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdminOrganizationsList'
            application/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationsList'
            text/json:
              schema:
                $ref: '#/components/schemas/AdminOrganizationsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Organizations for admin
      tags:
      - Admin
  /api/v{v}/AlertingIntegrations/{alertingProfileId}:
    get:
      operationId: AlertingIntegrations_List
      parameters:
      - in: path
        name: alertingProfileId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AlertingIntegrationsListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertingIntegrationsListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertingIntegrationsListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List alerting integrations by profile id
      tags:
      - AlertingIntegrations
  /api/v{v}/AlertingIntegrations/create:
    post:
      operationId: AlertingIntegrations_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAlertingIntegrationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertingIntegrationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAlertingIntegrationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAlertingIntegrationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create alerting profile alerting integration
      tags:
      - AlertingIntegrations
      x-codegen-request-body-name: body
  /api/v{v}/AlertingIntegrations/edit:
    put:
      operationId: AlertingIntegrations_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditAlertingIntegrationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditAlertingIntegrationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditAlertingIntegrationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditAlertingIntegrationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit alerting profile alerting integration
      tags:
      - AlertingIntegrations
      x-codegen-request-body-name: body
  /api/v{v}/AlertingIntegrations/{id}:
    delete:
      operationId: AlertingIntegrations_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete alerting profile alerting integration
      tags:
      - AlertingIntegrations
  /api/v{v}/AlertingProfiles/list:
    get:
      operationId: AlertingProfiles_AlertingProfilesForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all Alerting profiles for organization
      tags:
      - AlertingProfiles
  /api/v{v}/AlertingProfiles:
    get:
      operationId: AlertingProfiles_List
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: searchId
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertingProfilesList'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertingProfilesList'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertingProfilesList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all Alerting profiles
      tags:
      - AlertingProfiles
  /api/v{v}/AlertingProfiles/create:
    post:
      operationId: AlertingProfiles_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAlertingProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertingProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAlertingProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAlertingProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Alerting profiles
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/edit:
    post:
      operationId: AlertingProfiles_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateAlertingProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertingProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAlertingProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAlertingProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Alerting profiles
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/assignemails/{id}:
    put:
      operationId: AlertingProfiles_AssignEmails
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingEmailDto'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingEmailDto'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingEmailDto'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingEmailDto'
              type: array
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Assign Alerting emails
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/assignwebhooks/{id}:
    put:
      operationId: AlertingProfiles_AssignWebhooks
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingWebhookDto'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingWebhookDto'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingWebhookDto'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AlertingWebhookDto'
              type: array
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Assign Alerting webhooks
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/delete:
    post:
      operationId: AlertingProfiles_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteAlertingProfilesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlertingProfilesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteAlertingProfilesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteAlertingProfilesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove Alerting profiles by Id
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/lockmanager:
    post:
      operationId: AlertingProfiles_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertingProfilesLockManagerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertingProfilesLockManagerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertingProfilesLockManagerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertingProfilesLockManagerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock Alerting profiles
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/attach:
    post:
      operationId: AlertingProfiles_Attach
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
        description: Attach command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Attach alerting profile to project.
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/detach:
    post:
      operationId: AlertingProfiles_Detach
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AttachDetachAlertingProfileCommand'
        description: Detach command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Detach alerting profile from project.
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AlertingProfiles/verifywebhook:
    post:
      operationId: AlertingProfiles_VerifyWebhook
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VerifyWebhookCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyWebhookCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyWebhookCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyWebhookCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Verify webhook endpoint
      tags:
      - AlertingProfiles
      x-codegen-request-body-name: body
  /api/v{v}/AllowedHost/list/{accessProfileId}:
    get:
      operationId: AllowedHost_List
      parameters:
      - in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AllowedHostList'
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedHostList'
            text/json:
              schema:
                $ref: '#/components/schemas/AllowedHostList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List allowed hosts by access profile id
      tags:
      - AllowedHost
  /api/v{v}/AllowedHost/create:
    post:
      operationId: AllowedHost_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAllowedHostCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllowedHostCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAllowedHostCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAllowedHostCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create access profile allowed host
      tags:
      - AllowedHost
      x-codegen-request-body-name: body
  /api/v{v}/AllowedHost/edit/{id}:
    put:
      operationId: AllowedHost_Edit
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditAllowedHostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/EditAllowedHostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/EditAllowedHostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditAllowedHostDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit access profile allowed host
      tags:
      - AllowedHost
      x-codegen-request-body-name: body
  /api/v{v}/AllowedHost/{id}:
    delete:
      operationId: AllowedHost_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete access profile allowed host
      tags:
      - AllowedHost
  /api/v{v}/Auth/login:
    post:
      operationId: Auth_Login
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LoginCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetToken'
            application/json:
              schema:
                $ref: '#/components/schemas/GetToken'
            text/json:
              schema:
                $ref: '#/components/schemas/GetToken'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Login to API by email and password
      tags:
      - Auth
      x-codegen-request-body-name: body
  /api/v{v}/Auth/refresh:
    post:
      operationId: Auth_RefreshToken
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RefreshTokenCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshTokenCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetToken'
            application/json:
              schema:
                $ref: '#/components/schemas/GetToken'
            text/json:
              schema:
                $ref: '#/components/schemas/GetToken'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Refresh bearer token that generated automatically by API
      tags:
      - Auth
      x-codegen-request-body-name: body
  /api/v{v}/Auth/forgotpassword:
    post:
      operationId: Auth_ForgotPassword
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Generate reset password token if you forgot password
      tags:
      - Auth
      x-codegen-request-body-name: body
  /api/v{v}/Auth/resetpassword:
    post:
      operationId: Auth_ResetPassword
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetPasswordCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Reset password
      tags:
      - Auth
      x-codegen-request-body-name: body
  /api/v{v}/Auth/trial:
    post:
      operationId: Auth_TryFree
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TryForFreeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/TryForFreeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/TryForFreeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TryForFreeCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Try free
      tags:
      - Auth
      x-codegen-request-body-name: body
  /api/v{v}/Autoscaling/enable:
    post:
      operationId: Autoscaling_EnableAutoscaling
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnableAutoscalingCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EnableAutoscalingCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EnableAutoscalingCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnableAutoscalingCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Enable autoscaling
      tags:
      - Autoscaling
      x-codegen-request-body-name: body
  /api/v{v}/Autoscaling/edit:
    post:
      operationId: Autoscaling_EditAutoscaling
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditAutoscalingCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditAutoscalingCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditAutoscalingCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditAutoscalingCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit autoscaling
      tags:
      - Autoscaling
      x-codegen-request-body-name: body
  /api/v{v}/Autoscaling/disable:
    post:
      operationId: Autoscaling_DisableAutoscaling
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DisableAutoscalingCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAutoscalingCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DisableAutoscalingCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DisableAutoscalingCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Disable autoscaling
      tags:
      - Autoscaling
      x-codegen-request-body-name: body
  /api/v{v}/Autoscaling/sync:
    post:
      operationId: Autoscaling_SyncAutoscaling
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AutoscalingSyncCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscalingSyncCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AutoscalingSyncCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AutoscalingSyncCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync autoscaling
      tags:
      - Autoscaling
      x-codegen-request-body-name: body
  /api/v{v}/Aws/create:
    post:
      operationId: Aws_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAwsCloudCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAwsCloudCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAwsCloudCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAwsCloudCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Aws credentials
      tags:
      - Aws
      x-codegen-request-body-name: body
  /api/v{v}/Aws/device-names:
    post:
      operationId: Aws_DeviceNames
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AwsBlockDeviceMappingsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AwsBlockDeviceMappingsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AwsBlockDeviceMappingsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AwsBlockDeviceMappingsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Aws device name list
      tags:
      - Aws
      x-codegen-request-body-name: body
  /api/v{v}/Aws/update:
    post:
      operationId: Aws_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateAwsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAwsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAwsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAwsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update AWS credentials
      tags:
      - Aws
      x-codegen-request-body-name: body
  /api/v{v}/Aws/regions:
    post:
      operationId: Aws_RegionList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegionListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RegionListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RegionListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegionListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AwsRegionDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwsRegionDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwsRegionDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve aws regions list
      tags:
      - Aws
      x-codegen-request-body-name: body
  /api/v{v}/Aws/zones:
    post:
      operationId: Aws_AwsZoneList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AmazonAvailabilityZonesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAvailabilityZonesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AmazonAvailabilityZonesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AmazonAvailabilityZonesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzResult'
            application/json:
              schema:
                $ref: '#/components/schemas/AzResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AzResult'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch Aws zones
      tags:
      - Aws
      x-codegen-request-body-name: body
  /api/v{v}/Aws/validate-owners:
    post:
      operationId: Aws_AwsValidateOwner
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AwsValidateOwnerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AwsValidateOwnerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AwsValidateOwnerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AwsValidateOwnerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Validate aws owner
      tags:
      - Aws
      x-codegen-request-body-name: body
  /api/v{v}/Aws/owners:
    get:
      operationId: Aws_AwsOwners
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve aws verified owner list
      tags:
      - Aws
  /api/v{v}/Aws/list:
    get:
      operationId: Aws_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AwsCredentialList'
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCredentialList'
            text/json:
              schema:
                $ref: '#/components/schemas/AwsCredentialList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of aws cloud credentials
      tags:
      - Aws
  /api/v{v}/Azure/create:
    post:
      operationId: Azure_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAzureCloudCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureCloudCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAzureCloudCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAzureCloudCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Azure credentials
      tags:
      - Azure
      x-codegen-request-body-name: body
  /api/v{v}/Azure/publishers/{cloudId}:
    get:
      operationId: Azure_Publishers
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzurePublishersList'
            application/json:
              schema:
                $ref: '#/components/schemas/AzurePublishersList'
            text/json:
              schema:
                $ref: '#/components/schemas/AzurePublishersList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List Azure publishers list
      tags:
      - Azure
  /api/v{v}/Azure/offers/{cloudId}/{publisher}:
    get:
      operationId: Azure_Offers
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: publisher
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureOffersList'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureOffersList'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureOffersList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List Azure offer list by publisher
      tags:
      - Azure
  /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}:
    get:
      operationId: Azure_Skus
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: publisher
        required: true
        schema:
          type: string
      - in: path
        name: offer
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSkusList'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSkusList'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSkusList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List Azure skus list by publisher and offer
      tags:
      - Azure
  /api/v{v}/Azure/update:
    post:
      operationId: Azure_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateAzureCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAzureCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAzureCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAzureCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Azure credentials
      tags:
      - Azure
      x-codegen-request-body-name: body
  /api/v{v}/Azure/subscriptions:
    post:
      operationId: Azure_Subscriptions
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureSubscriptionListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Azure subscriptions list
      tags:
      - Azure
      x-codegen-request-body-name: body
  /api/v{v}/Azure/zones:
    post:
      operationId: Azure_Zones
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureZonesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureZonesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureZonesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureZonesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzResult'
            application/json:
              schema:
                $ref: '#/components/schemas/AzResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AzResult'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch Azure zone list
      tags:
      - Azure
      x-codegen-request-body-name: body
  /api/v{v}/Azure/locations:
    post:
      operationId: Azure_Locations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureLocationsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureLocationsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureLocationsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureLocationsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch Azure location list
      tags:
      - Azure
      x-codegen-request-body-name: body
  /api/v{v}/Azure/quota/list:
    post:
      operationId: Azure_Dashboard
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureDashboardCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDashboardCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureDashboardCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureDashboardCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AzureQuotaListRecordDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AzureQuotaListRecordDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AzureQuotaListRecordDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch Azure quota list
      tags:
      - Azure
      x-codegen-request-body-name: body
  /api/v{v}/Azure/list:
    get:
      operationId: Azure_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureCredentialList'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureCredentialList'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureCredentialList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of azure cloud credentials
      tags:
      - Azure
  /api/v{v}/Backup/create:
    post:
      operationId: Backup_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateBackupPolicyCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupPolicyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBackupPolicyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBackupPolicyCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add backup policy
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/clear/project:
    post:
      operationId: Backup_ClearProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClearProjectBackupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ClearProjectBackupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ClearProjectBackupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClearProjectBackupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete unfinished backup for project
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/schedules/{projectId}:
    get:
      operationId: Backup_ListAllSchedules
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListAllSchedules'
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllSchedules'
            text/json:
              schema:
                $ref: '#/components/schemas/ListAllSchedules'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all schedules
      tags:
      - Backup
  /api/v{v}/Backup/{projectId}/{name}:
    get:
      operationId: Backup_BackupByName
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackupDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BackupDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get backup info by name
      tags:
      - Backup
  /api/v{v}/Backup/describe/schedule/{projectId}/{name}:
    get:
      operationId: Backup_DescribeSchedule
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get schedule info by name
      tags:
      - Backup
  /api/v{v}/Backup/describe/backup/{projectId}/{name}:
    get:
      operationId: Backup_DescribeBackup
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get backup info by name
      tags:
      - Backup
  /api/v{v}/Backup/describe/restore/{projectId}/{name}:
    get:
      operationId: Backup_DescribeRestore
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: name
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get restore info by name
      tags:
      - Backup
  /api/v{v}/Backup/backups/{projectId}:
    get:
      operationId: Backup_ListAllBackups
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListAllBackups'
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllBackups'
            text/json:
              schema:
                $ref: '#/components/schemas/ListAllBackups'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all backups
      tags:
      - Backup
  /api/v{v}/Backup/restores/{projectId}:
    get:
      operationId: Backup_ListAllRestores
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListAllRestores'
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllRestores'
            text/json:
              schema:
                $ref: '#/components/schemas/ListAllRestores'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all restores
      tags:
      - Backup
  /api/v{v}/Backup/delete-requests/{projectId}:
    get:
      operationId: Backup_ListAllDeleteBackupRequests
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListAllDeleteBackupRequests'
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllDeleteBackupRequests'
            text/json:
              schema:
                $ref: '#/components/schemas/ListAllDeleteBackupRequests'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all delete backup requests
      tags:
      - Backup
  /api/v{v}/Backup/delete/schedule:
    post:
      operationId: Backup_DeleteSchedule
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteScheduleCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteScheduleCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteScheduleCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteScheduleCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove policy schedule
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/delete/restore:
    post:
      operationId: Backup_DeleteRestore
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRestoreCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRestoreCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRestoreCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRestoreCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove policy restore
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/delete/backup:
    post:
      operationId: Backup_DeleteBackup
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteBackupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteBackupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteBackupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove policy backup
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/delete/location:
    post:
      operationId: Backup_DeleteBackupLocation
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteBackupStorageLocationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackupStorageLocationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteBackupStorageLocationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteBackupStorageLocationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove backup location from project
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/restore:
    post:
      operationId: Backup_RestoreBackup
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RestoreBackupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RestoreBackupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Restore backup
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/location:
    post:
      operationId: Backup_ImportBackupStorage
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ImportBackupStorageLocationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ImportBackupStorageLocationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ImportBackupStorageLocationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ImportBackupStorageLocationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Import backup storage from source project to target project
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/location/{projectId}:
    get:
      operationId: Backup_ListAllBackupStorages
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListAllBackupStorageLocations'
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllBackupStorageLocations'
            text/json:
              schema:
                $ref: '#/components/schemas/ListAllBackupStorageLocations'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all backup locations
      tags:
      - Backup
  /api/v{v}/Backup/enablebackup:
    post:
      operationId: Backup_EnableBackup
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnableBackupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EnableBackupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EnableBackupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnableBackupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Enable backup by the projectId
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Backup/disablebackup:
    post:
      operationId: Backup_DisableBackup
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DisableBackupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DisableBackupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DisableBackupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DisableBackupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Disable backup by the projectId
      tags:
      - Backup
      x-codegen-request-body-name: body
  /api/v{v}/Billing:
    get:
      operationId: Billing_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: isDeleted
        schema:
          type: boolean
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingInfo'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve billing info
      tags:
      - Billing
  /api/v{v}/Billing/grouped:
    get:
      operationId: Billing_GroupedList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: periodDuration
        schema:
          type: string
      - in: query
        name: isDeleted
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/GroupedBillingInfo'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupedBillingInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupedBillingInfo'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a grouped list of billing summaries
      tags:
      - Billing
  /api/v{v}/Billing/export:
    get:
      operationId: Billing_ExportCsv
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: isDeleted
        schema:
          type: boolean
      - in: query
        name: isEmailEnabled
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Export Csv
      tags:
      - Billing
  /api/v{v}/Billing/add:
    post:
      operationId: Billing_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateBillingSummaryCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingSummaryCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBillingSummaryCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateBillingSummaryCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add billing summary
      tags:
      - Billing
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/available/packages:
    get:
      operationId: Catalog_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: catalogId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AvailablePackagesList'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePackagesList'
            text/json:
              schema:
                $ref: '#/components/schemas/AvailablePackagesList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all available packages
      tags:
      - Catalog
  /api/v{v}/Catalog/app-to-catalog:
    post:
      operationId: Catalog_CreateCatalogApp
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateCatalogAppCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCatalogAppCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCatalogAppCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCatalogAppCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add application to catalog
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/create-catalog:
    post:
      operationId: Catalog_CreateCatalog
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateCatalogCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCatalogCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCatalogCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCatalogCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create catalog for organization
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/edit-catalog:
    put:
      operationId: Catalog_EditCatalog
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditCatalogCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditCatalogCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditCatalogCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditCatalogCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit catalog for organization
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/edit-catalogapp-version:
    put:
      operationId: Catalog_EditCatalogAppVersion
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppVersionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppVersionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppVersionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppVersionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit catalog app version
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/edit-catalogapp-params:
    put:
      operationId: Catalog_EditCatalogAppParams
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppParamCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppParamCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppParamCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditCatalogAppParamCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit catalog app params
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/dropdown-list:
    get:
      operationId: Catalog_CatalogDropdown
      parameters:
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Catalog dropdown list for organization
      tags:
      - Catalog
  /api/v{v}/Catalog/list:
    get:
      operationId: Catalog_CatalogList
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogList'
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogList'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Catalog list for organization
      tags:
      - Catalog
  /api/v{v}/Catalog/catalog-app/{id}:
    get:
      operationId: Catalog_CatalogAppDetails
      parameters:
      - description: catalog app id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CatalogAppDetailsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogAppDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CatalogAppDetailsDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Catalog App details
      tags:
      - Catalog
  /api/v{v}/Catalog/catalog-app-params/{id}:
    get:
      operationId: Catalog_CatalogAppParamsDetails
      parameters:
      - description: catalog app id
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAppParamsDetailsDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAppParamsDetailsDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogAppParamsDetailsDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Catalog App Params details
      tags:
      - Catalog
  /api/v{v}/Catalog/available/{repoName}/{packageName}:
    get:
      operationId: Catalog_AvailablePackageDetails
      parameters:
      - in: path
        name: repoName
        required: true
        schema:
          type: string
      - in: path
        name: packageName
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AvailablePackageDetailsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePackageDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AvailablePackageDetailsDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Available helm package details
      tags:
      - Catalog
  /api/v{v}/Catalog/available/versions:
    post:
      operationId: Catalog_AvailableVersions
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ListCatalogAppAvailableVersionsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ListCatalogAppAvailableVersionsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ListCatalogAppAvailableVersionsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ListCatalogAppAvailableVersionsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get available versions for catalog app
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/package-value:
    post:
      operationId: Catalog_CatalogAppValue
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get catalog app yaml value
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/package-value-autocomplete:
    post:
      operationId: Catalog_CatalogAppValueAutocomplete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueAutocompleteCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueAutocompleteCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueAutocompleteCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetCatalogAppValueAutocompleteCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/PackageAutocompleteDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageAutocompleteDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageAutocompleteDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get autocomplete dictionary for catalog app value
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/lockmanager:
    post:
      operationId: Catalog_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CatalogLockManagementCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogLockManagementCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CatalogLockManagementCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CatalogLockManagementCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock catalog
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/app-lockmanager:
    post:
      operationId: Catalog_AppLockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CatalogAppLockManagement'
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogAppLockManagement'
          text/json:
            schema:
              $ref: '#/components/schemas/CatalogAppLockManagement'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CatalogAppLockManagement'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock catalog app
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Catalog/delete/{id}:
    delete:
      operationId: Catalog_DeleteCatalog
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete catalog
      tags:
      - Catalog
  /api/v{v}/Catalog/delete-app/{id}:
    delete:
      operationId: Catalog_DeleteCatalogApp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete catalog app by catalog app Id
      tags:
      - Catalog
  /api/v{v}/Catalog/bind-project:
    post:
      operationId: Catalog_BindProjects
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindProjectsToCatalogCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindProjectsToCatalogCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindProjectsToCatalogCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindProjectsToCatalogCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind/Unbind Projects to Catalog
      tags:
      - Catalog
      x-codegen-request-body-name: body
  /api/v{v}/Checker/organization:
    post:
      operationId: Checker_Organization
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationNameCheckerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationNameCheckerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationNameCheckerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationNameCheckerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check duplicate org name
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/aws:
    post:
      operationId: Checker_Aws
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckAwsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAwsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckAwsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckAwsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check aws credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/tanzu:
    post:
      operationId: Checker_Tanzu
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckTanzuCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckTanzuCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckTanzuCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckTanzuCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check tanzu credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/proxmox:
    post:
      operationId: Checker_Proxmox
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProxmoxCheckerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ProxmoxCheckerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ProxmoxCheckerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProxmoxCheckerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check proxmox credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/duplicate:
    post:
      operationId: Checker_Duplicate
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DuplicateNameCheckerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateNameCheckerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DuplicateNameCheckerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DuplicateNameCheckerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Duplicate name
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/keycloak:
    post:
      operationId: Checker_Keycloak
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KeycloakCheckerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakCheckerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KeycloakCheckerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KeycloakCheckerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check keycloak credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/artifact:
    post:
      operationId: Checker_Artifact
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArtifactUrlCheckerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactUrlCheckerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ArtifactUrlCheckerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArtifactUrlCheckerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check artifact url
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/yaml:
    post:
      operationId: Checker_Yaml
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/YamlValidatorCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/YamlValidatorCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/YamlValidatorCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/YamlValidatorCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check yaml file
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/google:
    post:
      operationId: Checker_Google
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checker_Google_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check aws credentials
      tags:
      - Checker
  /api/v{v}/Checker/node:
    post:
      operationId: Checker_Node
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NodeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/NodeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NodeCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Duplicate server name checker
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/cron:
    post:
      operationId: Checker_Cron
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CronJobCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CronJobCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CronJobCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CronJobCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check valid cron job format
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/user:
    post:
      operationId: Checker_UserChecker
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserExistCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UserExistCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UserExistCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserExistCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check duplicate username
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/ssh:
    post:
      operationId: Checker_Ssh
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SshKeyCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SshKeyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SshKeyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SshKeyCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check valid ssh key format
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/cidr:
    post:
      operationId: Checker_Cidr
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CidrCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CidrCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CidrCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CidrCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check valid cidr format
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/dns:
    post:
      operationId: Checker_Dns
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DnsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DnsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DnsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DnsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check valid dns format
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/ntp:
    post:
      operationId: Checker_Ntp
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NtpCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/NtpCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/NtpCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NtpCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check valid ntp format
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/s3:
    post:
      operationId: Checker_S3
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckS3Command'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckS3Command'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckS3Command'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckS3Command'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check s3 credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/openstack:
    post:
      operationId: Checker_Openstack
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckOpenstackCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckOpenstackCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckOpenstackCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckOpenstackCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check openstack credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/openstack-image/{id}:
    post:
      operationId: Checker_OpenstackImage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check openstack Taikun image
      tags:
      - Checker
  /api/v{v}/Checker/taikun-lb-image/{id}:
    post:
      operationId: Checker_OpenstackTaikunLbImage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check openstack Taikun lb image
      tags:
      - Checker
  /api/v{v}/Checker/prometheus:
    post:
      operationId: Checker_Prometheus
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckPrometheusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPrometheusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckPrometheusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckPrometheusCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check prometheus credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/azure:
    post:
      operationId: Checker_Azure
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckAzureCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAzureCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckAzureCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckAzureCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check valid azure credentials
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/Checker/azure/quota/cpu:
    post:
      operationId: Checker_AzureCpuQuota
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CheckAzureCpuQuotaCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAzureCpuQuotaCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckAzureCpuQuotaCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckAzureCpuQuotaCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Check azure cpu quota limit
      tags:
      - Checker
      x-codegen-request-body-name: body
  /api/v{v}/CloudCredentials/lockmanager:
    post:
      operationId: CloudCredentials_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CloudLockManagerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CloudLockManagerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CloudLockManagerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CloudLockManagerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock cloud credential
      tags:
      - CloudCredentials
      x-codegen-request-body-name: body
  /api/v{v}/CloudCredentials/details:
    get:
      operationId: CloudCredentials_ForProject
      parameters:
      - in: query
        name: cloudId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CredentialsForProjectList'
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsForProjectList'
            text/json:
              schema:
                $ref: '#/components/schemas/CredentialsForProjectList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve cloud credential details by cloud Id
      tags:
      - CloudCredentials
  /api/v{v}/CloudCredentials/exceeded-quotas:
    get:
      operationId: CloudCredentials_ExceededQuotas
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExceededQuotaList'
            application/json:
              schema:
                $ref: '#/components/schemas/ExceededQuotaList'
            text/json:
              schema:
                $ref: '#/components/schemas/ExceededQuotaList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve cloud credentials exceeded quotas
      tags:
      - CloudCredentials
  /api/v{v}/CloudCredentials/cli:
    get:
      operationId: CloudCredentials_ForCli
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CredentialsForCli'
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsForCli'
            text/json:
              schema:
                $ref: '#/components/schemas/CredentialsForCli'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve cloud credentials for CLI
      tags:
      - CloudCredentials
  /api/v{v}/CloudCredentials/flavors/{cloudId}:
    get:
      operationId: CloudCredentials_AllFlavors
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AllFlavorsList'
            application/json:
              schema:
                $ref: '#/components/schemas/AllFlavorsList'
            text/json:
              schema:
                $ref: '#/components/schemas/AllFlavorsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all flavors
      tags:
      - CloudCredentials
  /api/v{v}/CloudCredentials/list:
    get:
      operationId: CloudCredentials_DashboardList
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CredentialsChart'
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsChart'
            text/json:
              schema:
                $ref: '#/components/schemas/CredentialsChart'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all cloud credentials
      tags:
      - CloudCredentials
  /api/v{v}/CloudCredentials/makedefault:
    post:
      operationId: CloudCredentials_MakeDefault
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CredentialMakeDefaultCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialMakeDefaultCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CredentialMakeDefaultCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CredentialMakeDefaultCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Make cloud credentials default
      tags:
      - CloudCredentials
      x-codegen-request-body-name: body
  /api/v{v}/CloudCredentials/{cloudId}:
    delete:
      operationId: CloudCredentials_Delete
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove cloud credential by cloud Id
      tags:
      - CloudCredentials
  /api/v{v}/CloudCredentials:
    get:
      operationId: CloudCredentials_CloudCredentialsForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: isAdmin
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsForOrganizationEntity'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsForOrganizationEntity'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsForOrganizationEntity'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of cloud credentials by organization Id
      tags:
      - CloudCredentials
  /api/v{v}/Common/enumvalues:
    get:
      operationId: Common_GetEnumValues
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EnumList'
            application/json:
              schema:
                $ref: '#/components/schemas/EnumList'
            text/json:
              schema:
                $ref: '#/components/schemas/EnumList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve enum values
      tags:
      - Common
  /api/v{v}/Common/ip-range-list:
    post:
      operationId: Common_IpRangeList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve ip address range list
      tags:
      - Common
      x-codegen-request-body-name: body
  /api/v{v}/Common/ip-usable-list:
    post:
      operationId: Common_IpUsableList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IpListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/IpListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/IpListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IpListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve ip address usable list
      tags:
      - Common
      x-codegen-request-body-name: body
  /api/v{v}/Common/ip-range-count:
    post:
      operationId: Common_IpRangeCount
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeCountCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeCountCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeCountCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IpAddressRangeCountCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                format: int32
                type: integer
            application/json:
              schema:
                format: int32
                type: integer
            text/json:
              schema:
                format: int32
                type: integer
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve ip address range count
      tags:
      - Common
      x-codegen-request-body-name: body
  /api/v{v}/Common/countries:
    get:
      operationId: Common_GetCountryList
      parameters:
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CountryListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve country list
      tags:
      - Common
  /api/v{v}/Common/sorting-elements/{type}:
    get:
      operationId: Common_GetSortingElements
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve country list
      tags:
      - Common
  /api/v{v}/CronJob/alerts:
    post:
      operationId: CronJob_DeleteExpiredAlerts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredAlertsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredAlertsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredAlertsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredAlertsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete expired alerts
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/block-organization:
    post:
      operationId: CronJob_BlockOrganization
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BlockOrganizationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BlockOrganizationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BlockOrganizationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BlockOrganizationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Block organization
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/trigger-templates:
    post:
      operationId: CronJob_TriggerTemplates
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TriggerTemplateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerTemplateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/TriggerTemplateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TriggerTemplateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Trigger scheduled templates
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/sync-app-proxy:
    post:
      operationId: CronJob_SyncAppProxy
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncAppProxyCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncAppProxyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncAppProxyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncAppProxyCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync app proxy command
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/fetch-artifact-organizations:
    post:
      operationId: CronJob_FetchArtifactHubOrganizations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FillArtifacthubOrganizationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FillArtifacthubOrganizationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FillArtifacthubOrganizationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FillArtifacthubOrganizationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch artifact hub organizations
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/sync-project-apps:
    post:
      operationId: CronJob_SyncProjectApps
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync project apps
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/sync-projects:
    post:
      operationId: CronJob_SyncProjects
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncProjectsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncProjectsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncProjectsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync projects
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/sync-organizations:
    post:
      operationId: CronJob_SyncOrganizations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncOrganizationsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncOrganizationsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncOrganizationsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncOrganizationsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync organizations
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/taikun-requests:
    post:
      operationId: CronJob_DeleteExpiredRequests
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRequestsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequestsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRequestsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRequestsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete expired requests
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/create-key-pool:
    post:
      operationId: CronJob_CreateKeyPool
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateKeyPoolCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyPoolCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateKeyPoolCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateKeyPoolCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create key pool
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/sync-backup-credentials:
    post:
      operationId: CronJob_SyncBackupCredentials
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncBackupCredentialsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncBackupCredentialsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncBackupCredentialsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncBackupCredentialsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync backup credentials
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/project-actions:
    post:
      operationId: CronJob_DeleteRedundantProjectActions
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRedundantProjectActionsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRedundantProjectActionsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRedundantProjectActionsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRedundantProjectActionsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete useless project actions
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/project-expiration:
    post:
      operationId: CronJob_SendEmailAboutProjectExpiration
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SendEmailAboutProjectExpirationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailAboutProjectExpirationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SendEmailAboutProjectExpirationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendEmailAboutProjectExpirationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Send email to the users about project expiration
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/events:
    post:
      operationId: CronJob_DeleteExpiredEvents
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredEventsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredEventsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredEventsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredEventsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete expired events
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/auto-upgrade-projects:
    post:
      operationId: CronJob_AutoUpgradeProjects
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AutoUpgradeProjectsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AutoUpgradeProjectsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AutoUpgradeProjectsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AutoUpgradeProjectsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Upgrade projects that auto-upgrade option enabled
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/history-logs:
    post:
      operationId: CronJob_DeleteExpiredHistoryLogs
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredHistoryLogsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredHistoryLogsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredHistoryLogsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredHistoryLogsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete expired history logs
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/refresh-tokens:
    post:
      operationId: CronJob_DeleteExpiredRefreshTokens
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredRefreshTokensCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredRefreshTokensCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredRefreshTokensCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredRefreshTokensCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete expired refresh tokens
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/delete-kube-configs:
    post:
      operationId: CronJob_DeleteKubeConfigs
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedUsersKubeConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedUsersKubeConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedUsersKubeConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedUsersKubeConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove deleted user's kube configs
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/delete-aws-spot-instances:
    post:
      operationId: CronJob_DeleteAwsSpotInstances
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedSpotInstancesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedSpotInstancesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedSpotInstancesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRemovedSpotInstancesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete removed aws spot instances
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/servers:
    post:
      operationId: CronJob_DeleteExpiredServers
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredServersCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredServersCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredServersCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteExpiredServersCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete expired servers
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/projects:
    post:
      operationId: CronJob_PurgeExpiredProjects
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PurgeExpiredProjectsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeExpiredProjectsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PurgeExpiredProjectsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PurgeExpiredProjectsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Purge expired projects
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/organizations:
    post:
      operationId: CronJob_DeletePendingOrganizations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRegisterExpiredOrganizationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRegisterExpiredOrganizationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRegisterExpiredOrganizationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRegisterExpiredOrganizationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete pending organizations
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/project-quota-message:
    post:
      operationId: CronJob_UpdateProjectQuotaMessage
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectQuotaMessageCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectQuotaMessageCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectQuotaMessageCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectQuotaMessageCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update project quota message
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/fetch-kubernetes-alerts:
    post:
      operationId: CronJob_FetchKubernetesAlerts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesAlertDataCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesAlertDataCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesAlertDataCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesAlertDataCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch kubernetes alerts for organization
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/fetch-kubernetes-overview:
    post:
      operationId: CronJob_FetchKubernetesOverview
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesOverviewDataCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesOverviewDataCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesOverviewDataCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchKubernetesOverviewDataCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch kubernetes overview for organization
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/fetch-organization-details:
    post:
      operationId: CronJob_FetchOrganizationDetails
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FetchOrganizationDetailsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FetchOrganizationDetailsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchOrganizationDetailsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchOrganizationDetailsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch details of organizations
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/fetch-azure-prices:
    post:
      operationId: CronJob_FetchAzurePrices
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorPricesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorPricesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorPricesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorPricesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch azure prices
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/fetch-azure-euro-prices:
    post:
      operationId: CronJob_FetchAzureEuroPrices
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorEuroPricesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorEuroPricesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorEuroPricesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FetchAzureFlavorEuroPricesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch azure euro prices
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/remind-alerts:
    post:
      operationId: CronJob_RemindAlerts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RemindUsersByAlertingProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RemindUsersByAlertingProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RemindUsersByAlertingProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemindUsersByAlertingProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remind alerts
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/sync-opa-profiles:
    post:
      operationId: CronJob_SyncOpaProfiles
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncOpaProfilesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncOpaProfilesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncOpaProfilesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncOpaProfilesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync opa profiles
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/CronJob/project-app-status:
    post:
      operationId: CronJob_UpdateProjectAppStatus
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectAppStatusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectAppStatusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectAppStatusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectAppStatusCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update project app status
      tags:
      - CronJob
      x-codegen-request-body-name: body
  /api/v{v}/DnsServers/list/{accessProfileId}:
    get:
      operationId: DnsServers_List
      parameters:
      - in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/DnsServersListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsServersListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsServersListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List dns servers by profile id
      tags:
      - DnsServers
  /api/v{v}/DnsServers/create:
    post:
      operationId: DnsServers_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateDnsServerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDnsServerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateDnsServerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateDnsServerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create access profile dns server
      tags:
      - DnsServers
      x-codegen-request-body-name: body
  /api/v{v}/DnsServers/edit/{id}:
    put:
      operationId: DnsServers_Edit
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit access profile dns server
      tags:
      - DnsServers
      x-codegen-request-body-name: body
  /api/v{v}/DnsServers/{id}:
    delete:
      operationId: DnsServers_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete access profile dns server
      tags:
      - DnsServers
  /api/v{v}/Documentation:
    get:
      operationId: Documentation_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: key
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DocumentationsList'
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationsList'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentationsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all documentation links. Available only for admins
      tags:
      - Documentation
  /api/v{v}/Flavors/openstack/{cloudId}:
    get:
      operationId: Flavors_OpenstackFlavors
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OpenstackFlavorList'
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackFlavorList'
            text/json:
              schema:
                $ref: '#/components/schemas/OpenstackFlavorList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve openstack flavors
      tags:
      - Flavors
  /api/v{v}/Flavors/google/{cloudId}:
    get:
      operationId: Flavors_GoogleFlavors
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GoogleFlavorList'
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFlavorList'
            text/json:
              schema:
                $ref: '#/components/schemas/GoogleFlavorList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve google flavors
      tags:
      - Flavors
  /api/v{v}/Flavors/aws/{cloudId}:
    get:
      operationId: Flavors_AwsFlavors
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AwsFlavorList'
            application/json:
              schema:
                $ref: '#/components/schemas/AwsFlavorList'
            text/json:
              schema:
                $ref: '#/components/schemas/AwsFlavorList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve aws flavors
      tags:
      - Flavors
  /api/v{v}/Flavors/azure/{cloudId}:
    get:
      operationId: Flavors_AzureFlavors
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: int32
          type: integer
      - in: query
        name: endRam
        schema:
          format: int32
          type: integer
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureFlavorList'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureFlavorList'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureFlavorList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve azure flavors
      tags:
      - Flavors
  /api/v{v}/Flavors/tanzu/{cloudId}:
    get:
      operationId: Flavors_TanzuFlavors
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: int32
          type: integer
      - in: query
        name: endRam
        schema:
          format: int32
          type: integer
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TanzuFlavorList'
            application/json:
              schema:
                $ref: '#/components/schemas/TanzuFlavorList'
            text/json:
              schema:
                $ref: '#/components/schemas/TanzuFlavorList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve tanzu flavors
      tags:
      - Flavors
  /api/v{v}/Flavors/proxmox/{cloudId}:
    get:
      operationId: Flavors_ProxmoxFlavors
      parameters:
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: startRam
        schema:
          format: int64
          type: integer
      - in: query
        name: endRam
        schema:
          format: int64
          type: integer
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProxmoxFlavorList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxFlavorList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProxmoxFlavorList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve proxmox flavors
      tags:
      - Flavors
  /api/v{v}/Flavors/credentials/dropdown/list:
    get:
      operationId: Flavors_DropdownRecordDtos
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsDropdownRecordDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsDropdownRecordDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudCredentialsDropdownRecordDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve cloud credentials dropdown list
      tags:
      - Flavors
  /api/v{v}/Flavors/bind:
    post:
      operationId: Flavors_BindToProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindFlavorToProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindFlavorToProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindFlavorToProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindFlavorToProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind flavors to project
      tags:
      - Flavors
      x-codegen-request-body-name: body
  /api/v{v}/Flavors/unbind:
    post:
      operationId: Flavors_UnbindFromProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UnbindFlavorFromProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UnbindFlavorFromProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UnbindFlavorFromProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnbindFlavorFromProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Unbind flavors from project
      tags:
      - Flavors
      x-codegen-request-body-name: body
  /api/v{v}/Flavors/projects/list:
    get:
      operationId: Flavors_GetSelectedFlavorsForProject
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: flavorName
        schema:
          type: string
      - in: query
        name: withPrice
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoundFlavorsForProjectsList'
            application/json:
              schema:
                $ref: '#/components/schemas/BoundFlavorsForProjectsList'
            text/json:
              schema:
                $ref: '#/components/schemas/BoundFlavorsForProjectsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve selected flavors for projects
      tags:
      - Flavors
  /api/v{v}/GoogleCloud/billing-accounts:
    post:
      operationId: GoogleCloud_BillingAccountList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checker_Google_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve google billing accounts list
      tags:
      - GoogleCloud
  /api/v{v}/GoogleCloud/zones:
    post:
      operationId: GoogleCloud_ZoneList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleCloud_ZoneList_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzResult'
            application/json:
              schema:
                $ref: '#/components/schemas/AzResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AzResult'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve google zone list
      tags:
      - GoogleCloud
  /api/v{v}/GoogleCloud/regions:
    post:
      operationId: GoogleCloud_RegionList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checker_Google_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve google region list
      tags:
      - GoogleCloud
  /api/v{v}/GoogleCloud/create:
    post:
      operationId: GoogleCloud_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleCloud_Create_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create google cloud credential
      tags:
      - GoogleCloud
  /api/v{v}/GoogleCloud/list:
    get:
      operationId: GoogleCloud_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GoogleCredentialList'
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCredentialList'
            text/json:
              schema:
                $ref: '#/components/schemas/GoogleCredentialList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of google cloud credentials
      tags:
      - GoogleCloud
  /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}:
    get:
      operationId: Images_AzureImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: publisherName
        required: true
        schema:
          type: string
      - in: path
        name: offer
        required: true
        schema:
          type: string
      - in: path
        name: sku
        required: true
        schema:
          type: string
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: latest
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureImageList'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureImageList'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureImageList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve azure images
      tags:
      - Images
  /api/v{v}/Images/openstack/{cloudId}:
    get:
      operationId: Images_OpenstackImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: personal
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OpenstackImageList'
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackImageList'
            text/json:
              schema:
                $ref: '#/components/schemas/OpenstackImageList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve openstack images
      tags:
      - Images
  /api/v{v}/Images/tanzu/{cloudId}:
    get:
      operationId: Images_TanzuImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TanzuImageList'
            application/json:
              schema:
                $ref: '#/components/schemas/TanzuImageList'
            text/json:
              schema:
                $ref: '#/components/schemas/TanzuImageList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve tanzu images
      tags:
      - Images
  /api/v{v}/Images/proxmox/{cloudId}:
    get:
      operationId: Images_ProxmoxImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProxmoxImageList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxImageList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProxmoxImageList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve proxmox images
      tags:
      - Images
  /api/v{v}/Images/google/{cloudId}/{type}:
    get:
      operationId: Images_GoogleImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: type
        required: true
        schema:
          type: string
      - in: query
        name: latest
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GoogleImageList'
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleImageList'
            text/json:
              schema:
                $ref: '#/components/schemas/GoogleImageList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve google images
      tags:
      - Images
  /api/v{v}/Images/aws:
    post:
      operationId: Images_AwsImagesAsPost
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AwsImagesPostListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AwsImagesPostListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AwsImagesPostListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AwsImagesPostListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AwsImagesPostList'
            application/json:
              schema:
                $ref: '#/components/schemas/AwsImagesPostList'
            text/json:
              schema:
                $ref: '#/components/schemas/AwsImagesPostList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve aws images
      tags:
      - Images
      x-codegen-request-body-name: body
  /api/v{v}/Images/bind:
    post:
      operationId: Images_BindImagesToProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindImageToProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindImageToProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindImageToProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindImageToProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind images to project
      tags:
      - Images
      x-codegen-request-body-name: body
  /api/v{v}/Images/unbind:
    post:
      operationId: Images_UnbindImagesFromProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteImageFromProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageFromProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteImageFromProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteImageFromProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Unbind images from project
      tags:
      - Images
      x-codegen-request-body-name: body
  /api/v{v}/Images/aws/common/{cloudId}:
    get:
      operationId: Images_CommonAwsImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AwsOwnerDetails'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwsOwnerDetails'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwsOwnerDetails'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Commonly used aws images
      tags:
      - Images
  /api/v{v}/Images/google/common/{cloudId}:
    get:
      operationId: Images_CommonGoogleImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/GoogleOwnerDetails'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GoogleOwnerDetails'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/GoogleOwnerDetails'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Commonly used google images
      tags:
      - Images
  /api/v{v}/Images/aws/personal/{cloudId}:
    get:
      operationId: Images_PersonalAwsImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Personal aws images
      tags:
      - Images
  /api/v{v}/Images/azure/personal/{cloudId}:
    get:
      operationId: Images_PersonalAzureImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Personal azure images
      tags:
      - Images
  /api/v{v}/Images/azure/common/{cloudId}:
    get:
      operationId: Images_CommonAzureImages
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/AzurePublisherDetails'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AzurePublisherDetails'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AzurePublisherDetails'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Commonly used azure images
      tags:
      - Images
  /api/v{v}/Images/details:
    post:
      operationId: Images_GetImageDetailsById
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ImageByIdCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ImageByIdCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ImageByIdCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ImageByIdCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get image details
      tags:
      - Images
      x-codegen-request-body-name: body
  /api/v{v}/Images/projects/list:
    get:
      operationId: Images_GetSelectedImagesForProject
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BoundImagesForProjectsList'
            application/json:
              schema:
                $ref: '#/components/schemas/BoundImagesForProjectsList'
            text/json:
              schema:
                $ref: '#/components/schemas/BoundImagesForProjectsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve selected images for projects
      tags:
      - Images
  /api/v{v}/Invoices/create:
    post:
      operationId: Invoices_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                format: int32
                type: integer
            application/json:
              schema:
                format: int32
                type: integer
            text/json:
              schema:
                format: int32
                type: integer
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create invoice
      tags:
      - Invoices
      x-codegen-request-body-name: body
  /api/v{v}/Invoices/update/{invoiceId}:
    put:
      operationId: Invoices_Edit
      parameters:
      - in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update invoice
      tags:
      - Invoices
      x-codegen-request-body-name: body
  /api/v{v}/Invoices/download:
    post:
      operationId: Invoices_Download
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DownloadInvoiceCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadInvoiceCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadInvoiceCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadInvoiceCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Download invoice
      tags:
      - Invoices
      x-codegen-request-body-name: body
  /api/v{v}/Invoices/list:
    get:
      operationId: Invoices_Invoices
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: partnerId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Invoices'
            application/json:
              schema:
                $ref: '#/components/schemas/Invoices'
            text/json:
              schema:
                $ref: '#/components/schemas/Invoices'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get invoices list
      tags:
      - Invoices
  /api/v{v}/Keycloak/create:
    post:
      operationId: Keycloak_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KeycloakCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KeycloakCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KeycloakCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create keycloak configuration for organization
      tags:
      - Keycloak
      x-codegen-request-body-name: body
  /api/v{v}/Keycloak/edit:
    put:
      operationId: Keycloak_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KeycloakEditCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakEditCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KeycloakEditCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KeycloakEditCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit keycloak configuration for organization
      tags:
      - Keycloak
      x-codegen-request-body-name: body
  /api/v{v}/Keycloak/delete:
    post:
      operationId: Keycloak_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KeycloakDeleteCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KeycloakDeleteCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KeycloakDeleteCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KeycloakDeleteCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete keycloak configuration
      tags:
      - Keycloak
      x-codegen-request-body-name: body
  /api/v{v}/Keycloak:
    get:
      operationId: Keycloak_Get
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KeycloakListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/KeycloakListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/KeycloakListDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get keycloak configuration
      tags:
      - Keycloak
  /api/v{v}/KubeConfig:
    get:
      operationId: KubeConfig_List
      parameters:
      - description: Only for admin sort by org id
        in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Get kube configs by projectId
        in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubeConfigForUserList'
            application/json:
              schema:
                $ref: '#/components/schemas/KubeConfigForUserList'
            text/json:
              schema:
                $ref: '#/components/schemas/KubeConfigForUserList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of kube configs for project. It's possible to filter
        and select kube configs by project
      tags:
      - KubeConfig
    post:
      operationId: KubeConfig_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateKubeConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubeConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateKubeConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateKubeConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create kube config
      tags:
      - KubeConfig
      x-codegen-request-body-name: body
  /api/v{v}/KubeConfig/delete:
    post:
      operationId: KubeConfig_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete kube config
      tags:
      - KubeConfig
      x-codegen-request-body-name: body
  /api/v{v}/KubeConfig/delete-by-project-id:
    post:
      operationId: KubeConfig_DeleteByProjectId
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigByProjectIdCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigByProjectIdCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigByProjectIdCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteKubeConfigByProjectIdCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete kube config by project id
      tags:
      - KubeConfig
      x-codegen-request-body-name: body
  /api/v{v}/KubeConfig/download:
    post:
      operationId: KubeConfig_Download
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DownloadKubeConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadKubeConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadKubeConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadKubeConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Download kube config file for user by project Id
      tags:
      - KubeConfig
      x-codegen-request-body-name: body
  /api/v{v}/KubeConfig/interactive-shell:
    post:
      operationId: KubeConfig_InteractiveShell
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubeConfigInteractiveShellCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KubeConfigInteractiveShellCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KubeConfigInteractiveShellCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubeConfigInteractiveShellCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Interactive shell for user kube config
      tags:
      - KubeConfig
      x-codegen-request-body-name: body
  /api/v{v}/KubeConfigRole:
    get:
      operationId: KubeConfigRole_List
      parameters:
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubeConfigRoleResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/KubeConfigRoleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KubeConfigRoleResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of kubeconfig role
      tags:
      - KubeConfigRole
  /api/v{v}/Kubernetes/supported/list:
    get:
      operationId: Kubernetes_GetSupportedList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesVersionListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesVersionListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesVersionListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve Taikun supported kubernetes version
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/quota/{projectId}:
    get:
      operationId: Kubernetes_GetQuota
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubernetesQuotaListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesQuotaListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/KubernetesQuotaListDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: k8s quota usage
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/node:
    get:
      operationId: Kubernetes_GetNodeList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: searchId
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s node
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/podlogs:
    post:
      operationId: Kubernetes_GetPodLogsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubernetesPodLogsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesPodLogsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KubernetesPodLogsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubernetesPodLogsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve k8s pod logs
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/interactive-shell:
    post:
      operationId: Kubernetes_InteractiveShell
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InteractiveShellSendCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/InteractiveShellSendCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/InteractiveShellSendCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InteractiveShellSendCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Produce interactive shell command
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/event/{projectId}:
    post:
      operationId: Kubernetes_CreateKubernetesEvent
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubernetesEventCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesEventCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/KubernetesEventCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubernetesEventCreateDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add k8s event - opsgenie
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/alert/{projectId}:
    post:
      operationId: Kubernetes_CreateKubernetesAlert
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAlertDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAlertDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAlertDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add k8s alert
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/updatealert/{alertId}:
    put:
      operationId: Kubernetes_UpdateKubernetesAlert
      parameters:
      - in: path
        name: alertId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesAlertDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesAlertDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesAlertDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesAlertDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update k8s alert
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/{projectId}/crd:
    get:
      operationId: Kubernetes_GetCrdList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s custom resource definition
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/cli:
    post:
      operationId: Kubernetes_ExecCli
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubernetesCliCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCliCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KubernetesCliCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubernetesCliCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Execute k8s web socket namespaced pod
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/silencemanager:
    post:
      operationId: Kubernetes_SilenceManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SilenceOperationsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SilenceOperationsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SilenceOperationsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SilenceOperationsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Silence management for k8s alerts
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/restart/deployment:
    post:
      operationId: Kubernetes_RestartDeployment
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RestartDeploymentCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RestartDeploymentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RestartDeploymentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RestartDeploymentCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Restart deployment
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/restart/sts:
    post:
      operationId: Kubernetes_RestartSts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RestartStsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RestartStsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RestartStsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RestartStsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Restart stateful set
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/restart/daemonset:
    post:
      operationId: Kubernetes_RestartDaemonSet
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RestartDaemonSetCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RestartDaemonSetCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RestartDaemonSetCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RestartDaemonSetCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Restart daemon set
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/{projectId}/dashboard:
    get:
      operationId: Kubernetes_GetDashboard
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all data of the k8s by project Id
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/describe/pvc:
    post:
      operationId: Kubernetes_DescribePvc
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribePvcCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePvcCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribePvcCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribePvcCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe pvc
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/network-policy:
    post:
      operationId: Kubernetes_DescribeNetworkPolicy
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeNetworkPolicyCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNetworkPolicyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeNetworkPolicyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeNetworkPolicyCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe network policy
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/storageclass:
    post:
      operationId: Kubernetes_DescribeStorageClass
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeStorageClassCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStorageClassCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeStorageClassCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeStorageClassCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe storage class
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/node:
    post:
      operationId: Kubernetes_DescribeNode
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeNodeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNodeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeNodeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeNodeCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe node
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/job:
    post:
      operationId: Kubernetes_DescribeJob
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeJobCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeJobCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeJobCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeJobCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe job
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/pdb:
    post:
      operationId: Kubernetes_DescribePdb
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribePodDisruptionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePodDisruptionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribePodDisruptionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribePodDisruptionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe pdb
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/daemonset:
    post:
      operationId: Kubernetes_DescribeDaemonSet
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeDaemonSetCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDaemonSetCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeDaemonSetCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeDaemonSetCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe daemonset
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/deployment:
    post:
      operationId: Kubernetes_DescribeDeployment
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeDeploymentCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeploymentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeDeploymentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeDeploymentCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe deployment
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/configmap:
    post:
      operationId: Kubernetes_DescribeConfigMap
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeConfigMapCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigMapCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeConfigMapCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeConfigMapCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe config map
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/secret:
    post:
      operationId: Kubernetes_DescribeSecret
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeSecretCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSecretCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeSecretCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeSecretCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe secret
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/sts:
    post:
      operationId: Kubernetes_DescribeSts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeStsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeStsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeStsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe stateful set
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/service:
    post:
      operationId: Kubernetes_DescribeService
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeServiceCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeServiceCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe service
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/pod:
    post:
      operationId: Kubernetes_DescribePod
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribePodCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePodCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribePodCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribePodCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe pod
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/ingress:
    post:
      operationId: Kubernetes_DescribeIngress
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeIngressCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeIngressCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeIngressCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeIngressCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe ingress
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/crd:
    post:
      operationId: Kubernetes_DescribeCrd
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeCrdCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCrdCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeCrdCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeCrdCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe crd
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/describe/cronjob:
    post:
      operationId: Kubernetes_DescribeCronJob
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DescribeCronJobCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCronJobCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DescribeCronJobCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DescribeCronJobCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe cronjob
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/overview:
    get:
      operationId: Kubernetes_Overview
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Overview kubernetes nodes and pods by organization id
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/pod:
    get:
      operationId: Kubernetes_GetPodList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Pods'
            application/json:
              schema:
                $ref: '#/components/schemas/Pods'
            text/json:
              schema:
                $ref: '#/components/schemas/Pods'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s pod for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/cronjobs:
    get:
      operationId: Kubernetes_GetCronJobsList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubernetesCronJobsList'
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCronJobsList'
            text/json:
              schema:
                $ref: '#/components/schemas/KubernetesCronJobsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s cron jobs for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/jobs:
    get:
      operationId: Kubernetes_GetJobsList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubernetesJobList'
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesJobList'
            text/json:
              schema:
                $ref: '#/components/schemas/KubernetesJobList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s jobs for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/pdb:
    get:
      operationId: Kubernetes_GetPdbList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PodDisruptions'
            application/json:
              schema:
                $ref: '#/components/schemas/PodDisruptions'
            text/json:
              schema:
                $ref: '#/components/schemas/PodDisruptions'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s pdb for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/alerts:
    get:
      operationId: Kubernetes_GetKubernetesAlertsList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubernetesAlertList'
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesAlertList'
            text/json:
              schema:
                $ref: '#/components/schemas/KubernetesAlertList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all k8s alerts by project Id
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/kubeconfig:
    get:
      operationId: Kubernetes_GetKubeConfigFile
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubeConfigResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/KubeConfigResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KubeConfigResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve kube config file
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/namespaces:
    get:
      operationId: Kubernetes_GetNamespacesList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve kube config file
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/download:
    get:
      operationId: Kubernetes_Download
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Download kube config file bu project Id
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/daemonset:
    get:
      operationId: Kubernetes_GetDaemonSet
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DaemonSets'
            application/json:
              schema:
                $ref: '#/components/schemas/DaemonSets'
            text/json:
              schema:
                $ref: '#/components/schemas/DaemonSets'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s daemon set for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/helmreleases:
    get:
      operationId: Kubernetes_GetHelmReleaseList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HelmReleasesList'
            application/json:
              schema:
                $ref: '#/components/schemas/HelmReleasesList'
            text/json:
              schema:
                $ref: '#/components/schemas/HelmReleasesList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s helm releases for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/ingress:
    get:
      operationId: Kubernetes_GetIngresses
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Ingresses'
            application/json:
              schema:
                $ref: '#/components/schemas/Ingresses'
            text/json:
              schema:
                $ref: '#/components/schemas/Ingresses'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s ingresses for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/network-policies:
    get:
      operationId: Kubernetes_GetNetworkPolicies
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NetworkPolicies'
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicies'
            text/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicies'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s network-policies for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/pvc:
    get:
      operationId: Kubernetes_GetPersistentVolumeClaim
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Pvcs'
            application/json:
              schema:
                $ref: '#/components/schemas/Pvcs'
            text/json:
              schema:
                $ref: '#/components/schemas/Pvcs'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s persistent volume claim for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/deployment:
    get:
      operationId: Kubernetes_GetDeploymentList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Deployments'
            application/json:
              schema:
                $ref: '#/components/schemas/Deployments'
            text/json:
              schema:
                $ref: '#/components/schemas/Deployments'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s deployment for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/configmap:
    get:
      operationId: Kubernetes_GetConfigMap
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigMaps'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMaps'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigMaps'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s config map for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/storageclass:
    get:
      operationId: Kubernetes_GetStorageClasses
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StorageClasses'
            application/json:
              schema:
                $ref: '#/components/schemas/StorageClasses'
            text/json:
              schema:
                $ref: '#/components/schemas/StorageClasses'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s storage classes
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/secret:
    get:
      operationId: Kubernetes_GetSecret
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Secrets'
            application/json:
              schema:
                $ref: '#/components/schemas/Secrets'
            text/json:
              schema:
                $ref: '#/components/schemas/Secrets'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s secret for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/sts:
    get:
      operationId: Kubernetes_GetSts
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StsList'
            application/json:
              schema:
                $ref: '#/components/schemas/StsList'
            text/json:
              schema:
                $ref: '#/components/schemas/StsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s stateful set for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/service:
    get:
      operationId: Kubernetes_GetService
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Services'
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
            text/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of k8s service for all namespaces
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/{projectId}/deletepod/{metadataName}/{podNamespace}:
    post:
      operationId: Kubernetes_DeletePod
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: metadataName
        required: true
        schema:
          type: string
      - in: path
        name: podNamespace
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove k8s namespaced pod
      tags:
      - Kubernetes
  /api/v{v}/Kubernetes/removealerts:
    post:
      operationId: Kubernetes_DeleteAlerts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteAlertCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlertCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteAlertCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteAlertCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove k8s alerts
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/configmap:
    post:
      operationId: Kubernetes_PatchConfigMap
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchConfigMapCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConfigMapCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchConfigMapCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchConfigMapCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch config map
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/deployment:
    post:
      operationId: Kubernetes_PatchDeployment
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchDeploymentCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeploymentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchDeploymentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchDeploymentCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch deployment
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/ingress:
    post:
      operationId: Kubernetes_PatchIngress
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchIngressCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchIngressCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchIngressCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchIngressCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch ingress
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/pvc:
    post:
      operationId: Kubernetes_PatchPvc
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchPvcCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPvcCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchPvcCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchPvcCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch pvc
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/pdb:
    post:
      operationId: Kubernetes_PatchPdb
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchPdbCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPdbCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchPdbCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchPdbCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch pdb
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/secret:
    post:
      operationId: Kubernetes_PatchSecret
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchSecretCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSecretCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchSecretCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchSecretCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch secret
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/sts:
    post:
      operationId: Kubernetes_PatchSts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchStsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchStsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchStsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchStsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch sts
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/crd:
    post:
      operationId: Kubernetes_PatchCrd
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchCrdCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCrdCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchCrdCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchCrdCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch crd
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/cronjob:
    post:
      operationId: Kubernetes_PatchCronJob
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchCronJobCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCronJobCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchCronJobCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchCronJobCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch cronjob
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/node:
    post:
      operationId: Kubernetes_PatchNode
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchNodeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNodeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchNodeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchNodeCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch node
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/job:
    post:
      operationId: Kubernetes_PatchJob
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchJobCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchJobCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchJobCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchJobCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch job
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/patch/pod:
    post:
      operationId: Kubernetes_PatchPod
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PatchPodCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPodCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PatchPodCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PatchPodCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Patch pod
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/Kubernetes/remove-crds:
    post:
      operationId: Kubernetes_ClearCrds
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClearCrdsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ClearCrdsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ClearCrdsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClearCrdsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove crds
      tags:
      - Kubernetes
      x-codegen-request-body-name: body
  /api/v{v}/KubernetesProfiles:
    get:
      operationId: KubernetesProfiles_KubernetesProfilesForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesProfilesEntity'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesProfilesEntity'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KubernetesProfilesEntity'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all kubernetes profiles for organization
      tags:
      - KubernetesProfiles
    post:
      operationId: KubernetesProfiles_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add kubernetes profiles
      tags:
      - KubernetesProfiles
      x-codegen-request-body-name: body
  /api/v{v}/KubernetesProfiles/list:
    get:
      operationId: KubernetesProfiles_List
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesList'
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesList'
            text/json:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all kubernetes profiles
      tags:
      - KubernetesProfiles
  /api/v{v}/KubernetesProfiles/lockmanager:
    post:
      operationId: KubernetesProfiles_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesLockManagerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesLockManagerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesLockManagerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesLockManagerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock kubernetes profiles
      tags:
      - KubernetesProfiles
      x-codegen-request-body-name: body
  /api/v{v}/KubernetesProfiles/{id}:
    delete:
      operationId: KubernetesProfiles_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove kubernetes profiles by Id
      tags:
      - KubernetesProfiles
  /api/v{v}/Kubespray:
    get:
      operationId: Kubespray_List
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Kubesprays'
            application/json:
              schema:
                $ref: '#/components/schemas/Kubesprays'
            text/json:
              schema:
                $ref: '#/components/schemas/Kubesprays'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Kubespray
    post:
      operationId: Kubespray_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubesprayCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KubesprayCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KubesprayCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubesprayCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Kubespray
      x-codegen-request-body-name: body
  /api/v{v}/Kubespray/{id}:
    delete:
      operationId: Kubespray_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      tags:
      - Kubespray
  /api/v{v}/Notifications/add:
    post:
      operationId: Notifications_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NotificationSendCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSendCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationSendCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationSendCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Send notification to signalR
      tags:
      - Notifications
      x-codegen-request-body-name: body
  /api/v{v}/Notifications/operations:
    post:
      operationId: Notifications_GetProjectOperationMessages
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GetProjectOperationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectOperationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/GetProjectOperationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetProjectOperationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get project operations
      tags:
      - Notifications
      x-codegen-request-body-name: body
  /api/v{v}/Notifications:
    get:
      operationId: Notifications_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: query
        name: userId
        schema:
          type: string
      - in: query
        name: isDeleted
        schema:
          type: boolean
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all notifications
      tags:
      - Notifications
  /api/v{v}/Notifications/download:
    get:
      operationId: Notifications_ExportCsv
      parameters:
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: query
        name: userId
        schema:
          type: string
      - in: query
        name: isDeleted
        schema:
          type: boolean
      - in: query
        name: isEmailEnabled
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Export Csv
      tags:
      - Notifications
  /api/v{v}/Notifications/notifyowner:
    post:
      operationId: Notifications_NotifyOwner
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NotifyOwnersCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyOwnersCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/NotifyOwnersCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotifyOwnersCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Notify owner
      tags:
      - Notifications
      x-codegen-request-body-name: body
  /api/v{v}/NtpServers/list/{accessProfileId}:
    get:
      operationId: NtpServers_List
      parameters:
      - in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/NtpServersListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NtpServersListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/NtpServersListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List ntp servers by profile id
      tags:
      - NtpServers
  /api/v{v}/NtpServers/create:
    post:
      operationId: NtpServers_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateNtpServerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNtpServerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateNtpServerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateNtpServerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create access profile ntp server
      tags:
      - NtpServers
      x-codegen-request-body-name: body
  /api/v{v}/NtpServers/edit/{id}:
    put:
      operationId: NtpServers_Edit
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DnsNtpAddressEditDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit access profile ntp server
      tags:
      - NtpServers
      x-codegen-request-body-name: body
  /api/v{v}/NtpServers/{id}:
    delete:
      operationId: NtpServers_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete access profile ntp server
      tags:
      - NtpServers
  /api/v{v}/OpaProfiles:
    get:
      operationId: OpaProfiles_List
      parameters:
      - description: org id
        in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: searchId
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OpaProfileList'
            application/json:
              schema:
                $ref: '#/components/schemas/OpaProfileList'
            text/json:
              schema:
                $ref: '#/components/schemas/OpaProfileList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of policy profile for project.
      tags:
      - OpaProfiles
    post:
      operationId: OpaProfiles_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOpaProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpaProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOpaProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOpaProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create policy profile
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
    put:
      operationId: OpaProfiles_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpaProfileUpdateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OpaProfileUpdateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OpaProfileUpdateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpaProfileUpdateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update policy profile
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/OpaProfiles/sync:
    post:
      operationId: OpaProfiles_Sync
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpaProfileSyncCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OpaProfileSyncCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OpaProfileSyncCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpaProfileSyncCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync policy profile
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/OpaProfiles/delete:
    post:
      operationId: OpaProfiles_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteOpaProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOpaProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteOpaProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteOpaProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete policy profile
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/OpaProfiles/list:
    get:
      operationId: OpaProfiles_OpaProfilesForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonExtendedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonExtendedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonExtendedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve policy profiles by organization Id
      tags:
      - OpaProfiles
  /api/v{v}/OpaProfiles/lockmanager:
    post:
      operationId: OpaProfiles_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpaProfileLockManagerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OpaProfileLockManagerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OpaProfileLockManagerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpaProfileLockManagerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock policy profile
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/OpaProfiles/enablegatekeeper:
    post:
      operationId: OpaProfiles_EnableGatekeeper
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnableGatekeeperCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EnableGatekeeperCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EnableGatekeeperCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnableGatekeeperCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Enable Gatekeeper by the projectId
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/OpaProfiles/disablegatekeeper:
    post:
      operationId: OpaProfiles_DisableGatekeeper
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DisableGatekeeperCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DisableGatekeeperCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DisableGatekeeperCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DisableGatekeeperCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Disable Gatekeeper by the projectId
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/OpaProfiles/make-default:
    post:
      operationId: OpaProfiles_MakeDefault
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpaMakeDefaultCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OpaMakeDefaultCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OpaMakeDefaultCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpaMakeDefaultCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Choose default policy profile
      tags:
      - OpaProfiles
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/update:
    post:
      operationId: Openstack_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateOpenStackCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenStackCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenStackCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOpenStackCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Openstack credentials
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/create:
    post:
      operationId: Openstack_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOpenstackCloudCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpenstackCloudCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOpenstackCloudCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOpenstackCloudCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Openstack credentials
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/zones:
    post:
      operationId: Openstack_ZoneList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenStackZoneListQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackZoneListQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenStackZoneListQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenStackZoneListQuery'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch Openstack zone list
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/regions:
    post:
      operationId: Openstack_Regions
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenStackRegionListQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackRegionListQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenStackRegionListQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenStackRegionListQuery'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve Openstack regions
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/networks:
    post:
      operationId: Openstack_Networks
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenStackNetworkListQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackNetworkListQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenStackNetworkListQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenStackNetworkListQuery'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of Openstack network
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/quotas:
    post:
      operationId: Openstack_Quotas
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenstackQuotasCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackQuotasCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenstackQuotasCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenstackQuotasCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OpenstackQuotaList'
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackQuotaList'
            text/json:
              schema:
                $ref: '#/components/schemas/OpenstackQuotaList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of Openstack quotas
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/projects:
    post:
      operationId: Openstack_Projects
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenStackProjectListQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenStackProjectListQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenStackProjectListQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenStackProjectListQuery'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of Openstack project
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/subnets:
    post:
      operationId: Openstack_Subnets
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenstackSubnetListQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackSubnetListQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenstackSubnetListQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenstackSubnetListQuery'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Subnet'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subnet'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subnet'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of Openstack subnet
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/volumes:
    post:
      operationId: Openstack_VolumeTypes
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenstackVolumeTypeListQuery'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenstackVolumeTypeListQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenstackVolumeTypeListQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenstackVolumeTypeListQuery'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of Openstack volume type
      tags:
      - Openstack
      x-codegen-request-body-name: body
  /api/v{v}/Openstack/list:
    get:
      operationId: Openstack_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OpenstackCredentialList'
            application/json:
              schema:
                $ref: '#/components/schemas/OpenstackCredentialList'
            text/json:
              schema:
                $ref: '#/components/schemas/OpenstackCredentialList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of openstack cloud credentials
      tags:
      - Openstack
  /api/v{v}/OpsCredentials:
    get:
      operationId: OpsCredentials_OperationCredentialsForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCredentialsForOrganizationEntity'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCredentialsForOrganizationEntity'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperationCredentialsForOrganizationEntity'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve operation credentials by organization Id
      tags:
      - OpsCredentials
    post:
      operationId: OpsCredentials_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add operation credential
      tags:
      - OpsCredentials
      x-codegen-request-body-name: body
  /api/v{v}/OpsCredentials/list:
    get:
      operationId: OpsCredentials_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OperationCredentials'
            application/json:
              schema:
                $ref: '#/components/schemas/OperationCredentials'
            text/json:
              schema:
                $ref: '#/components/schemas/OperationCredentials'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all operation credentials
      tags:
      - OpsCredentials
  /api/v{v}/OpsCredentials/lockmanager:
    post:
      operationId: OpsCredentials_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationCredentialLockManagerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialLockManagerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialLockManagerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationCredentialLockManagerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/unlock operation credential
      tags:
      - OpsCredentials
      x-codegen-request-body-name: body
  /api/v{v}/OpsCredentials/makedefault:
    post:
      operationId: OpsCredentials_MakeDefault
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsMakeDefaultCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsMakeDefaultCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsMakeDefaultCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationCredentialsMakeDefaultCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Make ops credentials default
      tags:
      - OpsCredentials
      x-codegen-request-body-name: body
  /api/v{v}/OpsCredentials/{id}:
    delete:
      operationId: OpsCredentials_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove operation credential
      tags:
      - OpsCredentials
  /api/v{v}/Organizations:
    get:
      operationId: Organizations_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationsList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all organizations
      tags:
      - Organizations
    post:
      operationId: Organizations_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateCommand'
        description: Create command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a new organization. Only available for admins.
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/Organizations/updatepaymentmethod:
    post:
      operationId: Organizations_UpdatePaymentMethod
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentIdCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentIdCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentIdCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentIdCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update organization payment Id
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/Organizations/export:
    get:
      operationId: Organizations_ExportCsv
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Export Csv file
      tags:
      - Organizations
  /api/v{v}/Organizations/update:
    post:
      operationId: Organizations_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update organization by Id
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/Organizations/updatesubscription:
    post:
      operationId: Organizations_UpdateSubscription
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationSubscriptionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationSubscriptionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationSubscriptionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationSubscriptionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update subscription
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/Organizations/toggle/keycloak:
    post:
      operationId: Organizations_ToggleKeycloak
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ToggleKeycloakCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleKeycloakCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ToggleKeycloakCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ToggleKeycloakCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Toggle keycloak login option
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/Organizations/details:
    get:
      operationId: Organizations_Details
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DashboardChart'
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardChart'
            text/json:
              schema:
                $ref: '#/components/schemas/DashboardChart'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all data about current organization by Id
      tags:
      - Organizations
  /api/v{v}/Organizations/delete/{organizationId}:
    post:
      operationId: Organizations_Delete
      parameters:
      - description: Id of the organization to delete
        in: path
        name: organizationId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete the specified organization.Only available for admins.
      tags:
      - Organizations
  /api/v{v}/Organizations/list:
    get:
      operationId: Organizations_OrganizationList
      parameters:
      - in: query
        name: partnerId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve organizations
      tags:
      - Organizations
  /api/v{v}/Organizations/leave:
    post:
      operationId: Organizations_LeaveTaikun
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LeaveTaikunCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveTaikunCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/LeaveTaikunCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LeaveTaikunCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LeaveTaikunDto'
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTaikunDto'
            text/json:
              schema:
                $ref: '#/components/schemas/LeaveTaikunDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Leave taikun
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/Organizations/accept-offer:
    post:
      operationId: Organizations_AcceptOffer
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AcceptOfferCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOfferCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AcceptOfferCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AcceptOfferCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Accept discount offer
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v{v}/OrganizationSubscriptions:
    get:
      operationId: OrganizationSubscriptions_List
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationSubscriptionList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSubscriptionList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationSubscriptionList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all org subscriptions
      tags:
      - OrganizationSubscriptions
  /api/v{v}/Partner/create:
    post:
      operationId: Partner_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partner_Create_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add partner
      tags:
      - Partner
  /api/v{v}/Partner/update/{id}:
    put:
      operationId: Partner_Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partner_Create_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit partner data by Id
      tags:
      - Partner
  /api/v{v}/Partner:
    get:
      operationId: Partner_List
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PartnersList'
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersList'
            text/json:
              schema:
                $ref: '#/components/schemas/PartnersList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get partners
      tags:
      - Partner
  /api/v{v}/Partner/details:
    get:
      operationId: Partner_Details
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PartnerDetailsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PartnerDetailsDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Details of partners
      tags:
      - Partner
  /api/v{v}/Partner/list:
    get:
      operationId: Partner_PartnerList
      parameters:
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/PartnerEntity'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartnerEntity'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartnerEntity'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get partners dropdown
      tags:
      - Partner
  /api/v{v}/Partner/info:
    get:
      operationId: Partner_PartnerInfoRegistration
      parameters:
      - in: query
        name: domain
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PartnerRecordDto'
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRecordDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PartnerRecordDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Partner
  /api/v{v}/Partner/bindorganizations:
    post:
      operationId: Partner_BindOrganizations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindOrganizationsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindOrganizationsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindOrganizationsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindOrganizationsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Partner
      x-codegen-request-body-name: body
  /api/v{v}/Partner/become-a-partner:
    post:
      operationId: Partner_BecomePartner
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BecomePartnerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BecomePartnerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BecomePartnerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BecomePartnerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Partner
      x-codegen-request-body-name: body
  /api/v{v}/Partner/contact-us:
    post:
      operationId: Partner_ContactUs
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactUsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactUsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactUsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Partner
      x-codegen-request-body-name: body
  /api/v{v}/Partner/add/whitelist/domain:
    post:
      operationId: Partner_AddWhiteListDomain
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Partner
      x-codegen-request-body-name: body
  /api/v{v}/Partner/delete/whitelist/domain:
    post:
      operationId: Partner_DeleteWhiteListDomain
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainDeleteCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainDeleteCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainDeleteCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WhiteListDomainDeleteCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Partner
      x-codegen-request-body-name: body
  /api/v{v}/Payment/createcustomer:
    post:
      operationId: Payment_CreateCustomer
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateStripeCustomerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStripeCustomerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateStripeCustomerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateStripeCustomerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create customer
      tags:
      - Payment
      x-codegen-request-body-name: body
  /api/v{v}/Payment/clear:
    post:
      operationId: Payment_ClearPayment
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClearCanceledPaymentMethodCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ClearCanceledPaymentMethodCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ClearCanceledPaymentMethodCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClearCanceledPaymentMethodCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Clear payment
      tags:
      - Payment
      x-codegen-request-body-name: body
  /api/v{v}/Payment/updatecard:
    post:
      operationId: Payment_UpdateCard
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeCardCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCardCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeCardCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeCardCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update your card
      tags:
      - Payment
      x-codegen-request-body-name: body
  /api/v{v}/Payment/finalprice:
    post:
      operationId: Payment_GetFinalPrice
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FinalPriceCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FinalPriceCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FinalPriceCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FinalPriceCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FinalPriceDto'
            application/json:
              schema:
                $ref: '#/components/schemas/FinalPriceDto'
            text/json:
              schema:
                $ref: '#/components/schemas/FinalPriceDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update your card
      tags:
      - Payment
      x-codegen-request-body-name: body
  /api/v{v}/Payment/pay:
    post:
      operationId: Payment_PayInvoice
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PayInvoiceCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PayInvoiceCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PayInvoiceCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayInvoiceCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Pay invoice
      tags:
      - Payment
      x-codegen-request-body-name: body
  /api/v{v}/Payment/webhook:
    post:
      operationId: Payment_Webhook
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Listen to payment webhook
      tags:
      - Payment
  /api/v{v}/Payment/stripeinvoices/{subscriptionId}:
    get:
      operationId: Payment_GetStripeInvoices
      parameters:
      - in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StripeInvoices'
            application/json:
              schema:
                $ref: '#/components/schemas/StripeInvoices'
            text/json:
              schema:
                $ref: '#/components/schemas/StripeInvoices'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get required stripe invoices by stripe subscription id
      tags:
      - Payment
  /api/v{v}/Payment/billing-info:
    get:
      operationId: Payment_GetBillingInfo
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingInfoDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingInfoDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get billing info for organization
      tags:
      - Payment
  /api/v{v}/Payment/cardinfo:
    get:
      operationId: Payment_GetCardInfo
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CardInformationDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CardInformationDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CardInformationDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get card information
      tags:
      - Payment
  /api/v{v}/PreDefinedQueries/prometheus/dashboard/list/{projectId}:
    get:
      operationId: PreDefinedQueries_GetPrometheusDashboardList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get list of pre defined organization prometheus dashboard elements
      tags:
      - PreDefinedQueries
  /api/v{v}/PreDefinedQueries/prometheus/dashboard/common/{projectId}:
    get:
      operationId: PreDefinedQueries_GetPrometheusCommonDashboardList
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrometheusDashboardListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get list of pre defined common prometheus dashboard elements
      tags:
      - PreDefinedQueries
  /api/v{v}/PreDefinedQueries/prometheus/dashboard/create:
    post:
      operationId: PreDefinedQueries_CreatePrometheusDashboard
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create prometheus dashboard pre defined query
      tags:
      - PreDefinedQueries
      x-codegen-request-body-name: body
  /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}:
    delete:
      operationId: PreDefinedQueries_DeletePrometheusDashboard
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete prometheus dashboard pre defined query
      tags:
      - PreDefinedQueries
  /api/v{v}/PreDefinedQueries/prometheus/dashboard/update:
    post:
      operationId: PreDefinedQueries_UpdatePrometheusDashboard
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardUpdateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardUpdateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardUpdateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrometheusDashboardUpdateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update prometheus dashboard pre defined query
      tags:
      - PreDefinedQueries
      x-codegen-request-body-name: body
  /api/v{v}/ProjectActions/update/{projectId}:
    post:
      operationId: ProjectActions_Edit
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectActionUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectActionUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectActionUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectActionUpdateDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update project action by ProjectId for poller
      tags:
      - ProjectActions
      x-codegen-request-body-name: body
  /api/v{v}/ProjectActions/delete:
    post:
      operationId: ProjectActions_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectActionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectActionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectActionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectActionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete the project action.
      tags:
      - ProjectActions
      x-codegen-request-body-name: body
  /api/v{v}/ProjectApp/install:
    post:
      operationId: ProjectApp_Install
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProjectAppCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectAppCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProjectAppCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProjectAppCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Install application
      tags:
      - ProjectApp
      x-codegen-request-body-name: body
  /api/v{v}/ProjectApp/sync:
    post:
      operationId: ProjectApp_Sync
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncProjectAppCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Sync application
      tags:
      - ProjectApp
      x-codegen-request-body-name: body
  /api/v{v}/ProjectApp/edit-params:
    post:
      operationId: ProjectApp_EditParams
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditProjectAppParamCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditProjectAppParamCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditProjectAppParamCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditProjectAppParamCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit project app params
      tags:
      - ProjectApp
      x-codegen-request-body-name: body
  /api/v{v}/ProjectApp/autosync:
    post:
      operationId: ProjectApp_AutoSync
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AutoSyncManagementCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSyncManagementCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AutoSyncManagementCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AutoSyncManagementCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: AutoSync management
      tags:
      - ProjectApp
      x-codegen-request-body-name: body
  /api/v{v}/ProjectApp/uninstall/{projectAppId}:
    delete:
      operationId: ProjectApp_Uninstall
      parameters:
      - in: path
        name: projectAppId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Uninstall application
      tags:
      - ProjectApp
  /api/v{v}/ProjectApp/lockmanager:
    post:
      operationId: ProjectApp_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LockProjectAppCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/LockProjectAppCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/LockProjectAppCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LockProjectAppCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock project app
      tags:
      - ProjectApp
      x-codegen-request-body-name: body
  /api/v{v}/ProjectApp/list:
    get:
      operationId: ProjectApp_List
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAppList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAppList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAppList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Project app list for organization
      tags:
      - ProjectApp
  /api/v{v}/ProjectApp/{id}:
    get:
      operationId: ProjectApp_Details
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectAppDetailsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAppDetailsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectAppDetailsDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Project App details
      tags:
      - ProjectApp
  /api/v{v}/ProjectGroups/create:
    post:
      operationId: ProjectGroups_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProjectGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProjectGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProjectGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Project groups
      tags:
      - ProjectGroups
      x-codegen-request-body-name: body
  /api/v{v}/ProjectGroups/update:
    put:
      operationId: ProjectGroups_Update
      parameters:
      - in: query
        name: projectGroupId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectGroupDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectGroupDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectGroupDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectGroupDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Project groups
      tags:
      - ProjectGroups
      x-codegen-request-body-name: body
  /api/v{v}/ProjectGroups/bind-user-groups:
    post:
      operationId: ProjectGroups_BindUserGroups
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindUserGroupsToProjectGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindUserGroupsToProjectGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindUserGroupsToProjectGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindUserGroupsToProjectGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind User groups
      tags:
      - ProjectGroups
      x-codegen-request-body-name: body
  /api/v{v}/ProjectGroups/list:
    get:
      operationId: ProjectGroups_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectGroupList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of Project groups
      tags:
      - ProjectGroups
  /api/v{v}/ProjectGroups/list-by-user-group-id:
    get:
      operationId: ProjectGroups_ListByUserGroupId
      parameters:
      - in: query
        name: userGroupId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of Project groups by user group id for dropdown
      tags:
      - ProjectGroups
  /api/v{v}/ProjectGroups:
    delete:
      operationId: ProjectGroups_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/*+json:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove Project group(s)
      tags:
      - ProjectGroups
      x-codegen-request-body-name: body
  /api/v{v}/ProjectGroups/{projectGroupId}/projects:
    get:
      operationId: ProjectGroups_ProjectListByProjectGroupId
      parameters:
      - in: path
        name: projectGroupId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of projects by project group id
      tags:
      - ProjectGroups
  /api/v{v}/ProjectInfracosts/upsert/{projectId}:
    post:
      operationId: ProjectInfracosts_Edit
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectInfracostUpsertDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectInfracostUpsertDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectInfracostUpsertDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectInfracostUpsertDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Upsert project infracost by ProjectId
      tags:
      - ProjectInfracosts
      x-codegen-request-body-name: body
  /api/v{v}/ProjectInfracosts/delete:
    post:
      operationId: ProjectInfracosts_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectInfracostCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectInfracostCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectInfracostCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectInfracostCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete the project infracost.
      tags:
      - ProjectInfracosts
      x-codegen-request-body-name: body
  /api/v{v}/ProjectInfracosts/{projectId}:
    get:
      operationId: ProjectInfracosts_Details
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EstimatedInfracost'
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedInfracost'
            text/json:
              schema:
                $ref: '#/components/schemas/EstimatedInfracost'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Project Infracost details
      tags:
      - ProjectInfracosts
  /api/v{v}/ProjectQuotas:
    get:
      operationId: ProjectQuotas_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startDiskSize
        schema:
          format: int64
          type: integer
      - in: query
        name: endDiskSize
        schema:
          format: int64
          type: integer
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectQuotaList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectQuotaList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectQuotaList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all project quotas
      tags:
      - ProjectQuotas
  /api/v{v}/ProjectQuotas/update:
    post:
      operationId: ProjectQuotas_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateQuotaCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuotaCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateQuotaCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateQuotaCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit project quota
      tags:
      - ProjectQuotas
      x-codegen-request-body-name: body
  /api/v{v}/ProjectRevisions/update/{projectId}:
    post:
      operationId: ProjectRevisions_Edit
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectRevisionUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRevisionUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectRevisionUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectRevisionUpdateDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update project revision by ProjectId for poller
      tags:
      - ProjectRevisions
      x-codegen-request-body-name: body
  /api/v{v}/Projects:
    get:
      operationId: Projects_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: updatedAt
        schema:
          format: date-time
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: backupCredentialId
        schema:
          format: int32
          type: integer
      - in: query
        name: healthy
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectsList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of projects.
      tags:
      - Projects
    post:
      operationId: Projects_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProjectCommand'
        description: Create command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a new project
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/forpoller:
    get:
      operationId: Projects_ListForPoller
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: updatedAt
        schema:
          format: date-time
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectListForPoller'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListForPoller'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectListForPoller'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of projects for poller. Only available for admins.
      tags:
      - Projects
  /api/v{v}/Projects/foralerting:
    get:
      operationId: Projects_ListWithAlerts
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForAlert'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForAlert'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForAlert'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of projects for alert poller. Only available for admins.
      tags:
      - Projects
  /api/v{v}/Projects/forbilling:
    get:
      operationId: Projects_ListForBilling
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsForBillingDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsForBillingDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsForBillingDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve projects for billing
      tags:
      - Projects
  /api/v{v}/Projects/extend/lifetime:
    post:
      operationId: Projects_ExtendLifeTime
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectExtendLifeTimeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectExtendLifeTimeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectExtendLifeTimeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectExtendLifeTimeCommand'
        description: Command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Extend life time of project
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/lokilogs:
    post:
      operationId: Projects_LokiLogs
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LokiResponseDto'
          application/json:
            schema:
              $ref: '#/components/schemas/LokiResponseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LokiResponseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LokiResponseDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve loki logs
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/commit/{projectId}:
    post:
      operationId: Projects_Commit
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Commit changes for the given project. The changes will then be applied
        and the project will be updated. The project must be in the READY state.
      tags:
      - Projects
  /api/v{v}/Projects/repair/{projectId}:
    post:
      operationId: Projects_Repair
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Repair project by Id
      tags:
      - Projects
  /api/v{v}/Projects/lockmanager:
    post:
      operationId: Projects_LockManager
      parameters:
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: mode
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock project
      tags:
      - Projects
  /api/v{v}/Projects/{projectId}:
    get:
      operationId: Projects_Details
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectForListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectForListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectForListDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve details of the project by Id
      tags:
      - Projects
  /api/v{v}/Projects/describe/{projectId}:
    get:
      operationId: Projects_Describe
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: isYaml
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Describe project by Id
      tags:
      - Projects
  /api/v{v}/Projects/upgrade/{projectId}:
    post:
      operationId: Projects_Upgrade
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Upgrade the project's Kubernetes to the next available version. Project
        must be READY.
      tags:
      - Projects
  /api/v{v}/Projects/delete:
    post:
      operationId: Projects_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete the project. The project must be empty (no server) and in READY
        state
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/deletewholeproject:
    post:
      operationId: Projects_DeleteWholeProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteWholeProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWholeProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteWholeProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteWholeProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete whole project by project Id
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/purge:
    post:
      operationId: Projects_Purge
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PurgeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PurgeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PurgeCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Purge a list of servers from project by project Id
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/purgewholeproject:
    post:
      operationId: Projects_PurgeWholeProject
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PurgeWholeProjectCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeWholeProjectCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PurgeWholeProjectCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PurgeWholeProjectCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Purge a whole project by project Id
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/update/{projectId}:
    post:
      operationId: Projects_Edit
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectForUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectForUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectForUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectForUpdateDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update project by Id for poller
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/updatehealth/{projectId}:
    post:
      operationId: Projects_EditHealthStatus
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectHealth'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectHealth'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectHealth'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectHealth'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update health status of the project by Id
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/reset:
    post:
      operationId: Projects_ResetProjectStatus
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResetProjectStatusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetProjectStatusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetProjectStatusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetProjectStatusCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Change the project status for the given project. Only available for
        admin.
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/list:
    get:
      operationId: Projects_ListSelector
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: catalogId
        schema:
          format: int32
          type: integer
      - in: query
        name: healthy
        schema:
          type: boolean
      - in: query
        name: userId
        schema:
          type: string
      - in: query
        name: ready
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownIsBoundDtoForProject'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownIsBoundDtoForProject'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownIsBoundDtoForProject'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List of projects with dropdown
      tags:
      - Projects
  /api/v{v}/Projects/monitoring:
    post:
      operationId: Projects_MonitoringOperations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MonitoringOperationsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringOperationsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/MonitoringOperationsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MonitoringOperationsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Monitoring operations enable/disable
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/toggle-spot-vms:
    post:
      operationId: Projects_SpotVmsOperations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SpotVmOperationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SpotVmOperationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SpotVmOperationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SpotVmOperationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Spot vm(s) operations enable/disable
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/toggle-spot-workers:
    post:
      operationId: Projects_SpotWorkersOperations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SpotWorkerOperationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SpotWorkerOperationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SpotWorkerOperationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SpotWorkerOperationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Spot worker(s) operations enable/disable
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/toggle-full-spot:
    post:
      operationId: Projects_FullSpotWorkersOperations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FullSpotOperationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/FullSpotOperationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/FullSpotOperationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FullSpotOperationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Full spot operations enable/disable
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/visibility/{projectId}:
    get:
      operationId: Projects_ProjectActionButtonVisibility
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectActionVisibilityDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectActionVisibilityDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectActionVisibilityDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Visibility of project actions
      tags:
      - Projects
  /api/v{v}/Projects/monitoringalerts:
    post:
      operationId: Projects_ProjectMonitoringAlerts
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectsMonitoringAlertsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsMonitoringAlertsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectsMonitoringAlertsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectsMonitoringAlertsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Monitoring alerts for project
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/Projects/prometheusmetrics:
    post:
      operationId: Projects_PrometheusMetrics
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrometheusMetricsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusMetricsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PrometheusMetricsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrometheusMetricsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Prometheus metrics data project
      tags:
      - Projects
      x-codegen-request-body-name: body
  /api/v{v}/ProjectTemplate/list:
    get:
      operationId: ProjectTemplate_ProjectTemplateForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTemplateDropdownListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTemplateDropdownListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectTemplateDropdownListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve project template by organization Id
      tags:
      - ProjectTemplate
  /api/v{v}/ProjectTemplate:
    get:
      operationId: ProjectTemplate_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectTemplateList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTemplateList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectTemplateList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all project templates
      tags:
      - ProjectTemplate
  /api/v{v}/ProjectTemplate/{id}:
    delete:
      operationId: ProjectTemplate_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete project template by Id
      tags:
      - ProjectTemplate
  /api/v{v}/ProjectTemplate/create-project:
    post:
      operationId: ProjectTemplate_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProjectFromTemplateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create project from template
      tags:
      - ProjectTemplate
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus:
    get:
      operationId: Prometheus_ListOfRules
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: partnerId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrometheusRulesList'
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesList'
            text/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of prometheus rules
      tags:
      - Prometheus
    post:
      operationId: Prometheus_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RuleCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RuleCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RuleCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add prometheus rule
      tags:
      - Prometheus
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus/export:
    get:
      operationId: Prometheus_ExportCsv
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: isEmailEnabled
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Export Csv file
      tags:
      - Prometheus
  /api/v{v}/Prometheus/grouped:
    get:
      operationId: Prometheus_GroupedList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: periodDuration
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of grouped prometheus billing
      tags:
      - Prometheus
  /api/v{v}/Prometheus/billing:
    get:
      operationId: Prometheus_BillingList
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrometheusBillingInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusBillingInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/PrometheusBillingInfo'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all prometheus billing
      tags:
      - Prometheus
    post:
      operationId: Prometheus_CreateBilling
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrometheusBillingCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusBillingCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PrometheusBillingCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrometheusBillingCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add prometheus billing
      tags:
      - Prometheus
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus/bindorganizations:
    post:
      operationId: Prometheus_BindOrganizations
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindPrometheusOrganizationsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindPrometheusOrganizationsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindPrometheusOrganizationsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindPrometheusOrganizationsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind organizations to prometheus rule
      tags:
      - Prometheus
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus/bindrules:
    post:
      operationId: Prometheus_BindRules
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindRulesCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindRulesCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindRulesCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindRulesCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind rules to organizations
      tags:
      - Prometheus
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus/metricname:
    post:
      operationId: Prometheus_MetricName
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MetricNameCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/MetricNameCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/MetricNameCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MetricNameCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch prometheus metric names
      tags:
      - Prometheus
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus/{id}:
    delete:
      operationId: Prometheus_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Remove prometheus rule
      tags:
      - Prometheus
  /api/v{v}/Prometheus/update/{id}:
    post:
      operationId: Prometheus_Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RuleForUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RuleForUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RuleForUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RuleForUpdateDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit prometheus rule
      tags:
      - Prometheus
      x-codegen-request-body-name: body
  /api/v{v}/Prometheus/details:
    get:
      operationId: Prometheus_Details
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownIsBoundDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownIsBoundDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownIsBoundDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all prometheus rules with detailed info
      tags:
      - Prometheus
  /api/v{v}/Proxmox/create:
    post:
      operationId: Proxmox_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateProxmoxCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProxmoxCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProxmoxCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProxmoxCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Proxmox credentials
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Proxmox/hypervisor-list:
    post:
      operationId: Proxmox_HypervisorList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/HypervisorListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/HypervisorListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/HypervisorListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ProxmoxHypervisorDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProxmoxHypervisorDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProxmoxHypervisorDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch proxmox hypervisor list
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Proxmox/bridge-list:
    post:
      operationId: Proxmox_BridgeList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BridgeListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BridgeListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BridgeListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BridgeListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch proxmox bridge list
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Proxmox/storage-list:
    post:
      operationId: Proxmox_StorageList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StorageListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StorageListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StorageListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StorageListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch proxmox storage list
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Proxmox/vm-template-list:
    post:
      operationId: Proxmox_VmTemplateList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VmTemplateListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/VmTemplateListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VmTemplateListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VmTemplateListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Fetch proxmox vm template list
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Proxmox/list:
    get:
      operationId: Proxmox_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProxmoxList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProxmoxList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of proxmox cloud credentials
      tags:
      - Proxmox
  /api/v{v}/Proxmox/update:
    post:
      operationId: Proxmox_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProxmoxCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProxmoxCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProxmoxCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProxmoxCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Proxmox credentials
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Proxmox/update/hypervisors:
    post:
      operationId: Proxmox_UpdateHypervisors
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateHypervisorsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHypervisorsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateHypervisorsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateHypervisorsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Proxmox hypervisors
      tags:
      - Proxmox
      x-codegen-request-body-name: body
  /api/v{v}/Repository/recommended:
    get:
      operationId: Repository_TaikunRecommendedRepositoryList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ArtifactRepositoryDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArtifactRepositoryDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArtifactRepositoryDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve taikun recommended repository list
      tags:
      - Repository
  /api/v{v}/Repository/available:
    get:
      operationId: Repository_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: isPrivate
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppRepositoryList'
            application/json:
              schema:
                $ref: '#/components/schemas/AppRepositoryList'
            text/json:
              schema:
                $ref: '#/components/schemas/AppRepositoryList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve available repository list
      tags:
      - Repository
  /api/v{v}/Repository/bind:
    post:
      operationId: Repository_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindAppRepositoryCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindAppRepositoryCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindAppRepositoryCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindAppRepositoryCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind repo to organization
      tags:
      - Repository
      x-codegen-request-body-name: body
  /api/v{v}/Repository/unbind:
    post:
      operationId: Repository_Unbind
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UnbindAppRepositoryCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UnbindAppRepositoryCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UnbindAppRepositoryCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnbindAppRepositoryCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Unbind repo from organization
      tags:
      - Repository
      x-codegen-request-body-name: body
  /api/v{v}/Repository/import:
    post:
      operationId: Repository_Import
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ImportRepoCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRepoCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ImportRepoCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ImportRepoCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Import repo to artifact
      tags:
      - Repository
      x-codegen-request-body-name: body
  /api/v{v}/Repository/disable:
    post:
      operationId: Repository_Disable
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DisableRepoCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DisableRepoCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DisableRepoCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DisableRepoCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Disable repo from organization
      tags:
      - Repository
      x-codegen-request-body-name: body
  /api/v{v}/Repository/delete:
    post:
      operationId: Repository_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete repo from organization
      tags:
      - Repository
      x-codegen-request-body-name: body
  /api/v{v}/S3Credentials:
    get:
      operationId: S3Credentials_BackupCredentialsForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/BackupCredentialsForOrganizationEntity'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BackupCredentialsForOrganizationEntity'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BackupCredentialsForOrganizationEntity'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all S3 credentials for organization
      tags:
      - S3Credentials
    post:
      operationId: S3Credentials_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add S3 credential
      tags:
      - S3Credentials
      x-codegen-request-body-name: body
    put:
      operationId: S3Credentials_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsUpdateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsUpdateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsUpdateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsUpdateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update S3 credential
      tags:
      - S3Credentials
      x-codegen-request-body-name: body
  /api/v{v}/S3Credentials/list:
    get:
      operationId: S3Credentials_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackupCredentials'
            application/json:
              schema:
                $ref: '#/components/schemas/BackupCredentials'
            text/json:
              schema:
                $ref: '#/components/schemas/BackupCredentials'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all S3 credentials
      tags:
      - S3Credentials
  /api/v{v}/S3Credentials/lockmanager:
    post:
      operationId: S3Credentials_LockManager
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BackupLockManagerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BackupLockManagerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BackupLockManagerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BackupLockManagerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/Unlock S3 credentials
      tags:
      - S3Credentials
      x-codegen-request-body-name: body
  /api/v{v}/S3Credentials/makedefault:
    post:
      operationId: S3Credentials_MakeDefault
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BackupMakeDefaultCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BackupMakeDefaultCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BackupMakeDefaultCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BackupMakeDefaultCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Make backup credentials default
      tags:
      - S3Credentials
      x-codegen-request-body-name: body
  /api/v{v}/S3Credentials/{id}:
    delete:
      operationId: S3Credentials_Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove S3 credentials by Id
      tags:
      - S3Credentials
  /api/v{v}/Search/partners:
    post:
      operationId: Search_PartnersList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PartnersSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PartnersSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PartnersSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PartnersSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PartnersSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/PartnersSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for partners
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/users:
    post:
      operationId: Search_UsersList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UsersSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UsersSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UsersSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for users
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/backup-credentials:
    post:
      operationId: Search_BackupCredentialsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BackupCredentialsSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackupCredentialsSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/BackupCredentialsSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/BackupCredentialsSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for backup credentials
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/cloud-credentials:
    post:
      operationId: Search_CloudCredentialsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CloudCredentialsSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for cloud credentials
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/access-profiles:
    post:
      operationId: Search_AccessProfilesList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccessProfilesSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfilesSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/AccessProfilesSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccessProfilesSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccessProfilesSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfilesSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/AccessProfilesSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for access profiles
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/stand-alone-profiles:
    post:
      operationId: Search_StandAloneProfilesList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfilesSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfilesSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfilesSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfilesSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StandAloneProfilesSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/StandAloneProfilesSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/StandAloneProfilesSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for stand alone profiles
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/kubernetes-profiles:
    post:
      operationId: Search_KubernetesProfilesList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/KubernetesProfilesSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/KubernetesProfilesSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes profiles
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/billing-credentials:
    post:
      operationId: Search_BillingCredentialsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BillingCredentialsSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BillingCredentialsSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BillingCredentialsSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BillingCredentialsSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BillingCredentialsSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/BillingCredentialsSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/BillingCredentialsSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for billing credentials
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/organizations:
    post:
      operationId: Search_OrganizationsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OrganizationSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganizationSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganizationSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganizationSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganizationSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for organizations
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/projects:
    post:
      operationId: Search_ProjectsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectsSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectsSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectsSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectsSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectsSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for projects
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/prometheus-rules:
    post:
      operationId: Search_PrometheusRulesList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrometheusRulesSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for prometheus rules
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/servers:
    post:
      operationId: Search_ServersList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServersSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ServersSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ServersSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServersSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServersSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/ServersSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/ServersSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for servers
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/pods:
    post:
      operationId: Search_PodsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PodsSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PodsSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PodsSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PodsSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PodsSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/PodsSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/PodsSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes pods
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/nodes:
    post:
      operationId: Search_NodesList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NodesSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/NodesSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/NodesSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NodesSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NodesSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/NodesSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/NodesSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes nodes
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/config-maps:
    post:
      operationId: Search_ConfigMapList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConfigMapSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigMapSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ConfigMapSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConfigMapSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigMapSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMapSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigMapSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes config maps
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/deployments:
    post:
      operationId: Search_DeploymentList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeploymentSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeploymentSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeploymentSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeploymentSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/DeploymentSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes deployments
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/pvcs:
    post:
      operationId: Search_PersistenceVolumeClaimList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PvcSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PvcSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PvcSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PvcSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PvcSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/PvcSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/PvcSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes persistent volume claims
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/secrets:
    post:
      operationId: Search_SecretList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SecretSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SecretSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SecretSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SecretSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SecretSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/SecretSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes secrets
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/sts:
    post:
      operationId: Search_StsList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StsSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StsSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StsSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StsSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StsSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/StsSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/StsSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes stateful sets
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/services:
    post:
      operationId: Search_ServiceList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes services
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/ingress:
    post:
      operationId: Search_IngressList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IngressSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/IngressSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/IngressSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IngressSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IngressSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/IngressSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/IngressSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes ingress
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/Search/daemon-sets:
    post:
      operationId: Search_DaemonSetList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DaemonSetSearchCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DaemonSetSearchCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DaemonSetSearchCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DaemonSetSearchCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DaemonSetSearchList'
            application/json:
              schema:
                $ref: '#/components/schemas/DaemonSetSearchList'
            text/json:
              schema:
                $ref: '#/components/schemas/DaemonSetSearchList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Global search for kubernetes daemon sets
      tags:
      - Search
      x-codegen-request-body-name: body
  /api/v{v}/SecurityGroup/list/{standAloneProfileId}:
    post:
      operationId: SecurityGroup_List
      parameters:
      - in: path
        name: standAloneProfileId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityGroupListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityGroupListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityGroupListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List stand alone security group by profile id
      tags:
      - SecurityGroup
  /api/v{v}/SecurityGroup/create:
    post:
      operationId: SecurityGroup_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSecurityGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSecurityGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create standalone profile security group
      tags:
      - SecurityGroup
      x-codegen-request-body-name: body
  /api/v{v}/SecurityGroup/edit:
    post:
      operationId: SecurityGroup_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditSecurityGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditSecurityGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditSecurityGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditSecurityGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: EDit standalone profile security group
      tags:
      - SecurityGroup
      x-codegen-request-body-name: body
  /api/v{v}/SecurityGroup/delete:
    post:
      operationId: SecurityGroup_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete standalone profile security group
      tags:
      - SecurityGroup
      x-codegen-request-body-name: body
  /api/v{v}/Servers:
    get:
      operationId: Servers_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startDiskSize
        schema:
          format: int64
          type: integer
      - in: query
        name: endDiskSize
        schema:
          format: int64
          type: integer
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: filterBy
        schema:
          type: string
      - in: query
        name: autoscalingGroup
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServersList'
            application/json:
              schema:
                $ref: '#/components/schemas/ServersList'
            text/json:
              schema:
                $ref: '#/components/schemas/ServersList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all servers according to roles
      tags:
      - Servers
    post:
      operationId: Servers_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServerForCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ServerForCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ServerForCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServerForCreateDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a new server in the given project.
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Servers/reboot:
    post:
      operationId: Servers_Reboot
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RebootServerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RebootServerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RebootServerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RebootServerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Reboot servers
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Servers/console:
    post:
      operationId: Servers_Console
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConsoleScreenshotCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ConsoleScreenshotCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ConsoleScreenshotCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConsoleScreenshotCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Console servers
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Servers/status/{serverId}:
    get:
      operationId: Servers_ShowServerStatus
      parameters:
      - in: path
        name: serverId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Show server status
      tags:
      - Servers
  /api/v{v}/Servers/update:
    post:
      operationId: Servers_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateServerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateServerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateServerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update server
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Servers/update/{projectId}:
    put:
      operationId: Servers_UpdateByProjectId
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateServerHealthDto'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateServerHealthDto'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateServerHealthDto'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateServerHealthDto'
              type: array
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update server by projectId
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Servers/{projectId}:
    get:
      operationId: Servers_Details
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: withAutoscalingGroup
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServersListForDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ServersListForDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ServersListForDetails'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of servers with detailed info
      tags:
      - Servers
  /api/v{v}/Servers/reset:
    post:
      operationId: Servers_Reset
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResetServerStatusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetServerStatusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetServerStatusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetServerStatusCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update statuses of servers by project Id
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Servers/delete:
    post:
      operationId: Servers_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteServerCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteServerCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteServerCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete servers by project Id
      tags:
      - Servers
      x-codegen-request-body-name: body
  /api/v{v}/Slack/create:
    post:
      operationId: Slack_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSlackConfigurationCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSlackConfigurationCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSlackConfigurationCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSlackConfigurationCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create slack configuration
      tags:
      - Slack
      x-codegen-request-body-name: body
  /api/v{v}/Slack/update/{id}:
    put:
      operationId: Slack_Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateSlackConfigurationDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSlackConfigurationDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSlackConfigurationDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSlackConfigurationDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update slack configuration
      tags:
      - Slack
      x-codegen-request-body-name: body
  /api/v{v}/Slack/delete-multiple:
    post:
      operationId: Slack_DeleteMultiple
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteSlackConfigCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSlackConfigCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteSlackConfigCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteSlackConfigCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete slack configurations (s)
      tags:
      - Slack
      x-codegen-request-body-name: body
  /api/v{v}/Slack:
    get:
      operationId: Slack_List
      parameters:
      - description: Only for admin sort by org id
        in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SlackConfigurationList'
            application/json:
              schema:
                $ref: '#/components/schemas/SlackConfigurationList'
            text/json:
              schema:
                $ref: '#/components/schemas/SlackConfigurationList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of slack configs.
      tags:
      - Slack
  /api/v{v}/Slack/list:
    get:
      operationId: Slack_SlackConfigurationForOrganizationList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all slack configs for organization
      tags:
      - Slack
  /api/v{v}/Slack/verify:
    post:
      operationId: Slack_VerifySlackCredentials
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VerifySlackCredentialsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySlackCredentialsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifySlackCredentialsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifySlackCredentialsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Verify slack credentials
      tags:
      - Slack
      x-codegen-request-body-name: body
  /api/v{v}/SshUsers/list/{accessProfileId}:
    get:
      operationId: SshUsers_List
      parameters:
      - in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/SshUsersListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SshUsersListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/SshUsersListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List ssh users by profile id
      tags:
      - SshUsers
  /api/v{v}/SshUsers/create:
    post:
      operationId: SshUsers_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSshUserCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSshUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSshUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSshUserCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create access profile ssh user
      tags:
      - SshUsers
      x-codegen-request-body-name: body
  /api/v{v}/SshUsers/edit:
    post:
      operationId: SshUsers_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditSshUserCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditSshUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditSshUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditSshUserCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit access profile ssh user
      tags:
      - SshUsers
      x-codegen-request-body-name: body
  /api/v{v}/SshUsers/delete:
    post:
      operationId: SshUsers_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteSshUserCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSshUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteSshUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteSshUserCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete access profile ssh user
      tags:
      - SshUsers
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone:
    get:
      operationId: StandAlone_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: startRam
        schema:
          format: double
          type: number
      - in: query
        name: endRam
        schema:
          format: double
          type: number
      - in: query
        name: startDiskSize
        schema:
          format: int64
          type: integer
      - in: query
        name: endDiskSize
        schema:
          format: int64
          type: integer
      - in: query
        name: startCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: endCpu
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: filterBy
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StandaloneVmsList'
            application/json:
              schema:
                $ref: '#/components/schemas/StandaloneVmsList'
            text/json:
              schema:
                $ref: '#/components/schemas/StandaloneVmsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all StandaloneVms according to roles
      tags:
      - StandAlone
  /api/v{v}/StandAlone/forpoller:
    get:
      operationId: StandAlone_ListForPoller
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StandaloneVmsListForPoller'
            application/json:
              schema:
                $ref: '#/components/schemas/StandaloneVmsListForPoller'
            text/json:
              schema:
                $ref: '#/components/schemas/StandaloneVmsListForPoller'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: List all StandaloneVms for poller
      tags:
      - StandAlone
  /api/v{v}/StandAlone/create:
    post:
      operationId: StandAlone_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create stand alone vm
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/update/flavor:
    post:
      operationId: StandAlone_UpdateFlavor
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmFlavorCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmFlavorCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmFlavorCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmFlavorCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update stand alone vm flavor
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/update:
    post:
      operationId: StandAlone_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update stand alone vm
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/delete:
    post:
      operationId: StandAlone_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete/purge stand alone vm
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/purge:
    post:
      operationId: StandAlone_Purge
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Purge stand alone based project
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/reset:
    post:
      operationId: StandAlone_Reset
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmStatusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmStatusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmStatusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmStatusCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Reset stand alone vm status
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/commit:
    post:
      operationId: StandAlone_Commit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CommitStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CommitStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CommitStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommitStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Commit stand alone vm
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/repair:
    post:
      operationId: StandAlone_Repair
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RepairStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RepairStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RepairStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RepairStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Repair stand alone vm
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/ip/management:
    post:
      operationId: StandAlone_IpManagement
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StandAloneVmIpManagementCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StandAloneVmIpManagementCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StandAloneVmIpManagementCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StandAloneVmIpManagementCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Enable/Disable stand alone public ip
      tags:
      - StandAlone
      x-codegen-request-body-name: body
  /api/v{v}/StandAlone/project/{projectId}:
    get:
      operationId: StandAlone_ProjectDetails
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectFullListDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFullListDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectFullListDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve details of the project by Id
      tags:
      - StandAlone
  /api/v{v}/StandAlone/{projectId}:
    get:
      operationId: StandAlone_Details
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StandAloneVmListForDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/StandAloneVmListForDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/StandAloneVmListForDetails'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of standalone vm with detailed info
      tags:
      - StandAlone
  /api/v{v}/StandAloneActions/password:
    post:
      operationId: StandAloneActions_InstancePassword
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StandAloneActions_InstancePassword_request'
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve aws windows admin instance password
      tags:
      - StandAloneActions
  /api/v{v}/StandAloneActions/reboot:
    post:
      operationId: StandAloneActions_Reboot
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RebootStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/RebootStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RebootStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RebootStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Reboot standalone vm instance
      tags:
      - StandAloneActions
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneActions/download/rdp/{id}:
    get:
      operationId: StandAloneActions_ExportCsv
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Download RDP file
      tags:
      - StandAloneActions
  /api/v{v}/StandAloneActions/console:
    post:
      operationId: StandAloneActions_Console
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VmConsoleScreenshotCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/VmConsoleScreenshotCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VmConsoleScreenshotCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VmConsoleScreenshotCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Console info standalone vm instance
      tags:
      - StandAloneActions
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneActions/stop:
    post:
      operationId: StandAloneActions_Stop
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StopStandaloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StopStandaloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StopStandaloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StopStandaloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Stop standalone vm instance
      tags:
      - StandAloneActions
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneActions/start:
    post:
      operationId: StandAloneActions_Start
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StartStandaloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StartStandaloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StartStandaloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StartStandaloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Start standalone vm instance
      tags:
      - StandAloneActions
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneActions/shelve:
    post:
      operationId: StandAloneActions_Shelve
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ShelveStandAloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ShelveStandAloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ShelveStandAloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ShelveStandAloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Shelve standalone vm instance
      tags:
      - StandAloneActions
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneActions/unshelve:
    post:
      operationId: StandAloneActions_Unshelve
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UnshelveStandaloneVmCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UnshelveStandaloneVmCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UnshelveStandaloneVmCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnshelveStandaloneVmCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Unshelve standalone vm instance
      tags:
      - StandAloneActions
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneActions/status/{id}:
    get:
      operationId: StandAloneActions_ShowStandaloneVmStatus
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Show standalone vm status
      tags:
      - StandAloneActions
  /api/v{v}/StandAloneProfile:
    get:
      operationId: StandAloneProfile_List
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StandAloneProfiles'
            application/json:
              schema:
                $ref: '#/components/schemas/StandAloneProfiles'
            text/json:
              schema:
                $ref: '#/components/schemas/StandAloneProfiles'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of stand alone profiles
      tags:
      - StandAloneProfile
  /api/v{v}/StandAloneProfile/list:
    get:
      operationId: StandAloneProfile_DropdownList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve dropdown list of stand alone profiles
      tags:
      - StandAloneProfile
  /api/v{v}/StandAloneProfile/create:
    post:
      operationId: StandAloneProfile_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileCreateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create standalone profile
      tags:
      - StandAloneProfile
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneProfile/delete:
    post:
      operationId: StandAloneProfile_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneProfileCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneProfileCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneProfileCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneProfileCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete standalone profile
      tags:
      - StandAloneProfile
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneProfile/edit:
    post:
      operationId: StandAloneProfile_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileUpdateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileUpdateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileUpdateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileUpdateCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update standalone profile
      tags:
      - StandAloneProfile
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneProfile/lockmanager:
    post:
      operationId: StandAloneProfile_LockManagement
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileLockManagementCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileLockManagementCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileLockManagementCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StandAloneProfileLockManagementCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Lock/unlock standalone profile
      tags:
      - StandAloneProfile
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneVmDisks/create:
    post:
      operationId: StandAloneVmDisks_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneDiskCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneDiskCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneDiskCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateStandAloneDiskCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add disk for stand alone vm
      tags:
      - StandAloneVmDisks
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneVmDisks/delete:
    post:
      operationId: StandAloneVmDisks_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmDiskCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmDiskCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmDiskCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteStandAloneVmDiskCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete disk by id
      tags:
      - StandAloneVmDisks
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneVmDisks/purge:
    post:
      operationId: StandAloneVmDisks_Purge
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneVmDiskCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneVmDiskCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneVmDiskCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PurgeStandAloneVmDiskCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Purge disks by id
      tags:
      - StandAloneVmDisks
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneVmDisks/update-size:
    post:
      operationId: StandAloneVmDisks_UpdateDiskSize
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskSizeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskSizeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskSizeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskSizeCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update disk size by id
      tags:
      - StandAloneVmDisks
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneVmDisks/update:
    post:
      operationId: StandAloneVmDisks_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateStandaloneVmDiskCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update disk by id
      tags:
      - StandAloneVmDisks
      x-codegen-request-body-name: body
  /api/v{v}/StandAloneVmDisks/reset:
    post:
      operationId: StandAloneVmDisks_Reset
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmDiskStatusCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmDiskStatusCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmDiskStatusCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetStandAloneVmDiskStatusCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update statuses of disks by vm Id
      tags:
      - StandAloneVmDisks
      x-codegen-request-body-name: body
  /api/v{v}/Subscription/create:
    post:
      operationId: Subscription_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add new subscription package
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/v{v}/Subscription/bind:
    post:
      operationId: Subscription_Bind
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindSubscriptionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindSubscriptionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindSubscriptionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindSubscriptionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BindSubscriptionResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BindSubscriptionResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BindSubscriptionResponseDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind subscription
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/v{v}/Subscription/delete:
    post:
      operationId: Subscription_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteSubscriptionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSubscriptionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteSubscriptionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteSubscriptionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Delete subscription package
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/v{v}/Subscription/update:
    post:
      operationId: Subscription_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add new subscription package
      tags:
      - Subscription
      x-codegen-request-body-name: body
  /api/v{v}/Subscription/boundlist:
    get:
      operationId: Subscription_SubscriptionForOrganizationList
      parameters:
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ListForOrganizationEditDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListForOrganizationEditDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListForOrganizationEditDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve subscription for organization bound
      tags:
      - Subscription
  /api/v{v}/Subscription/public:
    get:
      operationId: Subscription_SubscriptionForLandingPage
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ListForLandingPageDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListForLandingPageDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListForLandingPageDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve public subscription list for landing page
      tags:
      - Subscription
  /api/v{v}/Subscription:
    get:
      operationId: Subscription_List
      parameters:
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrivateSubscriptionList'
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSubscriptionList'
            text/json:
              schema:
                $ref: '#/components/schemas/PrivateSubscriptionList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve private subscription list for partners
      tags:
      - Subscription
  /api/v{v}/Tanzu/create:
    post:
      operationId: Tanzu_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTanzuCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTanzuCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTanzuCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTanzuCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add Tanzu credentials
      tags:
      - Tanzu
      x-codegen-request-body-name: body
  /api/v{v}/Tanzu/storage-list:
    post:
      operationId: Tanzu_StorageList
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TanzuStorageListCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/TanzuStorageListCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/TanzuStorageListCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TanzuStorageListCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Tanzu storage list
      tags:
      - Tanzu
      x-codegen-request-body-name: body
  /api/v{v}/Tanzu/update:
    post:
      operationId: Tanzu_Update
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateTanzuCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTanzuCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTanzuCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTanzuCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update Tanzu credentials
      tags:
      - Tanzu
      x-codegen-request-body-name: body
  /api/v{v}/Tanzu/kubernetes-versions/{cloudId}:
    get:
      operationId: Tanzu_KubernetesVersions
      parameters:
      - in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Tanzu available k8s version list
      tags:
      - Tanzu
  /api/v{v}/Tanzu/list:
    get:
      operationId: Tanzu_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TanzuCredentialsList'
            application/json:
              schema:
                $ref: '#/components/schemas/TanzuCredentialsList'
            text/json:
              schema:
                $ref: '#/components/schemas/TanzuCredentialsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of tanzu cloud credentials
      tags:
      - Tanzu
  /api/v{v}/Ticket/create:
    post:
      operationId: Ticket_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create ticket
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/set-priority:
    post:
      operationId: Ticket_SetPriority
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SetTicketPriorityCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/SetTicketPriorityCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/SetTicketPriorityCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetTicketPriorityCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Set priority
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/edit:
    post:
      operationId: Ticket_Edit
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit ticket
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/transfer:
    post:
      operationId: Ticket_Transfer
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TransferTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/TransferTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/TransferTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TransferTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Transfer ticket
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/edit/message:
    post:
      operationId: Ticket_UpdateMessage
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EditArticleCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/EditArticleCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/EditArticleCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditArticleCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Edit ticket message
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/delete/message/{messageId}:
    delete:
      operationId: Ticket_DeleteMessage
      parameters:
      - in: path
        name: messageId
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete ticket message
      tags:
      - Ticket
  /api/v{v}/Ticket/delete/{ticketId}:
    delete:
      operationId: Ticket_Delete
      parameters:
      - in: path
        name: ticketId
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete ticket
      tags:
      - Ticket
  /api/v{v}/Ticket/open:
    post:
      operationId: Ticket_Open
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Open ticket
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/reply:
    post:
      operationId: Ticket_Reply
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReplyTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ReplyTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReplyTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Reply message
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/close:
    post:
      operationId: Ticket_Close
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CloseTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CloseTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CloseTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CloseTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Close ticket
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/archive:
    post:
      operationId: Ticket_Archive
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ArchiveTicketCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveTicketCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ArchiveTicketCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ArchiveTicketCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Archive ticket
      tags:
      - Ticket
      x-codegen-request-body-name: body
  /api/v{v}/Ticket/list:
    get:
      operationId: Ticket_TicketList
      parameters:
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - description: Keyword for searching
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - in: query
        name: ticketId
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AllTicketsList'
            application/json:
              schema:
                $ref: '#/components/schemas/AllTicketsList'
            text/json:
              schema:
                $ref: '#/components/schemas/AllTicketsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve a list of tickets.
      tags:
      - Ticket
  /api/v{v}/Ticket/{ticketId}/messages:
    get:
      operationId: Ticket_ArticleList
      parameters:
      - in: path
        name: ticketId
        required: true
        schema:
          type: string
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ArticleList'
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleList'
            text/json:
              schema:
                $ref: '#/components/schemas/ArticleList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve articles of ticket.
      tags:
      - Ticket
  /api/v{v}/Ticket/transfer/list:
    get:
      operationId: Ticket_TransferList
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/TransferList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TransferList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TransferList'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve organization managers.
      tags:
      - Ticket
  /api/v{v}/UserGroups/create:
    post:
      operationId: UserGroups_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateUserGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Add User groups
      tags:
      - UserGroups
      x-codegen-request-body-name: body
  /api/v{v}/UserGroups/update:
    put:
      operationId: UserGroups_Update
      parameters:
      - in: query
        name: userGroupId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroupDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroupDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroupDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroupDto'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update User groups
      tags:
      - UserGroups
      x-codegen-request-body-name: body
  /api/v{v}/UserGroups/bind-project-groups:
    post:
      operationId: UserGroups_BindProjectGroups
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindProjectGroupsToUserGroupCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindProjectGroupsToUserGroupCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindProjectGroupsToUserGroupCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindProjectGroupsToUserGroupCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind Project groups
      tags:
      - UserGroups
      x-codegen-request-body-name: body
  /api/v{v}/UserGroups/list:
    get:
      operationId: UserGroups_List
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserGroupList'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupList'
            text/json:
              schema:
                $ref: '#/components/schemas/UserGroupList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of User groups
      tags:
      - UserGroups
  /api/v{v}/UserGroups/list-by-project-group-id:
    get:
      operationId: UserGroups_ListByProjectGroupId
      parameters:
      - in: query
        name: projectGroupId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of User groups by project group id for dropdown
      tags:
      - UserGroups
  /api/v{v}/UserGroups:
    delete:
      operationId: UserGroups_Delete
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/*+json:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: Remove User group(s)
      tags:
      - UserGroups
      x-codegen-request-body-name: body
  /api/v{v}/UserGroups/{userGroupId}/users:
    get:
      operationId: UserGroups_UserListByProjectGroupId
      parameters:
      - in: path
        name: userGroupId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectListForProjectGroupDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve list of users by user group id
      tags:
      - UserGroups
  /api/v{v}/UserProjects/bindprojects:
    post:
      operationId: UserProjects_BindProjects
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindProjectsCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindProjectsCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindProjectsCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindProjectsCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind projects to users
      tags:
      - UserProjects
      x-codegen-request-body-name: body
  /api/v{v}/UserProjects/bindusers:
    post:
      operationId: UserProjects_BindUsers
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindUsersCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindUsersCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindUsersCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindUsersCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind users to projects
      tags:
      - UserProjects
      x-codegen-request-body-name: body
  /api/v{v}/UserProjects/users/list/{projectId}:
    get:
      operationId: UserProjects_UsersListByProject
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringBasedDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Users list by project id
      tags:
      - UserProjects
  /api/v{v}/UserProjects/projects/list:
    get:
      operationId: UserProjects_ProjectsListByUser
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonDropdownDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Projects list for user
      tags:
      - UserProjects
  /api/v{v}/Users:
    get:
      operationId: Users_List
      parameters:
      - description: Skip elements
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limits user size (by default 50)
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Retrieve only members of organizationId
        in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: searchId
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersList'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve all users (only valid for admin).
      tags:
      - Users
    post:
      operationId: Users_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
        description: Create command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a new user
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/force-to-reset:
    post:
      operationId: Users_ForceToResetPassword
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ForceToResetPasswordCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ForceToResetPasswordCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ForceToResetPasswordCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForceToResetPasswordCommand'
        description: Command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Force to reset password
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/toggle-demo-mode:
    post:
      operationId: Users_ToggleDemoMode
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ToggleDemoModeCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleDemoModeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ToggleDemoModeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ToggleDemoModeCommand'
        description: Command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Toggle demo mode
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/disable:
    post:
      operationId: Users_DisableUser
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DisableUserCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/DisableUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/DisableUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DisableUserCommand'
        description: Command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Disable user
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/togglemaintenancemode:
    post:
      operationId: Users_ToggleMaintenanceMode
      parameters:
      - in: query
        name: mode
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Users
  /api/v{v}/Users/export:
    get:
      operationId: Users_ExportCsv
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Export Csv file
      tags:
      - Users
  /api/v{v}/Users/togglenotificationmode:
    post:
      operationId: Users_ToggleNotificationMode
      parameters:
      - in: query
        name: mode
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Users
  /api/v{v}/Users/userinfo:
    get:
      operationId: Users_Details
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      tags:
      - Users
  /api/v{v}/Users/{id}:
    delete:
      operationId: Users_Delete
      parameters:
      - description: Id of the user to delete
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "204":
          content: {}
          description: No Content
      summary: "Delete user (only valid for admin, moderators and partner).Reminder\
        \ : moderators can delete users from their organization only."
      tags:
      - Users
  /api/v{v}/Users/delete:
    post:
      operationId: Users_DeleteMyAccount
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete my account
      tags:
      - Users
  /api/v{v}/Users/changepassword:
    post:
      operationId: Users_ChangePassword
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Change user password
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/verifyemail:
    post:
      operationId: Users_VerifyEmail
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VerifyEmailCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyEmailCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Verify user email
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/confirmemail:
    post:
      operationId: Users_ConfirmEmail
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Confirm user email
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/update:
    post:
      operationId: Users_UpdateUser
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Update user credential
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v{v}/Users/list:
    get:
      operationId: Users_ListSelector
      parameters:
      - in: query
        name: organizationId
        schema:
          format: int32
          type: integer
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: projectId
        schema:
          format: int32
          type: integer
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringDropdownIsBoundDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringDropdownIsBoundDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonStringDropdownIsBoundDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Retrieve projects according to user role
      tags:
      - Users
  /api/v{v}/UserToken/list:
    get:
      operationId: UserToken_List
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/UserTokensListDto'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserTokensListDto'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserTokensListDto'
                type: array
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get user token list
      tags:
      - UserToken
  /api/v{v}/UserToken/available-endpoints:
    get:
      operationId: UserToken_AvailableEndpointList
      parameters:
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: sortDirection
        schema:
          type: string
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: isAdd
        schema:
          type: boolean
      - in: query
        name: isReadonly
        schema:
          type: boolean
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AvailableEndpointsList'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableEndpointsList'
            text/json:
              schema:
                $ref: '#/components/schemas/AvailableEndpointsList'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Get available endpoints list
      tags:
      - UserToken
  /api/v{v}/UserToken/create:
    post:
      operationId: UserToken_Create
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserTokenCreateCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/UserTokenCreateCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UserTokenCreateCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserTokenCreateCommand'
        description: Create command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserTokenCreateDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenCreateDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserTokenCreateDto'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Create a new user token
      tags:
      - UserToken
      x-codegen-request-body-name: body
  /api/v{v}/UserToken/bind-unbind:
    post:
      operationId: UserToken_BindUnbind
      parameters:
      - in: path
        name: v
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BindUnbindEndpointToTokenCommand'
          application/json:
            schema:
              $ref: '#/components/schemas/BindUnbindEndpointToTokenCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/BindUnbindEndpointToTokenCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BindUnbindEndpointToTokenCommand'
        description: Create command
        required: false
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Bind and unbind endpoints
      tags:
      - UserToken
      x-codegen-request-body-name: body
  /api/v{v}/UserToken/delete/{id}:
    delete:
      operationId: UserToken_Delete
      parameters:
      - description: Delete command
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: v
        required: true
        schema:
          type: string
      responses:
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content: {}
          description: Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "200":
          content: {}
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
      summary: Delete token
      tags:
      - UserToken
components:
  schemas:
    AcceptOfferCommand:
      type: object
    AccessProfilesForProjectListDto:
      example:
        organizationId: 1
        allowedHosts:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        organizationName: organizationName
        httpProxy: httpProxy
        ntpServers:
        - address: address
          id: 5
        - address: address
          id: 5
        name: name
        id: 1
        dnsServers:
        - address: address
          id: 1
        - address: address
          id: 1
        revision: 1
        sshUsers:
        - sshPublicKey: sshPublicKey
          isDeleted: true
          name: name
          id: 6
        - sshPublicKey: sshPublicKey
          isDeleted: true
          name: name
          id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        httpProxy:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        revision:
          format: int32
          type: integer
        sshUsers:
          items:
            $ref: '#/components/schemas/SshUserListDto'
          type: array
        dnsServers:
          items:
            $ref: '#/components/schemas/DnsServerListDto'
          type: array
        ntpServers:
          items:
            $ref: '#/components/schemas/NtpServerListDto'
          type: array
        allowedHosts:
          items:
            $ref: '#/components/schemas/AllowedHostListDto'
          type: array
      type: object
    AccessProfilesList:
      example:
        data:
        - allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          httpProxy: httpProxy
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          createdBy: createdBy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
        - allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          httpProxy: httpProxy
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          createdBy: createdBy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
        totalCount: 9
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccessProfilesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AccessProfilesListDto:
      example:
        allowedHosts:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        httpProxy: httpProxy
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        createdBy: createdBy
        ntpServers:
        - address: address
          id: 5
        - address: address
          id: 5
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        dnsServers:
        - address: address
          id: 1
        - address: address
          id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        httpProxy:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        isLocked:
          type: boolean
        dnsServers:
          items:
            $ref: '#/components/schemas/DnsServerListDto'
          type: array
        ntpServers:
          items:
            $ref: '#/components/schemas/NtpServerListDto'
          type: array
        allowedHosts:
          items:
            $ref: '#/components/schemas/AllowedHostListDto'
          type: array
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        createdAt:
          type: string
      type: object
    AccessProfilesLockManagementCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        mode:
          minLength: 1
          type: string
      required:
      - id
      - mode
      type: object
    AccessProfilesSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    AccessProfilesSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ActionStatus:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ActionType:
      enum:
      - 10
      - 20
      - 30
      - 32
      - 34
      - 36
      - 38
      - 40
      - 42
      - 44
      - 50
      - 60
      - 70
      - 80
      - 90
      - 100
      - 105
      - 106
      - 107
      - 108
      - 109
      - 110
      - 120
      - 130
      - 140
      - 150
      - 155
      - 156
      - 160
      - 165
      - 170
      - 175
      - 176
      - 177
      - 180
      - 190
      - 200
      - 210
      - 220
      - 230
      - 240
      - 250
      - 260
      - 270
      - 280
      - 290
      - 300
      - 310
      - 320
      - 330
      - 340
      - 350
      - 360
      - 370
      - 380
      - 390
      - 400
      - 410
      format: int32
      type: integer
    AdminAddBalanceCommand:
      example:
        balance: 8009
        customerId: customerId
      properties:
        customerId:
          minLength: 1
          type: string
        balance:
          format: int64
          maximum: 100000
          minimum: 1
          type: integer
      required:
      - customerId
      type: object
    AdminBillingOperationCommand:
      example:
        cloudCredentialId: 0
      properties:
        cloudCredentialId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - cloudCredentialId
      type: object
    AdminKeycloakList:
      example:
        data:
        - organizationId: 6
          clientId: clientId
          organizationName: organizationName
          partnerLogo: partnerLogo
          name: name
          clientSecret: clientSecret
          id: 0
          url: url
          enabled: true
          realmsName: realmsName
        - organizationId: 6
          clientId: clientId
          organizationName: organizationName
          partnerLogo: partnerLogo
          name: name
          clientSecret: clientSecret
          id: 0
          url: url
          enabled: true
          realmsName: realmsName
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KeycloakListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminOrganizationsDeleteCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    AdminOrganizationsList:
      example:
        data:
        - partnerName: partnerName
          partnerLogo: partnerLogo
          name: name
          customerId: customerId
          id: 0
        - partnerName: partnerName
          partnerLogo: partnerLogo
          name: name
          customerId: customerId
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/AdminOrganizationsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminOrganizationsListDto:
      example:
        partnerName: partnerName
        partnerLogo: partnerLogo
        name: name
        customerId: customerId
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        customerId:
          type: string
        partnerName:
          type: string
        partnerLogo:
          type: string
      type: object
    AdminProjectUpdateCommand:
      example:
        kubernetesCurrentVersion: kubernetesCurrentVersion
        kubesprayCurrentVersion: kubesprayCurrentVersion
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        kubernetesCurrentVersion:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
        kubesprayCurrentVersion:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
      required:
      - id
      - kubernetesCurrentVersion
      - kubesprayCurrentVersion
      type: object
    AdminProjectsList:
      example:
        data:
        - createdAt: createdAt
          organizationName: organizationName
          isLocked: true
          tcu: 1
          name: name
          serversCount: 6
          kubernetesCurrentVersion: kubernetesCurrentVersion
          kubesprayCurrentVersion: kubesprayCurrentVersion
          id: 0
          status: status
        - createdAt: createdAt
          organizationName: organizationName
          isLocked: true
          tcu: 1
          name: name
          serversCount: 6
          kubernetesCurrentVersion: kubernetesCurrentVersion
          kubesprayCurrentVersion: kubesprayCurrentVersion
          id: 0
          status: status
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AdminProjectsResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminProjectsResponseData:
      example:
        createdAt: createdAt
        organizationName: organizationName
        isLocked: true
        tcu: 1
        name: name
        serversCount: 6
        kubernetesCurrentVersion: kubernetesCurrentVersion
        kubesprayCurrentVersion: kubesprayCurrentVersion
        id: 0
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationName:
          type: string
        isLocked:
          type: boolean
        kubernetesCurrentVersion:
          type: string
        kubesprayCurrentVersion:
          type: string
        status:
          type: string
        serversCount:
          format: int32
          type: integer
        tcu:
          format: int32
          type: integer
        createdAt:
          type: string
      type: object
    AdminUpdateProjectKubeConfigCommand:
      example:
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    AdminUpdateUserKubeConfigCommand:
      example:
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - id
      type: object
    AdminUserCreateCommand:
      example:
        organizationId: 0
        password: null
        role: null
        email: email
        username: username
      properties:
        email:
          format: email
          maxLength: 2000
          minLength: 3
          type: string
        username:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        password:
          $ref: '#/components/schemas/AdminUserCreateCommand_password'
        role:
          $ref: '#/components/schemas/UserRole'
        organizationId:
          format: int32
          type: integer
      required:
      - email
      - password
      - username
      type: object
    AdminUsersList:
      example:
        data:
        - owner: true
          role: role
          organizationName: organizationName
          name: name
          id: id
          csm: true
          email: email
        - owner: true
          role: role
          organizationName: organizationName
          name: name
          id: id
          csm: true
          email: email
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AdminUsersResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AdminUsersResponseData:
      example:
        owner: true
        role: role
        organizationName: organizationName
        name: name
        id: id
        csm: true
        email: email
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        organizationName:
          type: string
        owner:
          type: boolean
        csm:
          type: boolean
      type: object
    AdminUsersUpdateEmailCommand:
      example:
        id: id
        email: email
      properties:
        id:
          minLength: 1
          type: string
        email:
          format: email
          type: string
      required:
      - id
      type: object
    AdminUsersUpdatePasswordCommand:
      example:
        password: null
        id: id
      properties:
        id:
          minLength: 1
          type: string
        password:
          $ref: '#/components/schemas/AdminUserCreateCommand_password'
      required:
      - id
      - password
      type: object
    AlertingEmailDto:
      example:
        email: email
      properties:
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    AlertingIntegrationDto:
      example:
        url: url
        token: token
        alertingIntegrationType: null
      properties:
        url:
          minLength: 1
          type: string
        token:
          type: string
        alertingIntegrationType:
          $ref: '#/components/schemas/AlertingIntegrationType'
      required:
      - alertingIntegrationType
      - url
      type: object
    AlertingIntegrationType:
      enum:
      - 100
      - 200
      - 300
      - 400
      format: int32
      type: integer
    AlertingIntegrationsListDto:
      example:
        alertingProfileName: alertingProfileName
        id: 0
        url: url
        token: token
        alertingIntegrationType: alertingIntegrationType
      properties:
        id:
          format: int32
          type: integer
        url:
          type: string
        token:
          type: string
        alertingIntegrationType:
          type: string
        alertingProfileName:
          type: string
      type: object
    AlertingProfilesList:
      example:
        data:
        - slackConfigurationId: 1
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          reminder: reminder
          slackConfigurationName: slackConfigurationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          emails:
          - email: email
          - email: email
          createdAt: createdAt
          webhooks:
          - headers:
            - id: 5
              value: value
              key: key
            - id: 5
              value: value
              key: key
            id: 5
            url: url
          - headers:
            - id: 5
              value: value
              key: key
            - id: 5
              value: value
              key: key
            id: 5
            url: url
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
        - slackConfigurationId: 1
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          reminder: reminder
          slackConfigurationName: slackConfigurationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          emails:
          - email: email
          - email: email
          createdAt: createdAt
          webhooks:
          - headers:
            - id: 5
              value: value
              key: key
            - id: 5
              value: value
              key: key
            id: 5
            url: url
          - headers:
            - id: 5
              value: value
              key: key
            - id: 5
              value: value
              key: key
            id: 5
            url: url
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
        totalCount: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/AlertingProfilesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AlertingProfilesListDto:
      example:
        slackConfigurationId: 1
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        reminder: reminder
        slackConfigurationName: slackConfigurationName
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        emails:
        - email: email
        - email: email
        createdAt: createdAt
        webhooks:
        - headers:
          - id: 5
            value: value
            key: key
          - id: 5
            value: value
            key: key
          id: 5
          url: url
        - headers:
          - id: 5
            value: value
            key: key
          - id: 5
            value: value
            key: key
          id: 5
          url: url
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        slackConfigurationId:
          format: int32
          type: integer
        slackConfigurationName:
          type: string
        isLocked:
          type: boolean
        emails:
          items:
            $ref: '#/components/schemas/AlertingEmailDto'
          type: array
        webhooks:
          items:
            $ref: '#/components/schemas/AlertingWebhookDto'
          type: array
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        reminder:
          type: string
        createdAt:
          type: string
      type: object
    AlertingProfilesLockManagerCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    AlertingReminder:
      enum:
      - 100
      - 200
      - 300
      - -1
      format: int32
      type: integer
    AlertingWebhookDto:
      example:
        headers:
        - id: 5
          value: value
          key: key
        - id: 5
          value: value
          key: key
        id: 5
        url: url
      properties:
        id:
          format: int32
          type: integer
        url:
          type: string
        headers:
          items:
            $ref: '#/components/schemas/WebhookHeaderDto'
          type: array
      type: object
    AllFlavorsList:
      example:
        data:
        - maxDataDiskCount: 1.4658129805029452
          name: name
          cpu: 6
          description: "{}"
          ram: 0
        - maxDataDiskCount: 1.4658129805029452
          name: name
          cpu: 6
          description: "{}"
          ram: 0
        cloudType: cloudType
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/FlavorsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
        cloudType:
          type: string
      type: object
    AllTicketsDto:
      example:
        organizationName: organizationName
        partnerName: partnerName
        partnerLogo: partnerLogo
        lastModifier: lastModifier
        description: description
        userId: userId
        organizationId: 0
        createdAt: createdAt
        number: 6
        createdBy: createdBy
        currentStatusDate: currentStatusDate
        name: name
        id: id
        status: status
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdBy:
          type: string
        currentStatusDate:
          type: string
        lastModifier:
          type: string
        number:
          format: int32
          type: integer
        partnerLogo:
          type: string
        description:
          type: string
        partnerName:
          type: string
        userId:
          type: string
      type: object
    AllTicketsList:
      example:
        data:
        - organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          lastModifier: lastModifier
          description: description
          userId: userId
          organizationId: 0
          createdAt: createdAt
          number: 6
          createdBy: createdBy
          currentStatusDate: currentStatusDate
          name: name
          id: id
          status: status
        - organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          lastModifier: lastModifier
          description: description
          userId: userId
          organizationId: 0
          createdAt: createdAt
          number: 6
          createdBy: createdBy
          currentStatusDate: currentStatusDate
          name: name
          id: id
          status: status
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/AllTicketsDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AllowedHostCreateDto:
      example:
        ipAddress: ipAddress
        description: description
        maskBits: 19
      properties:
        description:
          type: string
        ipAddress:
          minLength: 1
          type: string
        maskBits:
          format: int32
          maximum: 32
          minimum: 0
          type: integer
      required:
      - ipAddress
      type: object
    AllowedHostList:
      example:
        data:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AllowedHostListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AllowedHostListDto:
      example:
        accessProfileName: accessProfileName
        ipAddress: ipAddress
        description: description
        accessProfileId: 7
        id: 5
        maskBits: 2
      properties:
        id:
          format: int32
          type: integer
        description:
          type: string
        ipAddress:
          type: string
        maskBits:
          format: int32
          type: integer
        accessProfileId:
          format: int32
          type: integer
        accessProfileName:
          type: string
      type: object
    AmazonAvailabilityZonesCommand:
      example:
        awsAccessKeyId: awsAccessKeyId
        cloudId: 0
        region: region
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        region:
          type: string
        awsAccessKeyId:
          type: string
        awsSecretAccessKey:
          type: string
        cloudId:
          format: int32
          type: integer
      type: object
    AmazonCredentialsListDto:
      example:
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        availabilityZonesCount: 1
        id: 0
        lastModified: lastModified
        region: region
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        region:
          type: string
        availabilityZones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          type: string
        continentName:
          type: string
      type: object
    Annotations:
      example:
        description: description
        title: title
      properties:
        description:
          type: string
        title:
          type: string
      type: object
    ApiResponse:
      example:
        result: "{}"
        isError: true
        id: id
        message: message
        status: 0
      properties:
        id:
          type: string
        status:
          format: int32
          type: integer
        message:
          type: string
        isError:
          type: boolean
        result:
          type: object
      type: object
    AppRepositoryList:
      example:
        data:
        - organizationName: organizationName
          isBound: true
          displayName: displayName
          repositoryId: repositoryId
          name: name
          official: true
          disabled: true
          trueUrl: trueUrl
          hasCatalogApp: true
          verifiedPublisher: true
          url: url
        - organizationName: organizationName
          isBound: true
          displayName: displayName
          repositoryId: repositoryId
          name: name
          official: true
          disabled: true
          trueUrl: trueUrl
          hasCatalogApp: true
          verifiedPublisher: true
          url: url
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/ArtifactRepositoryDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ArchiveTicketCommand:
      example:
        ticketId: ticketId
      properties:
        ticketId:
          minLength: 1
          type: string
      required:
      - ticketId
      type: object
    ArticleList:
      example:
        data:
        - senderName: senderName
          messageId: messageId
          body: body
          userId: userId
          createAt: createAt
          isCsm: true
        - senderName: senderName
          messageId: messageId
          body: body
          userId: userId
          createAt: createAt
          isCsm: true
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/ArticlesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ArticlesListDto:
      example:
        senderName: senderName
        messageId: messageId
        body: body
        userId: userId
        createAt: createAt
        isCsm: true
      properties:
        senderName:
          type: string
        isCsm:
          type: boolean
        createAt:
          type: string
        body:
          type: string
        messageId:
          type: string
        userId:
          type: string
      type: object
    ArtifactRepositoryDto:
      example:
        organizationName: organizationName
        isBound: true
        displayName: displayName
        repositoryId: repositoryId
        name: name
        official: true
        disabled: true
        trueUrl: trueUrl
        hasCatalogApp: true
        verifiedPublisher: true
        url: url
      properties:
        repositoryId:
          type: string
        name:
          type: string
        displayName:
          type: string
        url:
          type: string
        organizationName:
          type: string
        disabled:
          type: boolean
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        isBound:
          type: boolean
        hasCatalogApp:
          type: boolean
        trueUrl:
          type: string
      type: object
    ArtifactUrlCheckerCommand:
      example:
        name: name
        url: url
      properties:
        url:
          pattern: "^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\\
            /([\\w#!:.?+=&%@!\\-\\/]))?"
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    AttachDetachAlertingProfileCommand:
      example:
        alertingProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        alertingProfileId:
          format: int32
          type: integer
      type: object
    AutoSyncManagementCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    AutoUpgradeProjectsCommand:
      type: object
    AutoscalingSyncCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    AvailableEndpointData:
      example:
        path: path
        controller: controller
        method: method
        description: description
        id: 0
      properties:
        id:
          format: int32
          type: integer
        path:
          type: string
        method:
          type: string
        description:
          type: string
        controller:
          type: string
      type: object
    AvailableEndpointsList:
      example:
        data:
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/EndpointElements'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AvailablePackageDetailsDto:
      example:
        appVersion: appVersion
        packageId: packageId
        description: description
        securityReport:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        official: true
        readme: readme
        stars: 0
        version: version
        verifiedPublisher: true
        appRepoOrganizationName: appRepoOrganizationName
        appRepoName: appRepoName
        appRepoId: appRepoId
        hasJsonSchema: true
        name: name
        boundCatalogs:
        - name: name
          id: 0
        - name: name
          id: 0
        logoId: logoId
      properties:
        name:
          type: string
        appRepoName:
          type: string
        appRepoOrganizationName:
          type: string
        appRepoId:
          type: string
        packageId:
          type: string
        logoId:
          type: string
        description:
          type: string
        readme:
          type: string
        version:
          type: string
        securityReport:
          $ref: '#/components/schemas/SecurityReportSummaryDto'
        appVersion:
          type: string
        stars:
          format: int32
          type: integer
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        boundCatalogs:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        hasJsonSchema:
          type: boolean
      type: object
    AvailablePackagesDto:
      example:
        appVersion: appVersion
        logoImageId: logoImageId
        deprecated: true
        packageId: packageId
        description: description
        signed: true
        stars: 1
        repository:
          scannerDisabled: true
          organizationName: organizationName
          organizationDisplayName: organizationDisplayName
          kind: 3
          name: name
          repositoryId: repositoryId
          official: true
          verifiedPublisher: true
          url: url
        catalogAppId: 0
        version: version
        installedInstanceCount: 6
        isLocked: true
        name: name
        normalizedName: normalizedName
        securityReportSummary:
          high: 5
          critical: 9
          low: 5
          medium: 2
          unknown: 7
        ts: ts
      properties:
        packageId:
          type: string
        catalogAppId:
          format: int32
          type: integer
        installedInstanceCount:
          format: int32
          type: integer
        name:
          type: string
        normalizedName:
          type: string
        logoImageId:
          type: string
        stars:
          format: int64
          type: integer
        description:
          type: string
        version:
          type: string
        appVersion:
          type: string
        deprecated:
          type: boolean
        signed:
          type: boolean
        isLocked:
          type: boolean
        securityReportSummary:
          $ref: '#/components/schemas/SecurityReportSummary'
        ts:
          type: string
        repository:
          $ref: '#/components/schemas/Repository'
      type: object
    AvailablePackagesList:
      example:
        data:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 1
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 3
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 0
          version: version
          installedInstanceCount: 6
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 5
            critical: 9
            low: 5
            medium: 2
            unknown: 7
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 1
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 3
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 0
          version: version
          installedInstanceCount: 6
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 5
            critical: 9
            low: 5
            medium: 2
            unknown: 7
          ts: ts
        totalCount: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/AvailablePackagesDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsBlockDeviceMappingsCommand:
      example:
        imageId: imageId
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        imageId:
          type: string
      type: object
    AwsCommonImages:
      example:
        displayName: displayName
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
        displayName:
          type: string
      type: object
    AwsCredentialList:
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AmazonCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsCredentialsForProjectDto:
      example:
        awsRegion: awsRegion
        awsAccessKeyId: awsAccessKeyId
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          type: string
        awsSecretAccessKey:
          type: string
        awsRegion:
          type: string
      type: object
    AwsExtendedImagesListDto:
      example:
        ownerAlias: ownerAlias
        name: name
        description: description
        platformDetails: platformDetails
        logo: logo
        id: id
        ownerId: ownerId
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        platformDetails:
          type: string
        ownerId:
          type: string
        ownerAlias:
          type: string
        logo:
          type: string
      type: object
    AwsFlavorList:
      example:
        data:
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 6
          description: "{}"
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 0
          linuxSpotPrice: linuxSpotPrice
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 6
          description: "{}"
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 0
          linuxSpotPrice: linuxSpotPrice
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/AwsFlavorListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsFlavorListDto:
      example:
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 6
        description: "{}"
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        ram: 0
        linuxSpotPrice: linuxSpotPrice
      properties:
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: object
        linuxPrice:
          type: string
        windowsPrice:
          type: string
        windowsSpotPrice:
          type: string
        linuxSpotPrice:
          type: string
      type: object
    AwsImagesPostList:
      example:
        data:
        - ownerAlias: ownerAlias
          name: name
          description: description
          platformDetails: platformDetails
          logo: logo
          id: id
          ownerId: ownerId
        - ownerAlias: ownerAlias
          name: name
          description: description
          platformDetails: platformDetails
          logo: logo
          id: id
          ownerId: ownerId
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AwsExtendedImagesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsImagesPostListCommand:
      example:
        sortDirection: sortDirection
        search: search
        offset: 1
        cloudId: 0
        limit: 6
        sortBy: sortBy
        owners:
        - owners
        - owners
        latest: true
      properties:
        cloudId:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        sortBy:
          type: string
        sortDirection:
          type: string
        search:
          type: string
        latest:
          type: boolean
        owners:
          items:
            type: string
          type: array
      type: object
    AwsOwnerDetails:
      example:
        image:
          displayName: displayName
          name: name
          id: id
        ownerName: ownerName
        ownerId: ownerId
      properties:
        ownerId:
          type: string
        ownerName:
          type: string
        image:
          $ref: '#/components/schemas/AwsCommonImages'
      type: object
    AwsProjectAZSubnetDto:
      example:
        zone: zone
        privateIp: privateIp
        publicIp: publicIp
      properties:
        zone:
          type: string
        publicIp:
          type: string
        privateIp:
          type: string
      type: object
    AwsRegionDto:
      example:
        name: name
        region: region
      properties:
        name:
          type: string
        region:
          type: string
      type: object
    AwsValidateOwnerCommand:
      example:
        cloudId: 0
        owners:
        - owners
        - owners
      properties:
        cloudId:
          format: int32
          type: integer
        owners:
          items:
            type: string
          type: array
      type: object
    AzResult:
      example:
        list:
        - list
        - list
        totalCount: 0
      properties:
        list:
          items:
            type: string
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureCommonImages:
      example:
        displayName: displayName
        name: name
        id: id
      properties:
        name:
          type: string
        id:
          type: string
        displayName:
          type: string
      type: object
    AzureCredentialList:
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          availabilityZonesCount: 1
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          availabilityZonesCount: 1
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AzureCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureCredentialsForProjectDto:
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureClientId:
          type: string
        azureClientSecret:
          type: string
        azureSubscriptionId:
          type: string
        azureTenantId:
          type: string
        azureLocation:
          type: string
      type: object
    AzureCredentialsListDto:
      example:
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        tenantId: tenantId
        availabilityZonesCount: 1
        location: location
        id: 0
        lastModified: lastModified
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        tenantId:
          type: string
        location:
          type: string
        availabilityZones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        createdAt:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          type: string
      type: object
    AzureDashboardCommand:
      example:
        cloudId: 0
        filterBy: filterBy
      properties:
        cloudId:
          format: int32
          type: integer
        filterBy:
          type: string
      type: object
    AzureFlavorList:
      example:
        data:
        - maxDataDiskCount: 1.4658129805029452
          windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: "{}"
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          linuxSpotPrice: linuxSpotPrice
          ram: 6
        - maxDataDiskCount: 1.4658129805029452
          windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: "{}"
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          linuxSpotPrice: linuxSpotPrice
          ram: 6
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/AzureFlavorsWithPriceDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureFlavorsWithPriceDto:
      example:
        maxDataDiskCount: 1.4658129805029452
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 0
        description: "{}"
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        linuxSpotPrice: linuxSpotPrice
        ram: 6
      properties:
        name:
          type: string
        windowsPrice:
          type: string
        linuxPrice:
          type: string
        windowsSpotPrice:
          type: string
        linuxSpotPrice:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        description:
          type: object
        maxDataDiskCount:
          format: double
          type: number
      type: object
    AzureImageList:
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureLocationsCommand:
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureSubscriptionId:
          type: string
        azureClientId:
          type: string
        azureClientSecret:
          type: string
        azureTenantId:
          type: string
      type: object
    AzureOffersList:
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzurePublisherDetails:
      example:
        image:
          displayName: displayName
          name: name
          id: id
        publisher: publisher
      properties:
        publisher:
          type: string
        image:
          $ref: '#/components/schemas/AzureCommonImages'
      type: object
    AzurePublishersList:
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureQuotaListRecordDto:
      example:
        totalCores: 0
        currentUsage: 6
        name: name
      properties:
        totalCores:
          format: int64
          type: integer
        currentUsage:
          format: int32
          type: integer
        name:
          type: string
      type: object
    AzureSkusList:
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AzureSubscriptionListCommand:
      example:
        clientId: clientId
        tenantId: tenantId
        clientSecret: clientSecret
      properties:
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
        tenantId:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - tenantId
      type: object
    AzureZonesCommand:
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        cloudId: 0
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureSubscriptionId:
          type: string
        azureClientId:
          type: string
        azureClientSecret:
          type: string
        azureTenantId:
          type: string
        azureLocation:
          type: string
        cloudId:
          format: int32
          type: integer
      type: object
    BackupCredentials:
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          s3Region: s3Region
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          s3Endpoint: s3Endpoint
          createdBy: createdBy
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          id: 0
          s3Name: s3Name
          lastModified: lastModified
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          s3Region: s3Region
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          s3Endpoint: s3Endpoint
          createdBy: createdBy
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          id: 0
          s3Name: s3Name
          lastModified: lastModified
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/BackupCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BackupCredentialsCreateCommand:
      example:
        organizationId: 0
        s3SecretKey: s3SecretKey
        s3Endpoint: s3Endpoint
        s3AccessKeyId: s3AccessKeyId
        s3Region: s3Region
        s3Name: s3Name
      properties:
        s3Name:
          maxLength: 30
          minLength: 3
          type: string
        s3AccessKeyId:
          minLength: 1
          type: string
        s3SecretKey:
          minLength: 1
          type: string
        s3Endpoint:
          minLength: 1
          type: string
        s3Region:
          type: string
        organizationId:
          format: int32
          type: integer
      required:
      - s3AccessKeyId
      - s3Endpoint
      - s3Name
      - s3SecretKey
      type: object
    BackupCredentialsForOrganizationEntity:
      example:
        isDefault: true
        name: name
        backupCredentialId: 0
      properties:
        backupCredentialId:
          format: int32
          type: integer
        name:
          type: string
        isDefault:
          type: boolean
      type: object
    BackupCredentialsListDto:
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        s3Region: s3Region
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        isDefault: true
        s3Endpoint: s3Endpoint
        createdBy: createdBy
        s3AccessKeyId: s3AccessKeyId
        isLocked: true
        id: 0
        s3Name: s3Name
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        s3Name:
          type: string
        s3AccessKeyId:
          type: string
        s3Endpoint:
          type: string
        s3Region:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        isLocked:
          type: boolean
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        createdAt:
          type: string
        isDefault:
          type: boolean
      type: object
    BackupCredentialsSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    BackupCredentialsSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BackupCredentialsUpdateCommand:
      example:
        s3SecretKey: s3SecretKey
        s3AccessKeyId: s3AccessKeyId
        id: 0
        s3Name: s3Name
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        s3Name:
          maxLength: 30
          minLength: 3
          type: string
        s3AccessKeyId:
          minLength: 1
          type: string
        s3SecretKey:
          minLength: 1
          type: string
      required:
      - id
      - s3AccessKeyId
      - s3Name
      - s3SecretKey
      type: object
    BackupDto:
      example:
        includedNamespace:
        - includedNamespace
        - includedNamespace
        excludedNamespace:
        - excludedNamespace
        - excludedNamespace
      properties:
        includedNamespace:
          items:
            type: string
          type: array
        excludedNamespace:
          items:
            type: string
          type: array
      type: object
    BackupLockManagerCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    BackupMakeDefaultCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    BackupStorageLocationDto:
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        provider: provider
        namespace: namespace
        metadataName: metadataName
        accessMode: accessMode
        lastValidated: 2000-01-23T04:56:07.000+00:00
        backupCredentialId: 0
      properties:
        metadataName:
          type: string
        provider:
          type: string
        namespace:
          type: string
        lastValidated:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        accessMode:
          type: string
        phase:
          type: string
        backupCredentialId:
          format: int32
          type: integer
      type: object
    BecomePartnerCommand:
      example:
        fullName: fullName
        email: email
      properties:
        fullName:
          maxLength: 100
          minLength: 3
          type: string
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      - fullName
      type: object
    BillingCredentialsSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    BillingCredentialsSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BillingInfo:
      example:
        data:
        - isDeleted: true
          endDate: 2000-01-23T04:56:07.000+00:00
          tcu: 6.027456183070403
          projectName: projectName
          projectId: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        - isDeleted: true
          endDate: 2000-01-23T04:56:07.000+00:00
          tcu: 6.027456183070403
          projectName: projectName
          projectId: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        totalTcu: 1.4658129805029452
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/BillingSummaryDto'
          type: array
        totalTcu:
          format: double
          type: number
        totalCount:
          format: int32
          type: integer
      type: object
    BillingInfoDto:
      example:
        legalName: legalName
        country: country
        address: address
        city: city
        billingEmail: billingEmail
        vatNumber: vatNumber
      properties:
        country:
          type: string
        vatNumber:
          type: string
        legalName:
          type: string
        city:
          type: string
        billingEmail:
          type: string
        address:
          type: string
      type: object
    BillingSummaryDto:
      example:
        isDeleted: true
        endDate: 2000-01-23T04:56:07.000+00:00
        tcu: 6.027456183070403
        projectName: projectName
        projectId: 0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        tcu:
          format: double
          type: number
        isDeleted:
          type: boolean
      type: object
    BindAppRepositoryCommand:
      example:
        filteringElements:
        - organizationName: organizationName
          name: name
        - organizationName: organizationName
          name: name
      properties:
        filteringElements:
          items:
            $ref: '#/components/schemas/FilteringElementDto'
          type: array
      type: object
    BindFlavorToProjectCommand:
      example:
        flavors:
        - flavors
        - flavors
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        flavors:
          items:
            type: string
          type: array
      type: object
    BindImageToProjectCommand:
      example:
        images:
        - images
        - images
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        images:
          items:
            type: string
          type: array
      type: object
    BindOrganizationsCommand:
      example:
        organizations:
        - organizationId: 0
          isBound: true
        - organizationId: 0
          isBound: true
        partnerId: 6
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/OrganizationDto'
          type: array
        partnerId:
          format: int32
          type: integer
      required:
      - partnerId
      type: object
    BindOrganizationsToRuleDto:
      example:
        organizationId: 0
        organizationName: organizationName
        isBound: true
        ruleDiscountRate: 6.027456183070403
      properties:
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        ruleDiscountRate:
          format: double
          type: number
        isBound:
          type: boolean
      type: object
    BindProjectGroupsToUserGroupCommand:
      example:
        userGroupId: 6
        projectGroups:
        - isBound: true
          projectGroupId: 0
        - isBound: true
          projectGroupId: 0
        userGroupName: userGroupName
      properties:
        projectGroups:
          items:
            $ref: '#/components/schemas/UpdateUserProjectGroupDto'
          type: array
        userGroupId:
          format: int32
          type: integer
        userGroupName:
          type: string
      type: object
    BindProjectsCommand:
      example:
        projects:
        - isBound: true
          name: name
          id: 0
        - isBound: true
          name: name
          id: 0
        userName: userName
        userId: userId
      properties:
        projects:
          items:
            $ref: '#/components/schemas/UpdateUserProjectDto'
          type: array
        userId:
          type: string
        userName:
          type: string
      type: object
    BindProjectsToCatalogCommand:
      example:
        projects:
        - isBound: true
          projectId: 0
        - isBound: true
          projectId: 0
        catalogId: 0
      properties:
        projects:
          items:
            $ref: '#/components/schemas/UpdateCatalogDto'
          minItems: 1
          type: array
        catalogId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - catalogId
      - projects
      type: object
    BindPrometheusOrganizationsCommand:
      example:
        organizations:
        - organizationId: 0
          organizationName: organizationName
          isBound: true
          ruleDiscountRate: 6.027456183070403
        - organizationId: 0
          organizationName: organizationName
          isBound: true
          ruleDiscountRate: 6.027456183070403
        prometheusRuleId: 1
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/BindOrganizationsToRuleDto'
          type: array
        prometheusRuleId:
          format: int32
          type: integer
      type: object
    BindRulesCommand:
      example:
        organizationId: 0
        rules:
        - discountRate: 6.027456183070403
          isBound: true
          name: name
          id: 0
        - discountRate: 6.027456183070403
          isBound: true
          name: name
          id: 0
      properties:
        rules:
          items:
            $ref: '#/components/schemas/BindRulesToOrganizationDto'
          type: array
        organizationId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - organizationId
      type: object
    BindRulesToOrganizationDto:
      example:
        discountRate: 6.027456183070403
        isBound: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        discountRate:
          format: double
          type: number
        isBound:
          type: boolean
      type: object
    BindSubscriptionCommand:
      example:
        id: 0
        yearly: true
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yearly:
          type: boolean
      required:
      - id
      type: object
    BindSubscriptionResponseDto:
      example:
        invoiceFailureCode: invoiceFailureCode
        invoiceFailureReason: invoiceFailureReason
        paymentIntentClientSecret: paymentIntentClientSecret
        invoiceFailureMessage: invoiceFailureMessage
        status: status
      properties:
        status:
          type: string
        paymentIntentClientSecret:
          type: string
        invoiceFailureCode:
          type: string
        invoiceFailureMessage:
          type: string
        invoiceFailureReason:
          type: string
      type: object
    BindUnbindEndpointToTokenCommand:
      example:
        endpoints:
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        tokenId: tokenId
        bindAll: true
      properties:
        tokenId:
          type: string
        endpoints:
          items:
            $ref: '#/components/schemas/AvailableEndpointData'
          type: array
        bindAll:
          type: boolean
      type: object
    BindUserGroupsToProjectGroupCommand:
      example:
        userGroups:
        - userGroupId: 0
          isBound: true
        - userGroupId: 0
          isBound: true
        projectGroupId: 0
        projectGroupName: projectGroupName
      properties:
        userGroups:
          items:
            $ref: '#/components/schemas/UpdateProjectUserGroupDto'
          type: array
        projectGroupId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        projectGroupName:
          type: string
      required:
      - projectGroupId
      type: object
    BindUsersCommand:
      example:
        projectId: 0
        users:
        - isBound: true
          name: name
          id: id
        - isBound: true
          name: name
          id: id
      properties:
        users:
          items:
            $ref: '#/components/schemas/UpdateProjectUserDto'
          type: array
        projectId:
          format: int32
          type: integer
      required:
      - projectId
      type: object
    BlockOrganizationCommand:
      type: object
    BoundFlavorsForProjectsList:
      example:
        data:
        - isGoogle: true
          hasLinuxSpotPrice: true
          cpu: 6
          windowsPrice: windowsPrice
          isAws: true
          maxDataDiskCount: 5
          windowsSpotPrice: windowsSpotPrice
          isOpenstack: true
          name: name
          id: 0
          projectName: projectName
          linuxPrice: linuxPrice
          projectId: 5
          isAzure: true
          hasWindowsSpotPrice: true
          ram: 1
          linuxSpotPrice: linuxSpotPrice
        - isGoogle: true
          hasLinuxSpotPrice: true
          cpu: 6
          windowsPrice: windowsPrice
          isAws: true
          maxDataDiskCount: 5
          windowsSpotPrice: windowsSpotPrice
          isOpenstack: true
          name: name
          id: 0
          projectName: projectName
          linuxPrice: linuxPrice
          projectId: 5
          isAzure: true
          hasWindowsSpotPrice: true
          ram: 1
          linuxSpotPrice: linuxSpotPrice
        totalCount: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/BoundFlavorsForProjectsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BoundFlavorsForProjectsListDto:
      example:
        isGoogle: true
        hasLinuxSpotPrice: true
        cpu: 6
        windowsPrice: windowsPrice
        isAws: true
        maxDataDiskCount: 5
        windowsSpotPrice: windowsSpotPrice
        isOpenstack: true
        name: name
        id: 0
        projectName: projectName
        linuxPrice: linuxPrice
        projectId: 5
        isAzure: true
        hasWindowsSpotPrice: true
        ram: 1
        linuxSpotPrice: linuxSpotPrice
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        projectId:
          format: int32
          type: integer
        isAzure:
          type: boolean
        isAws:
          type: boolean
        isOpenstack:
          type: boolean
        isGoogle:
          type: boolean
        projectName:
          type: string
        maxDataDiskCount:
          format: int32
          type: integer
        hasLinuxSpotPrice:
          type: boolean
        hasWindowsSpotPrice:
          type: boolean
        linuxSpotPrice:
          type: string
        linuxPrice:
          type: string
        windowsSpotPrice:
          type: string
        windowsPrice:
          type: string
      type: object
    BoundImagesForProjectsList:
      example:
        data:
        - imageId: imageId
          size: 1.4658129805029452
          isOpenstack: true
          cloudId: 5
          name: name
          isWindows: true
          id: 0
          projectName: projectName
          projectId: 6
          isAzure: true
          isAws: true
        - imageId: imageId
          size: 1.4658129805029452
          isOpenstack: true
          cloudId: 5
          name: name
          isWindows: true
          id: 0
          projectName: projectName
          projectId: 6
          isAzure: true
          isAws: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/BoundImagesForProjectsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BoundImagesForProjectsListDto:
      example:
        imageId: imageId
        size: 1.4658129805029452
        isOpenstack: true
        cloudId: 5
        name: name
        isWindows: true
        id: 0
        projectName: projectName
        projectId: 6
        isAzure: true
        isAws: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectId:
          format: int32
          type: integer
        isAzure:
          type: boolean
        isAws:
          type: boolean
        isOpenstack:
          type: boolean
        projectName:
          type: string
        size:
          format: double
          type: number
        imageId:
          type: string
        cloudId:
          format: int32
          type: integer
        isWindows:
          type: boolean
      type: object
    BridgeListCommand:
      example:
        tokenId: tokenId
        hypervisor: hypervisor
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          minLength: 1
          type: string
        tokenId:
          minLength: 1
          type: string
        tokenSecret:
          minLength: 1
          type: string
        hypervisor:
          minLength: 1
          type: string
      required:
      - hypervisor
      - tokenId
      - tokenSecret
      - url
      type: object
    CBackupDto:
      example:
        scheduleName: scheduleName
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        expiration: 2000-01-23T04:56:07.000+00:00
        location: location
      properties:
        metadataName:
          type: string
        createdAt:
          format: date-time
          type: string
        expiration:
          format: date-time
          type: string
        scheduleName:
          type: string
        namespace:
          type: string
        location:
          type: string
        phase:
          type: string
      type: object
    CDeleteBackupRequestDto:
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        backupName: backupName
      properties:
        metadataName:
          type: string
        createdAt:
          format: date-time
          type: string
        backupName:
          type: string
        namespace:
          type: string
        phase:
          type: string
      type: object
    CRestoreDto:
      example:
        scheduleName: scheduleName
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        startTimeStamp: 2000-01-23T04:56:07.000+00:00
        warnings: 0
        namespace: namespace
        excludeNamespaces:
        - excludeNamespaces
        - excludeNamespaces
        completionDateTime: 2000-01-23T04:56:07.000+00:00
        metadataName: metadataName
        backupName: backupName
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
      properties:
        metadataName:
          type: string
        backupName:
          type: string
        scheduleName:
          type: string
        namespace:
          type: string
        excludeNamespaces:
          items:
            type: string
          type: array
        includeNamespaces:
          items:
            type: string
          type: array
        completionDateTime:
          format: date-time
          type: string
        startTimeStamp:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        warnings:
          format: int64
          type: integer
        phase:
          type: string
      type: object
    CScheduleDto:
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        schedule: schedule
        lastBackup: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        includedNamespaces:
        - includedNamespaces
        - includedNamespaces
        excludedNamespaces:
        - excludedNamespaces
        - excludedNamespaces
        ttl: ttl
        status:
          phase: phase
          lastBackup: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          $ref: '#/components/schemas/Status'
        metadataName:
          type: string
        namespace:
          type: string
        createdAt:
          format: date-time
          type: string
        schedule:
          type: string
        ttl:
          type: string
        lastBackup:
          format: date-time
          type: string
        phase:
          type: string
        excludedNamespaces:
          items:
            type: string
          type: array
        includedNamespaces:
          items:
            type: string
          type: array
      type: object
    CardInformationDto:
      example:
        expirationYear: expirationYear
        last4: last4
        holderName: holderName
        balance: 0
        expirationMonth: expirationMonth
        brand: brand
      properties:
        expirationMonth:
          type: string
        expirationYear:
          type: string
        last4:
          type: string
        brand:
          type: string
        holderName:
          type: string
        balance:
          format: int64
          type: integer
      type: object
    CatalogAppDetailsDto:
      example:
        appVersion: appVersion
        packageId: packageId
        description: description
        securityReport:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        official: true
        readme: readme
        stars: 4
        version: version
        verifiedPublisher: true
        appRepoOrganizationName: appRepoOrganizationName
        catalogName: catalogName
        appRepoName: appRepoName
        appRepoId: 6
        catalogId: 1
        hasJsonSchema: true
        name: name
        projectApps:
        - isLocked: true
          name: name
          namespace: namespace
          id: 5
          projectName: projectName
          projectId: 5
          version: version
          status: status
        - isLocked: true
          name: name
          namespace: namespace
          id: 5
          projectName: projectName
          projectId: 5
          version: version
          status: status
        id: 0
        logoId: logoId
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        appRepoName:
          type: string
        appRepoOrganizationName:
          type: string
        appRepoId:
          format: int32
          type: integer
        catalogName:
          type: string
        catalogId:
          format: int32
          type: integer
        packageId:
          type: string
        version:
          type: string
        logoId:
          type: string
        projectApps:
          items:
            $ref: '#/components/schemas/ProjectAppDto'
          type: array
        description:
          type: string
        readme:
          type: string
        securityReport:
          $ref: '#/components/schemas/SecurityReportSummaryDto'
        appVersion:
          type: string
        stars:
          format: int32
          type: integer
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        hasJsonSchema:
          type: boolean
      type: object
    CatalogAppLockManagement:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    CatalogAppParamsDetailsDto:
      example:
        catalogAppName: catalogAppName
        hasJsonSchema: true
        isEditableWhenInstalling: true
        id: 0
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        id:
          format: int32
          type: integer
        catalogAppName:
          type: string
        key:
          type: string
        value:
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
        hasJsonSchema:
          type: boolean
      type: object
    CatalogAppParamsDto:
      example:
        isEditableWhenInstalling: true
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        key:
          minLength: 1
          type: string
        value:
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
      required:
      - key
      type: object
    CatalogDropdownDto:
      example:
        name: name
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        packageIds:
          items:
            type: string
          type: array
      type: object
    CatalogList:
      example:
        data:
        - organizationId: 6
          boundApplications:
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 1
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 3
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 0
            version: version
            installedInstanceCount: 6
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 5
              critical: 9
              low: 5
              medium: 2
              unknown: 7
            ts: ts
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 1
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 3
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 0
            version: version
            installedInstanceCount: 6
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 5
              critical: 9
              low: 5
              medium: 2
              unknown: 7
            ts: ts
          isLocked: true
          name: name
          description: description
          boundProjects:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          packageIds:
          - packageIds
          - packageIds
        - organizationId: 6
          boundApplications:
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 1
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 3
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 0
            version: version
            installedInstanceCount: 6
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 5
              critical: 9
              low: 5
              medium: 2
              unknown: 7
            ts: ts
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 1
            repository:
              scannerDisabled: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 3
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 0
            version: version
            installedInstanceCount: 6
            isLocked: true
            name: name
            normalizedName: normalizedName
            securityReportSummary:
              high: 5
              critical: 9
              low: 5
              medium: 2
              unknown: 7
            ts: ts
          isLocked: true
          name: name
          description: description
          boundProjects:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          packageIds:
          - packageIds
          - packageIds
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CatalogListDto:
      example:
        organizationId: 6
        boundApplications:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 1
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 3
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 0
          version: version
          installedInstanceCount: 6
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 5
            critical: 9
            low: 5
            medium: 2
            unknown: 7
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 1
          repository:
            scannerDisabled: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 3
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 0
          version: version
          installedInstanceCount: 6
          isLocked: true
          name: name
          normalizedName: normalizedName
          securityReportSummary:
            high: 5
            critical: 9
            low: 5
            medium: 2
            unknown: 7
          ts: ts
        isLocked: true
        name: name
        description: description
        boundProjects:
        - name: name
          id: 0
        - name: name
          id: 0
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        isLocked:
          type: boolean
        organizationId:
          format: int32
          type: integer
        packageIds:
          items:
            type: string
          type: array
        boundProjects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        boundApplications:
          items:
            $ref: '#/components/schemas/AvailablePackagesDto'
          type: array
      type: object
    CatalogLockManagementCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    ChangeCardCommand:
      example:
        paymentMethodId: paymentMethodId
      properties:
        paymentMethodId:
          minLength: 1
          type: string
      required:
      - paymentMethodId
      type: object
    ChangePasswordCommand:
      example:
        password: null
        newPassword: null
      properties:
        password:
          $ref: '#/components/schemas/AdminUserCreateCommand_password'
        newPassword:
          $ref: '#/components/schemas/AdminUserCreateCommand_password'
      required:
      - newPassword
      - password
      type: object
    Chart:
      example:
        spec:
          interval: interval
          sourceRef:
            kind: kind
            name: name
          chart: chart
          version: version
      properties:
        spec:
          $ref: '#/components/schemas/ChartSpec'
      type: object
    ChartSpec:
      example:
        interval: interval
        sourceRef:
          kind: kind
          name: name
        chart: chart
        version: version
      properties:
        chart:
          type: string
        version:
          type: string
        sourceRef:
          $ref: '#/components/schemas/SourceRef'
        interval:
          type: string
      type: object
    CheckAwsCommand:
      example:
        awsAccessKeyId: awsAccessKeyId
        region: region
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          minLength: 1
          type: string
        awsSecretAccessKey:
          minLength: 1
          type: string
        region:
          minLength: 1
          type: string
      required:
      - awsAccessKeyId
      - awsSecretAccessKey
      - region
      type: object
    CheckAzureCommand:
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureTenantId: azureTenantId
      properties:
        azureClientId:
          minLength: 1
          type: string
        azureClientSecret:
          minLength: 1
          type: string
        azureTenantId:
          minLength: 1
          type: string
      required:
      - azureClientId
      - azureClientSecret
      - azureTenantId
      type: object
    CheckAzureCpuQuotaCommand:
      example:
        cloudId: 0
      properties:
        cloudId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - cloudId
      type: object
    CheckOpenstackCommand:
      example:
        openStackUrl: openStackUrl
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          minLength: 1
          type: string
        openStackPassword:
          minLength: 1
          type: string
        openStackUrl:
          minLength: 1
          type: string
        openStackDomain:
          minLength: 1
          type: string
        isAdmin:
          type: boolean
      required:
      - openStackDomain
      - openStackPassword
      - openStackUrl
      - openStackUser
      type: object
    CheckPrometheusCommand:
      example:
        password: password
        userName: userName
        url: url
      properties:
        password:
          minLength: 1
          type: string
        userName:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
      required:
      - password
      - url
      - userName
      type: object
    CheckS3Command:
      example:
        s3SecretKey: s3SecretKey
        s3Endpoint: s3Endpoint
        s3AccessKeyId: s3AccessKeyId
        s3Region: s3Region
      properties:
        s3AccessKeyId:
          minLength: 1
          type: string
        s3SecretKey:
          minLength: 1
          type: string
        s3Endpoint:
          minLength: 1
          type: string
        s3Region:
          minLength: 1
          type: string
      required:
      - s3AccessKeyId
      - s3Endpoint
      - s3Region
      - s3SecretKey
      type: object
    CheckTanzuCommand:
      example:
        volumeType: volumeType
        password: password
        port: 0
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          maxLength: 100
          minLength: 3
          type: string
        url:
          maxLength: 150
          minLength: 3
          pattern: "^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\\
            /([\\w#!:.?+=&%@!\\-\\/]))?"
          type: string
        password:
          maxLength: 100
          minLength: 3
          type: string
        namespace:
          maxLength: 63
          minLength: 3
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        port:
          format: int32
          type: integer
        volumeType:
          maxLength: 100
          minLength: 1
          type: string
      required:
      - namespace
      - password
      - url
      - username
      - volumeType
      type: object
    CidrCommand:
      example:
        cidr: cidr
      properties:
        cidr:
          minLength: 1
          type: string
      required:
      - cidr
      type: object
    ClearCanceledPaymentMethodCommand:
      type: object
    ClearCrdsCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ClearProjectBackupCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    CloseTicketCommand:
      example:
        ticketId: ticketId
      properties:
        ticketId:
          minLength: 1
          type: string
      required:
      - ticketId
      type: object
    CloudCredentialsDropdownRecordDto:
      example:
        projects:
        - flavors:
          - flavors
          - flavors
          images:
          - images
          - images
          imageNames:
          - imageNames
          - imageNames
          isReady: true
          name: name
          id: 6
        - flavors:
          - flavors
          - flavors
          images:
          - images
          - images
          imageNames:
          - imageNames
          - imageNames
          isReady: true
          name: name
          id: 6
        cloudType: cloudType
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        cloudType:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectWithFlavorsAndImagesDto'
          type: array
      type: object
    CloudCredentialsForOrganizationEntity:
      example:
        isDefault: true
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        cloudType: cloudType
        fullName: fullName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        fullName:
          type: string
        cloudType:
          type: string
        isDefault:
          type: boolean
      type: object
    CloudCredentialsResponseData:
      example:
        organizationId: 6
        organizationName: organizationName
        cloudType: cloudType
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        cloudType:
          type: string
      type: object
    CloudCredentialsSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    CloudCredentialsSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          cloudType: cloudType
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          cloudType: cloudType
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CloudCredentialsResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CloudLockManagerCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    CloudRole:
      enum:
      - 100
      - 200
      - 300
      - 400
      format: int32
      type: integer
    CloudStatus:
      enum:
      - 100
      - 200
      - 250
      - 300
      - 400
      - 500
      - 600
      - 700
      - 800
      format: int32
      type: integer
    CloudType:
      enum:
      - 100
      - 200
      - 300
      - 400
      - 500
      - 600
      format: int32
      type: integer
    CommitStandAloneVmCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    CommonAvailabilityDto:
      example:
        name: name
        id: true
      properties:
        id:
          type: boolean
        name:
          type: string
      type: object
    CommonDropdownDto:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    CommonDropdownIsBoundDto:
      example:
        isBound: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isBound:
          type: boolean
      type: object
    CommonDropdownIsBoundDtoForProject:
      example:
        isBound: true
        name: name
        id: 0
        hasKubeConfigFile: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isBound:
          type: boolean
        hasKubeConfigFile:
          type: boolean
      type: object
    CommonExtendedDropdownDto:
      example:
        isDefault: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isDefault:
          type: boolean
      type: object
    CommonSearchKubernetesResponseData:
      example:
        organizationId: 6
        organizationName: organizationName
        namespace: namespace
        metadataName: metadataName
        projectName: projectName
        projectId: 0
      properties:
        metadataName:
          type: string
        namespace:
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
      type: object
    CommonSearchResponseData:
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
      type: object
    CommonStringBasedDropdownDto:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    CommonStringDropdownIsBoundDto:
      example:
        isBound: true
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        isBound:
          type: boolean
      type: object
    Condition:
      example:
        reason: reason
        lastTransitionTime: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          format: date-time
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    ConfigMapDto:
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    ConfigMapSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    ConfigMapSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ConfigMaps:
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
        - namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/ConfigMapDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ConfirmEmailCommand:
      example:
        mode: mode
        newEmail: newEmail
      properties:
        newEmail:
          format: email
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
      required:
      - mode
      - newEmail
      type: object
    ConsoleScreenshotCommand:
      example:
        serverId: 0
      properties:
        serverId:
          format: int32
          type: integer
      type: object
    ContactUsCommand:
      example:
        businessEmail: businessEmail
        companyName: companyName
        name: name
        comment: comment
      properties:
        name:
          maxLength: 200
          minLength: 3
          type: string
        businessEmail:
          format: email
          minLength: 1
          type: string
        companyName:
          maxLength: 200
          minLength: 3
          type: string
        comment:
          type: string
      required:
      - businessEmail
      - companyName
      - name
      type: object
    CostComponent:
      example:
        unit: unit
        hourlyQuantity: hourlyQuantity
        price: price
        name: name
        hourlyCost: hourlyCost
        monthlyQuantity: monthlyQuantity
        monthlyCost: monthlyCost
      properties:
        name:
          type: string
        unit:
          type: string
        hourlyQuantity:
          type: string
        monthlyQuantity:
          type: string
        price:
          type: string
        hourlyCost:
          type: string
        monthlyCost:
          type: string
      type: object
    CountryListDto:
      example:
        name: name
        isEu: true
      properties:
        name:
          type: string
        isEu:
          type: boolean
      type: object
    CreateAccessProfileCommand:
      example:
        organizationId: 0
        allowedHosts:
        - ipAddress: ipAddress
          description: description
          maskBits: 19
        - ipAddress: ipAddress
          description: description
          maskBits: 19
        httpProxy: httpProxy
        ntpServers:
        - address: address
        - address: address
        name: name
        dnsServers:
        - address: address
        - address: address
        sshUsers:
        - sshPublicKey: sshPublicKey
          name: name
        - sshPublicKey: sshPublicKey
          name: name
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        httpProxy:
          type: string
        organizationId:
          format: int32
          type: integer
        sshUsers:
          items:
            $ref: '#/components/schemas/SshUserCreateDto'
          type: array
        dnsServers:
          items:
            $ref: '#/components/schemas/DnsServerCreateDto'
          type: array
        ntpServers:
          items:
            $ref: '#/components/schemas/NtpServerCreateDto'
          type: array
        allowedHosts:
          items:
            $ref: '#/components/schemas/AllowedHostCreateDto'
          type: array
      required:
      - name
      type: object
    CreateAlertDto:
      example:
        alerts:
        - fingerprint: fingerprint
          annotations:
            description: description
            title: title
          startsAt: 2000-01-23T04:56:07.000+00:00
          endsAt: 2000-01-23T04:56:07.000+00:00
          status: status
          labels: "{}"
        - fingerprint: fingerprint
          annotations:
            description: description
            title: title
          startsAt: 2000-01-23T04:56:07.000+00:00
          endsAt: 2000-01-23T04:56:07.000+00:00
          status: status
          labels: "{}"
        status: status
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/KubernetesAlertCreateDto'
          type: array
        status:
          type: string
      type: object
    CreateAlertingIntegrationCommand:
      example:
        alertingProfileId: 0
        url: url
        token: token
        alertingIntegrationType: null
      properties:
        url:
          minLength: 1
          type: string
        token:
          type: string
        alertingIntegrationType:
          $ref: '#/components/schemas/AlertingIntegrationType'
        alertingProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - alertingIntegrationType
      - alertingProfileId
      - url
      type: object
    CreateAlertingProfileCommand:
      example:
        organizationId: 6
        emails:
        - email: email
        - email: email
        slackConfigurationId: 0
        reminder: null
        webhooks:
        - headers:
          - id: 5
            value: value
            key: key
          - id: 5
            value: value
            key: key
          id: 5
          url: url
        - headers:
          - id: 5
            value: value
            key: key
          - id: 5
            value: value
            key: key
          id: 5
          url: url
        name: name
        alertingIntegrations:
        - url: url
          token: token
          alertingIntegrationType: null
        - url: url
          token: token
          alertingIntegrationType: null
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        slackConfigurationId:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        emails:
          items:
            $ref: '#/components/schemas/AlertingEmailDto'
          type: array
        webhooks:
          items:
            $ref: '#/components/schemas/AlertingWebhookDto'
          type: array
        alertingIntegrations:
          items:
            $ref: '#/components/schemas/AlertingIntegrationDto'
          type: array
        reminder:
          $ref: '#/components/schemas/AlertingReminder'
      required:
      - name
      type: object
    CreateAllowedHostCommand:
      example:
        ipAddress: ipAddress
        accessProfileId: 0
        description: description
        maskBits: 19
      properties:
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        description:
          type: string
        ipAddress:
          minLength: 1
          type: string
        maskBits:
          format: int32
          maximum: 32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - ipAddress
      type: object
    CreateAwsCloudCommand:
      example:
        organizationId: 6
        awsRegion: awsRegion
        awsAccessKeyId: awsAccessKeyId
        azCount: 0
        name: name
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        awsSecretAccessKey:
          minLength: 1
          type: string
        awsAccessKeyId:
          minLength: 1
          type: string
        azCount:
          format: int32
          type: integer
        awsRegion:
          minLength: 1
          type: string
        organizationId:
          format: int32
          type: integer
      required:
      - awsAccessKeyId
      - awsRegion
      - awsSecretAccessKey
      - name
      type: object
    CreateAzureCloudCommand:
      example:
        organizationId: 6
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        azCount: 0
        name: name
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        azureSubscriptionId:
          minLength: 1
          type: string
        azureClientId:
          minLength: 1
          type: string
        azureClientSecret:
          minLength: 1
          type: string
        azureTenantId:
          minLength: 1
          type: string
        azureLocation:
          minLength: 1
          type: string
        azCount:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
      required:
      - azureClientId
      - azureClientSecret
      - azureLocation
      - azureSubscriptionId
      - azureTenantId
      - name
      type: object
    CreateBackupPolicyCommand:
      example:
        cronPeriod: cronPeriod
        name: name
        projectId: 0
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
        retentionPeriod: retentionPeriod
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?=[a-z])(?!-)(?!.*--)[a-z0-9-]+(?<!-)$"
          type: string
        includeNamespaces:
          items:
            type: string
          type: array
        cronPeriod:
          minLength: 1
          type: string
        retentionPeriod:
          minLength: 1
          pattern: ^(\d+h)?(\d+m)?(\d+s)?$
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - cronPeriod
      - name
      - projectId
      - retentionPeriod
      type: object
    CreateBillingSummaryCommand:
      example:
        beginApply: 2000-01-23T04:56:07.000+00:00
        icu: 0
        projectId: 0
      properties:
        icu:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        beginApply:
          format: date-time
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - icu
      - projectId
      type: object
    CreateCatalogAppCommand:
      example:
        catalogId: 0
        repoName: repoName
        packageName: packageName
        version: version
        parameters:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
      properties:
        repoName:
          minLength: 1
          type: string
        packageName:
          minLength: 1
          type: string
        catalogId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        version:
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/CatalogAppParamsDto'
          type: array
      required:
      - catalogId
      - packageName
      - repoName
      type: object
    CreateCatalogCommand:
      example:
        name: name
        description: description
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        description:
          type: string
      required:
      - name
      type: object
    CreateDnsServerCommand:
      example:
        address: address
        accessProfileId: 0
      properties:
        address:
          minLength: 1
          type: string
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - address
      type: object
    CreateInvoiceCommand:
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 18082368.946465593
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 0
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          minLength: 1
          type: string
        organizationSubscriptionId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          type: string
        price:
          format: double
          maximum: 30000000
          minimum: 1
          type: number
      required:
      - name
      - organizationSubscriptionId
      type: object
    CreateKeyPoolCommand:
      type: object
    CreateKubeConfigCommand:
      example:
        isAccessibleForManager: true
        name: name
        namespace: namespace
        isAccessibleForAll: true
        kubeConfigRoleId: 6
        projectId: 0
        userId: userId
        ttl: 1
      properties:
        name:
          maxLength: 230
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-z][a-z0-9-]*[a-z0-9]$"
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        isAccessibleForAll:
          type: boolean
        isAccessibleForManager:
          type: boolean
        kubeConfigRoleId:
          format: int32
          type: integer
        userId:
          type: string
        namespace:
          type: string
        ttl:
          format: int32
          type: integer
      required:
      - name
      - projectId
      type: object
    CreateKubernetesProfileCommand:
      example:
        organizationId: 0
        octaviaEnabled: true
        name: name
        exposeNodePortOnBastion: true
        allowSchedulingOnMaster: true
        uniqueClusterName: true
        taikunLBEnabled: true
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        organizationId:
          format: int32
          type: integer
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
      required:
      - name
      type: object
    CreateNtpServerCommand:
      example:
        address: address
        accessProfileId: 0
      properties:
        address:
          minLength: 1
          type: string
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - address
      type: object
    CreateOpaProfileCommand:
      example:
        forcePodResource: true
        organizationId: 0
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        requireProbe: true
        name: name
        uniqueServiceSelector: true
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        forbidNodePort: true
        uniqueIngresses: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
      properties:
        name:
          maxLength: 50
          minLength: 2
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        forcePodResource:
          type: boolean
        allowedRepo:
          items:
            type: string
          type: array
        forbidSpecificTags:
          items:
            type: string
          type: array
        ingressWhitelist:
          items:
            type: string
          type: array
        organizationId:
          format: int32
          type: integer
      required:
      - name
      type: object
    CreateOpenstackCloudCommand:
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackUser: openStackUser
        isAdmin: true
        openStackVolumeType: openStackVolumeType
        openStackProject: openStackProject
        organizationId: 0
        openStackContinent: openStackContinent
        openStackDomain: openStackDomain
        openStackInternalSubnetId: openStackInternalSubnetId
        name: name
        openStackAvailabilityZone: openStackAvailabilityZone
        openStackRegion: openStackRegion
        openStackImportNetwork: true
        openStackPublicNetwork: openStackPublicNetwork
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        openStackUser:
          minLength: 1
          type: string
        openStackPassword:
          minLength: 1
          type: string
        openStackUrl:
          minLength: 1
          type: string
        openStackProject:
          type: string
        openStackPublicNetwork:
          minLength: 1
          type: string
        openStackAvailabilityZone:
          type: string
        openStackDomain:
          type: string
        openStackRegion:
          minLength: 1
          type: string
        openStackContinent:
          type: string
        openStackVolumeType:
          type: string
        openStackImportNetwork:
          type: boolean
        openStackInternalSubnetId:
          type: string
        organizationId:
          format: int32
          type: integer
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      required:
      - name
      - openStackPassword
      - openStackPublicNetwork
      - openStackRegion
      - openStackUrl
      - openStackUser
      type: object
    CreateProjectAppCommand:
      example:
        extraValues: extraValues
        name: name
        namespace: namespace
        autoSync: true
        projectId: 0
        catalogAppId: 0
        parameters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        name:
          maxLength: 63
          minLength: 3
          pattern: "^(?=[a-z])(?!-)(?!.*--)[a-z0-9-]+(?<!-)$"
          type: string
        namespace:
          maxLength: 63
          minLength: 1
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        catalogAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        extraValues:
          type: string
        autoSync:
          type: boolean
        parameters:
          items:
            $ref: '#/components/schemas/ProjectAppParamsDto'
          type: array
      required:
      - catalogAppId
      - name
      - namespace
      - projectId
      type: object
    CreateProjectCommand:
      example:
        flavors:
        - flavors
        - flavors
        taikunLBFlavor: taikunLBFlavor
        routerIdStartRange: 9
        accessProfileId: 5
        opaProfileId: 5
        maxSize: 7
        autoscalingEnabled: true
        autoscalingGroupName: autoscalingGroupName
        organizationId: 0
        expiredAt: 2000-01-23T04:56:07.000+00:00
        diskSize: 1.2315135367772556
        kubernetesProfileId: 2
        minSize: 4
        cidr: cidr
        autoscalingSpotEnabled: true
        kubernetesVersion: kubernetesVersion
        s3CredentialId: 1
        isAutoUpgrade: true
        isKubernetes: true
        routerIdEndRange: 3
        allowSpotVMs: true
        netMask: 1
        isMonitoringEnabled: true
        fromTemplate:
          autoTrigger: true
          userName: userName
          userId: userId
        allowSpotWorkers: true
        maxSpotPrice: 2.027123023002322
        users:
        - users
        - users
        autoscalingFlavor: autoscalingFlavor
        alertingProfileId: 7
        deleteOnExpiration: true
        saveAsTemplate: true
        templateName: templateName
        name: name
        cloudCredentialId: 0
        isBackupEnabled: true
        allowFullSpotKubernetes: true
        serverTemplates:
        - flavor: flavor
          diskSize: 1337518599436.1604
          role: null
          count: 6
        - flavor: flavor
          diskSize: 1337518599436.1604
          role: null
          count: 6
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?=[a-z])(?!-)(?!.*--)[a-z0-9-]+(?<!-)$"
          type: string
        kubernetesVersion:
          type: string
        organizationId:
          format: int32
          type: integer
        cloudCredentialId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        s3CredentialId:
          format: int32
          type: integer
        accessProfileId:
          format: int32
          type: integer
        opaProfileId:
          format: int32
          type: integer
        kubernetesProfileId:
          format: int32
          type: integer
        isKubernetes:
          type: boolean
        isAutoUpgrade:
          type: boolean
        isBackupEnabled:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        flavors:
          items:
            type: string
          type: array
        users:
          items:
            type: string
          type: array
        alertingProfileId:
          format: int32
          type: integer
        taikunLBFlavor:
          type: string
        routerIdStartRange:
          format: int32
          type: integer
        routerIdEndRange:
          format: int32
          type: integer
        expiredAt:
          format: date-time
          type: string
        deleteOnExpiration:
          type: boolean
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          type: number
        autoscalingEnabled:
          type: boolean
        autoscalingGroupName:
          type: string
        minSize:
          format: int32
          type: integer
        maxSize:
          format: int32
          type: integer
        diskSize:
          format: double
          type: number
        autoscalingFlavor:
          type: string
        autoscalingSpotEnabled:
          type: boolean
        cidr:
          type: string
        netMask:
          format: int32
          type: integer
        saveAsTemplate:
          type: boolean
        templateName:
          type: string
        fromTemplate:
          $ref: '#/components/schemas/FromTemplateDto'
        serverTemplates:
          items:
            $ref: '#/components/schemas/ServerTemplateDto'
          type: array
      required:
      - cloudCredentialId
      - name
      type: object
    CreateProjectFromTemplateCommand:
      example:
        id: 0
        projectName: projectName
        canCommit: true
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        projectName:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        canCommit:
          type: boolean
      required:
      - id
      - projectName
      type: object
    CreateProjectGroupCommand:
      example:
        organizationId: 0
        name: name
        projectIds:
        - 6
        - 6
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        organizationId:
          format: int32
          type: integer
        projectIds:
          items:
            format: int32
            type: integer
          type: array
      required:
      - name
      type: object
    CreateProxmoxCommand:
      example:
        continent: continent
        organizationId: 0
        tokenId: tokenId
        privateNetwork:
          endAllocationRange: endAllocationRange
          netMask: 23
          ipAddress: ipAddress
          bridge: bridge
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        name: name
        hypervisors:
        - hypervisors
        - hypervisors
        storage: storage
        vmTemplateName: vmTemplateName
        url: url
        tokenSecret: tokenSecret
        publicNetwork:
          endAllocationRange: endAllocationRange
          netMask: 23
          ipAddress: ipAddress
          bridge: bridge
          beginAllocationRange: beginAllocationRange
          gateway: gateway
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        tokenId:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        tokenSecret:
          minLength: 1
          type: string
        storage:
          minLength: 1
          type: string
        vmTemplateName:
          minLength: 1
          type: string
        continent:
          type: string
        organizationId:
          format: int32
          type: integer
        hypervisors:
          items:
            type: string
          type: array
        publicNetwork:
          $ref: '#/components/schemas/CreateProxmoxNetworkDto'
        privateNetwork:
          $ref: '#/components/schemas/CreateProxmoxNetworkDto'
      required:
      - name
      - storage
      - tokenId
      - tokenSecret
      - url
      - vmTemplateName
      type: object
    CreateProxmoxNetworkDto:
      example:
        endAllocationRange: endAllocationRange
        netMask: 23
        ipAddress: ipAddress
        bridge: bridge
        beginAllocationRange: beginAllocationRange
        gateway: gateway
      properties:
        bridge:
          minLength: 1
          type: string
        gateway:
          pattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          type: string
        ipAddress:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        netMask:
          format: int32
          maximum: 28
          minimum: 16
          type: integer
        beginAllocationRange:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        endAllocationRange:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
      required:
      - bridge
      type: object
    CreateSecurityGroupCommand:
      example:
        protocol: null
        name: name
        standAloneProfileId: 0
        portMinRange: 0
        portMaxRange: 6
        remoteIpPrefix: remoteIpPrefix
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        protocol:
          $ref: '#/components/schemas/SecurityGroupProtocol'
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          minLength: 1
          type: string
        standAloneProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - name
      - remoteIpPrefix
      - standAloneProfileId
      type: object
    CreateSlackConfigurationCommand:
      example:
        organizationId: 0
        name: name
        channel: channel
        url: url
        slackType: null
      properties:
        organizationId:
          format: int32
          type: integer
        name:
          maxLength: 40
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        url:
          minLength: 1
          type: string
        channel:
          maxLength: 500
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        slackType:
          $ref: '#/components/schemas/SlackType'
      required:
      - channel
      - name
      - url
      type: object
    CreateSshUserCommand:
      example:
        sshPublicKey: sshPublicKey
        name: name
        accessProfileId: 0
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^[a-z_][a-z0-9_-]*[$]?$"
          type: string
        sshPublicKey:
          minLength: 1
          type: string
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - name
      - sshPublicKey
      type: object
    CreateStandAloneDiskCommand:
      example:
        volumeType: volumeType
        size: 6027
        standaloneVmId: 0
        name: name
        lunId: 1
        deviceName: deviceName
      properties:
        standaloneVmId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        size:
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
        volumeType:
          type: string
        deviceName:
          type: string
        lunId:
          format: int32
          type: integer
      required:
      - name
      - standaloneVmId
      type: object
    CreateStandAloneVmCommand:
      example:
        standAloneVmDisks:
        - volumeType: volumeType
          size: 2302
          name: name
          lunId: 7
          deviceName: deviceName
        - volumeType: volumeType
          size: 2302
          name: name
          lunId: 7
          deviceName: deviceName
        flavorName: flavorName
        volumeType: volumeType
        image: image
        spotPrice: 5.637376656633329
        publicIpEnabled: true
        count: 30
        availabilityZone: availabilityZone
        volumeSize: 656
        standAloneMetaDatas:
        - value: value
          key: key
        - value: value
          key: key
        cloudInit: cloudInit
        spotInstance: true
        password: password
        hypervisor: hypervisor
        name: name
        standAloneProfileId: 0
        projectId: 0
        username: username
      properties:
        name:
          minLength: 1
          pattern: "^(?=[a-z])(?!-)(?!.*--)[a-z0-9-]+(?<!-)$"
          type: string
        flavorName:
          minLength: 1
          type: string
        volumeSize:
          format: int64
          maximum: 8192
          minimum: 1
          type: integer
        volumeType:
          type: string
        username:
          type: string
        password:
          type: string
        publicIpEnabled:
          type: boolean
        image:
          minLength: 1
          type: string
        cloudInit:
          type: string
        standAloneProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        count:
          format: int32
          maximum: 50
          minimum: 1
          type: integer
        spotPrice:
          format: double
          type: number
        spotInstance:
          type: boolean
        availabilityZone:
          type: string
        hypervisor:
          type: string
        standAloneVmDisks:
          items:
            $ref: '#/components/schemas/StandAloneVmDiskDto'
          type: array
        standAloneMetaDatas:
          items:
            $ref: '#/components/schemas/StandAloneMetaDataDto'
          type: array
      required:
      - flavorName
      - image
      - projectId
      - standAloneProfileId
      type: object
    CreateStripeCustomerCommand:
      example:
        legalName: legalName
        country: country
        address: address
        billingEmail: billingEmail
        city: city
        vatNumber: vatNumber
      properties:
        legalName:
          type: string
        billingEmail:
          type: string
        country:
          maxLength: 90
          minLength: 3
          type: string
        address:
          type: string
        city:
          type: string
        vatNumber:
          type: string
      required:
      - country
      type: object
    CreateSubscriptionCommand:
      example:
        serverLimit: 6027
        yearlyPrice: 9.301444243932576
        projectLimit: 799
        trialDays: 5
        cloudCredentialLimit: 5961
        tcuPrice: 7.061401241503109
        name: name
        userLimit: 1464
        monthlyPrice: 2.3021358869347655
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        projectLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        serverLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        userLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        cloudCredentialLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        trialDays:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          type: number
        tcuPrice:
          format: double
          type: number
        yearlyPrice:
          format: double
          type: number
      required:
      - name
      type: object
    CreateTanzuCommand:
      example:
        organizationId: 0
        volumeType: volumeType
        password: password
        port: 6
        tanzuContinent: tanzuContinent
        name: name
        namespace: namespace
        url: url
        username: username
      properties:
        organizationId:
          format: int32
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        username:
          maxLength: 100
          minLength: 3
          type: string
        url:
          maxLength: 150
          minLength: 3
          pattern: "^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\\
            /([\\w#!:.?+=&%@!\\-\\/]))?"
          type: string
        password:
          maxLength: 100
          minLength: 3
          type: string
        volumeType:
          maxLength: 30
          minLength: 3
          type: string
        namespace:
          maxLength: 63
          minLength: 3
          pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?"
          type: string
        tanzuContinent:
          type: string
        port:
          format: int32
          type: integer
      required:
      - name
      - namespace
      - password
      - url
      - username
      - volumeType
      type: object
    CreateTicketCommand:
      example:
        organizationId: 0
        name: name
        description: description
        priority: null
      properties:
        name:
          maxLength: 200
          minLength: 3
          type: string
        description:
          maxLength: 2000
          minLength: 3
          type: string
        organizationId:
          format: int32
          type: integer
        priority:
          $ref: '#/components/schemas/TicketPriority'
      required:
      - description
      - name
      type: object
    CreateUserCommand:
      example:
        organizationId: 0
        role: null
        displayName: displayName
        email: email
        username: username
      properties:
        username:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        displayName:
          type: string
        email:
          format: email
          maxLength: 200
          minLength: 3
          type: string
        organizationId:
          format: int32
          type: integer
        role:
          $ref: '#/components/schemas/UserRole'
      required:
      - email
      - username
      type: object
    CreateUserGroupCommand:
      example:
        organizationId: 0
        userIds:
        - userIds
        - userIds
        name: name
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        organizationId:
          format: int32
          type: integer
        userIds:
          items:
            type: string
          type: array
      required:
      - name
      type: object
    CredentialChartDto:
      example:
        openstack: 7
        google: 9
        aws: 5
        tanzu: 3
        totalCount: 2
        azure: 2
      properties:
        aws:
          format: int32
          type: integer
        azure:
          format: int32
          type: integer
        openstack:
          format: int32
          type: integer
        google:
          format: int32
          type: integer
        tanzu:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
      type: object
    CredentialMakeDefaultCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    CredentialsChart:
      example:
        amazon:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        totalCountOpenstack: 4
        totalCountAws: 7
        openstack:
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        google:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          availabilityZonesCount: 2
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          availabilityZonesCount: 2
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        totalCountTanzu: 1
        tanzu:
        - volumeType: volumeType
          projectCount: 9
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 2
          createdAt: createdAt
          isDefault: true
          port: 3
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 7
          lastModified: lastModified
          continentName: continentName
          username: username
        - volumeType: volumeType
          projectCount: 9
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 2
          createdAt: createdAt
          isDefault: true
          port: 3
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 7
          lastModified: lastModified
          continentName: continentName
          username: username
        totalCountGoogle: 1
        azure:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          availabilityZonesCount: 1
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          availabilityZonesCount: 1
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCountAzure: 1
      properties:
        amazon:
          items:
            $ref: '#/components/schemas/AmazonCredentialsListDto'
          type: array
        openstack:
          items:
            $ref: '#/components/schemas/OpenstackCredentialsListDto'
          type: array
        azure:
          items:
            $ref: '#/components/schemas/AzureCredentialsListDto'
          type: array
        google:
          items:
            $ref: '#/components/schemas/GoogleCredentialsListDto'
          type: array
        tanzu:
          items:
            $ref: '#/components/schemas/TanzuCredentialsListDto'
          type: array
        totalCountOpenstack:
          format: int32
          type: integer
        totalCountAws:
          format: int32
          type: integer
        totalCountAzure:
          format: int32
          type: integer
        totalCountGoogle:
          format: int32
          type: integer
        totalCountTanzu:
          format: int32
          type: integer
      type: object
    CredentialsForCli:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          partnerName: partnerName
          cloudType: cloudType
          id: 0
          cloudCredentialName: cloudCredentialName
        - organizationId: 6
          organizationName: organizationName
          partnerName: partnerName
          cloudType: cloudType
          id: 0
          cloudCredentialName: cloudCredentialName
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CredentialsForCliDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CredentialsForCliDto:
      example:
        organizationId: 6
        organizationName: organizationName
        partnerName: partnerName
        cloudType: cloudType
        id: 0
        cloudCredentialName: cloudCredentialName
      properties:
        id:
          format: int32
          type: integer
        cloudCredentialName:
          type: string
        cloudType:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        partnerName:
          type: string
      type: object
    CredentialsForProjectList:
      example:
        cloudType: null
        cloudCredentialRevision: 0
        openstack:
          openStackUrl: openStackUrl
          applicationCredEnabled: true
          openStackPassword: openStackPassword
          openStackUser: openStackUser
          openStackVolumeType: openStackVolumeType
          openStackProject: openStackProject
          openStackTenantId: openStackTenantId
          openStackDomain: openStackDomain
          openStackInternalSubnetId: openStackInternalSubnetId
          openStackAvailabilityZone: openStackAvailabilityZone
          openStackRegion: openStackRegion
          openStackImportNetwork: true
          openStackPublicNetwork: openStackPublicNetwork
        google:
          zone: zone
          billingAccountId: billingAccountId
          region: region
          config: config
          folderId: folderId
        billingEnabled: true
        continentName: continentName
        aws:
          awsRegion: awsRegion
          awsAccessKeyId: awsAccessKeyId
          awsSecretAccessKey: awsSecretAccessKey
        tanzu:
          volumeType: volumeType
          password: password
          port: 6
          namespace: namespace
          url: url
          username: username
        requiresVPN: true
        proxmox:
          password: password
          tokenId: tokenId
          proxmoxNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
          - endAllocationRange: endAllocationRange
            netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
          storage: storage
          vmTemplateName: vmTemplateName
          tokenSecret: tokenSecret
          url: url
        azure:
          azureClientSecret: azureClientSecret
          azureClientId: azureClientId
          azureLocation: azureLocation
          azureTenantId: azureTenantId
          azureSubscriptionId: azureSubscriptionId
      properties:
        cloudType:
          $ref: '#/components/schemas/CloudType'
        cloudCredentialRevision:
          format: int32
          type: integer
        billingEnabled:
          type: boolean
        continentName:
          type: string
        requiresVPN:
          type: boolean
        openstack:
          $ref: '#/components/schemas/OpenstackCredentialsForProjectDto'
        azure:
          $ref: '#/components/schemas/AzureCredentialsForProjectDto'
        aws:
          $ref: '#/components/schemas/AwsCredentialsForProjectDto'
        google:
          $ref: '#/components/schemas/GoogleCredentialForProjectDto'
        tanzu:
          $ref: '#/components/schemas/TanzuCredentialsForProjectDto'
        proxmox:
          $ref: '#/components/schemas/ProxmoxCredentialsForProjectDto'
      type: object
    CronJobCommand:
      example:
        cronPeriod: cronPeriod
      properties:
        cronPeriod:
          minLength: 1
          type: string
      required:
      - cronPeriod
      type: object
    DaemonSetDto:
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          type: string
        status:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    DaemonSetSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    DaemonSetSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DaemonSets:
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/DaemonSetDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DashboardChart:
      example:
        projects:
          updating:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          pending:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          failed:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          totalCount: 5
          succeeded:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
        servers:
          totalUpdatingCount: 1
          totalDiskSize: 1
          waiting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalGoogleCount: 6
          google:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          failed:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          tanzu:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCount: 7
          totalRam: 1
          totalSucceededCount: 7
          totalOpenstackCount: 9
          totalPendingCount: 4
          usedResources:
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          updating:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCpu: 1
          totalFailedCount: 6
          totalAzureCount: 9
          openstack:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalAwsCount: 5
          totalTanzuCount: 8
          aws:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          azure:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          succeeded:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
        standAloneVms:
          totalUpdatingCount: 1
          totalDiskSize: 1
          waiting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalGoogleCount: 6
          google:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          failed:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          tanzu:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCount: 7
          totalRam: 1
          totalSucceededCount: 7
          totalOpenstackCount: 9
          totalPendingCount: 4
          usedResources:
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          - diskSize: 6
            maxRam: 1
            cpu: 6
            maxCpu: 2
            projectName: projectName
            maxDiskSize: 6
            projectId: 9
            ram: 3
          updating:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalCpu: 1
          totalFailedCount: 6
          totalAzureCount: 9
          openstack:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          totalAwsCount: 5
          totalTanzuCount: 8
          aws:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          azure:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          succeeded:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
          - names:
            - names
            - names
            projectName: projectName
            projectId: 4
        organization:
          name: name
          id: 0
          users: 6
        cloudCredentials:
          openstack: 7
          google: 9
          aws: 5
          tanzu: 3
          totalCount: 2
          azure: 2
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationEntityForDashboard'
        projects:
          $ref: '#/components/schemas/ProjectChartDto'
        cloudCredentials:
          $ref: '#/components/schemas/CredentialChartDto'
        servers:
          $ref: '#/components/schemas/ServerChartDto'
        standAloneVms:
          $ref: '#/components/schemas/ServerChartDto'
      type: object
    DeleteAlertCommand:
      example:
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    DeleteAlertingProfilesCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteBackupCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          type: string
      type: object
    DeleteBackupStorageLocationCommand:
      example:
        storageLocation: storageLocation
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        storageLocation:
          type: string
      type: object
    DeleteExpiredAlertsCommand:
      type: object
    DeleteExpiredEventsCommand:
      type: object
    DeleteExpiredHistoryLogsCommand:
      type: object
    DeleteExpiredRefreshTokensCommand:
      type: object
    DeleteExpiredServersCommand:
      type: object
    DeleteImageFromProjectCommand:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          type: array
      type: object
    DeleteKubeConfigByProjectIdCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteKubeConfigCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteOpaProfileCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteProjectActionCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteProjectCommand:
      example:
        isForceDelete: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        isForceDelete:
          type: boolean
      type: object
    DeleteProjectInfracostCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteRedundantProjectActionsCommand:
      type: object
    DeleteRegisterExpiredOrganizationCommand:
      type: object
    DeleteRemovedSpotInstancesCommand:
      type: object
    DeleteRemovedUsersKubeConfigCommand:
      type: object
    DeleteRepositoryCommand:
      example:
        repoName: repoName
      properties:
        repoName:
          type: string
      type: object
    DeleteRequestsCommand:
      type: object
    DeleteRestoreCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          type: string
      type: object
    DeleteScheduleCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          type: string
      type: object
    DeleteSecurityGroupCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteServerCommand:
      example:
        deleteAutoscalingServers: true
        projectId: 0
        serverIds:
        - 6
        - 6
      properties:
        projectId:
          format: int32
          type: integer
        serverIds:
          items:
            format: int32
            type: integer
          type: array
        deleteAutoscalingServers:
          type: boolean
      type: object
    DeleteSlackConfigCommand:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          type: array
      type: object
    DeleteSshUserCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteStandAloneProfileCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteStandAloneVmCommand:
      example:
        vmIds:
        - 6
        - 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        vmIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    DeleteStandAloneVmDiskCommand:
      example:
        vmDiskIds:
        - 6
        - 6
        standaloneVmId: 0
      properties:
        standaloneVmId:
          format: int32
          type: integer
        vmDiskIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    DeleteSubscriptionCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteWholeProjectCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentDto:
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          type: string
        status:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    DeploymentSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    DeploymentSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Deployments:
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/DeploymentDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DescribeConfigMapCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeCrdCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    DescribeCronJobCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeDaemonSetCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeDeploymentCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeIngressCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeJobCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeNetworkPolicyCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeNodeCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    DescribePodCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribePodDisruptionCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribePvcCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeSecretCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeServiceCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DescribeStorageClassCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    DescribeStsCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    DisableAutoscalingCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DisableBackupCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DisableGatekeeperCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DisableRepoCommand:
      example:
        repoName: repoName
      properties:
        repoName:
          minLength: 1
          type: string
      required:
      - repoName
      type: object
    DisableUserCommand:
      example:
        disable: true
        id: id
      properties:
        id:
          type: string
        disable:
          type: boolean
      type: object
    DnsCommand:
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    DnsNtpAddressEditDto:
      example:
        address: address
      properties:
        address:
          type: string
      type: object
    DnsServerCreateDto:
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    DnsServerListDto:
      example:
        address: address
        id: 1
      properties:
        id:
          format: int32
          type: integer
        address:
          type: string
      type: object
    DnsServersListDto:
      example:
        address: address
        accessProfileName: accessProfileName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        address:
          type: string
        accessProfileName:
          type: string
      type: object
    DocumentationData:
      example:
        role: role
        link: link
        id: 0
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          type: string
        link:
          type: string
        role:
          type: string
      type: object
    DocumentationsList:
      example:
        data:
        - role: role
          link: link
          id: 0
          key: key
        - role: role
          link: link
          id: 0
          key: key
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/DocumentationData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DownloadInvoiceCommand:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    DownloadKubeConfigCommand:
      example:
        id: 0
        projectId: 6
      properties:
        id:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
      type: object
    DuplicateNameCheckerCommand:
      example:
        organizationId: 0
        name: name
        type: type
      properties:
        organizationId:
          format: int32
          type: integer
        type:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      - type
      type: object
    EditAlertingIntegrationCommand:
      example:
        alertingProfileId: 0
        id: 0
        url: url
        token: token
        alertingIntegrationType: null
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        url:
          minLength: 1
          type: string
        token:
          type: string
        alertingIntegrationType:
          $ref: '#/components/schemas/AlertingIntegrationType'
        alertingProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - alertingIntegrationType
      - alertingProfileId
      - id
      - url
      type: object
    EditAllowedHostDto:
      example:
        ipAddress: ipAddress
        description: description
        maskBits: 0
      properties:
        description:
          type: string
        ipAddress:
          type: string
        maskBits:
          format: int32
          type: integer
      type: object
    EditArticleCommand:
      example:
        messageId: messageId
        body: body
      properties:
        messageId:
          minLength: 1
          type: string
        body:
          maxLength: 2000
          minLength: 3
          type: string
      required:
      - body
      - messageId
      type: object
    EditAutoscalingCommand:
      example:
        minSize: 60
        maxSize: 14
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        minSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        maxSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    EditCatalogAppParamCommand:
      example:
        catalogAppId: 0
        parameters:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
      properties:
        catalogAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        parameters:
          items:
            $ref: '#/components/schemas/CatalogAppParamsDto'
          type: array
      required:
      - catalogAppId
      type: object
    EditCatalogAppVersionCommand:
      example:
        catalogAppId: 0
        version: version
      properties:
        catalogAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        version:
          minLength: 1
          type: string
      required:
      - catalogAppId
      - version
      type: object
    EditCatalogCommand:
      example:
        name: name
        description: description
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        description:
          type: string
      required:
      - id
      - name
      type: object
    EditProjectAppParamCommand:
      example:
        projectAppId: 0
        parameters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        projectAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        parameters:
          items:
            $ref: '#/components/schemas/EditProjectAppParamsDto'
          type: array
      required:
      - projectAppId
      type: object
    EditProjectAppParamsDto:
      example:
        value: value
        key: key
      properties:
        key:
          minLength: 1
          type: string
        value:
          type: string
      required:
      - key
      type: object
    EditSecurityGroupCommand:
      example:
        protocol: null
        name: name
        id: 0
        portMinRange: 6
        portMaxRange: 1
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          type: string
        protocol:
          $ref: '#/components/schemas/SecurityGroupProtocol'
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          minLength: 1
          type: string
      required:
      - id
      - name
      - remoteIpPrefix
      type: object
    EditSshUserCommand:
      example:
        sshPublicKey: sshPublicKey
        name: name
        accessProfileId: 0
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^[a-z_][a-z0-9_-]*[$]?$"
          type: string
        sshPublicKey:
          minLength: 1
          type: string
        accessProfileId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - accessProfileId
      - id
      - name
      - sshPublicKey
      type: object
    EditTicketCommand:
      example:
        name: name
        description: description
        ticketId: ticketId
      properties:
        ticketId:
          minLength: 1
          type: string
        name:
          maxLength: 200
          minLength: 3
          type: string
        description:
          maxLength: 2000
          minLength: 3
          type: string
      required:
      - description
      - name
      - ticketId
      type: object
    EnableAutoscalingCommand:
      example:
        flavor: flavor
        diskSize: 5257355331280.957
        spotEnabled: true
        minSize: 60
        maxSize: 14
        id: 0
        autoscalingGroupName: autoscalingGroupName
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        autoscalingGroupName:
          minLength: 1
          type: string
        minSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        maxSize:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        diskSize:
          format: double
          maximum: 8796093022209
          minimum: 32212254719
          type: number
        flavor:
          minLength: 1
          type: string
        spotEnabled:
          type: boolean
      required:
      - autoscalingGroupName
      - flavor
      - id
      type: object
    EnableBackupCommand:
      example:
        s3CredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        s3CredentialId:
          format: int32
          type: integer
      type: object
    EnableGatekeeperCommand:
      example:
        opaProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        opaProfileId:
          format: int32
          type: integer
      type: object
    EndpointElements:
      example:
        path: path
        controller: controller
        method: method
        description: description
        id: 0
      properties:
        id:
          format: int32
          type: integer
        controller:
          type: string
        description:
          type: string
        method:
          type: string
        path:
          type: string
      type: object
    EnumList:
      example:
        serverStatuses:
        - name: name
          id: 0
        - name: name
          id: 0
        prometheusTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        availability:
        - name: name
          id: true
        - name: name
          id: true
        azureQuotas:
        - name: name
          id: 0
        - name: name
          id: 0
        auditLogs:
        - name: name
          id: 0
        - name: name
          id: 0
        showbackKinds:
        - name: name
          id: 0
        - name: name
          id: 0
        requestLogs:
        - name: name
          id: 0
        - name: name
          id: 0
        ticketPriorities:
        - name: name
          id: 0
        - name: name
          id: 0
        cloudTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        openstackContinents:
        - name: name
          id: id
        - name: name
          id: id
        awsPlatforms:
        - name: name
          id: id
        - name: name
          id: id
        proxmoxRoles:
        - name: name
          id: 0
        - name: name
          id: 0
        projectStatuses:
        - name: name
          id: 0
        - name: name
          id: 0
        standaloneVmStatuses:
        - name: name
          id: 0
        - name: name
          id: 0
        reminderTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        alertTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        retentionPeriods:
        - name: name
          id: id
        - name: name
          id: id
        googleImageTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        slackTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        userRoles:
        - name: name
          id: 0
        - name: name
          id: 0
        cronPeriods:
        - name: name
          id: id
        - name: name
          id: id
        serverRoles:
        - name: name
          id: 0
        - name: name
          id: 0
        validityPeriods:
        - name: name
          id: 0
        - name: name
          id: 0
        securityGroupRules:
        - name: name
          id: 0
        - name: name
          id: 0
        alertingIntegrationTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        rebootOptions:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        cloudTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        projectStatuses:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        serverRoles:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        serverStatuses:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        userRoles:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        securityGroupRules:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        prometheusTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        auditLogs:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        rebootOptions:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        availability:
          items:
            $ref: '#/components/schemas/CommonAvailabilityDto'
          type: array
        slackTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        requestLogs:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        azureQuotas:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        showbackKinds:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        alertTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        reminderTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        awsPlatforms:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        cronPeriods:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        validityPeriods:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        alertingIntegrationTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        googleImageTypes:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        standaloneVmStatuses:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        openstackContinents:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        retentionPeriods:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        ticketPriorities:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        proxmoxRoles:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
      type: object
    EstimatedInfracost:
      example:
        totalMonthlyCost: totalMonthlyCost
        resources:
        - metadata:
            vcsSubPath: vcsSubPath
            path: path
            vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
            vcsCommitMessage: vcsCommitMessage
            vcsBranch: vcsBranch
            vcsCommitAuthorName: vcsCommitAuthorName
            type: type
            infracostCommand: infracostCommand
            vcsCommitSha: vcsCommitSha
            vcsRepositoryUrl: vcsRepositoryUrl
            vcsCommitAuthorEmail: vcsCommitAuthorEmail
          name: name
          hourlyCost: hourlyCost
          subresources:
          - metadata:
              vcsSubPath: vcsSubPath
              path: path
              vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
              vcsCommitMessage: vcsCommitMessage
              vcsBranch: vcsBranch
              vcsCommitAuthorName: vcsCommitAuthorName
              type: type
              infracostCommand: infracostCommand
              vcsCommitSha: vcsCommitSha
              vcsRepositoryUrl: vcsRepositoryUrl
              vcsCommitAuthorEmail: vcsCommitAuthorEmail
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          - metadata:
              vcsSubPath: vcsSubPath
              path: path
              vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
              vcsCommitMessage: vcsCommitMessage
              vcsBranch: vcsBranch
              vcsCommitAuthorName: vcsCommitAuthorName
              type: type
              infracostCommand: infracostCommand
              vcsCommitSha: vcsCommitSha
              vcsRepositoryUrl: vcsRepositoryUrl
              vcsCommitAuthorEmail: vcsCommitAuthorEmail
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
        - metadata:
            vcsSubPath: vcsSubPath
            path: path
            vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
            vcsCommitMessage: vcsCommitMessage
            vcsBranch: vcsBranch
            vcsCommitAuthorName: vcsCommitAuthorName
            type: type
            infracostCommand: infracostCommand
            vcsCommitSha: vcsCommitSha
            vcsRepositoryUrl: vcsRepositoryUrl
            vcsCommitAuthorEmail: vcsCommitAuthorEmail
          name: name
          hourlyCost: hourlyCost
          subresources:
          - metadata:
              vcsSubPath: vcsSubPath
              path: path
              vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
              vcsCommitMessage: vcsCommitMessage
              vcsBranch: vcsBranch
              vcsCommitAuthorName: vcsCommitAuthorName
              type: type
              infracostCommand: infracostCommand
              vcsCommitSha: vcsCommitSha
              vcsRepositoryUrl: vcsRepositoryUrl
              vcsCommitAuthorEmail: vcsCommitAuthorEmail
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          - metadata:
              vcsSubPath: vcsSubPath
              path: path
              vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
              vcsCommitMessage: vcsCommitMessage
              vcsBranch: vcsBranch
              vcsCommitAuthorName: vcsCommitAuthorName
              type: type
              infracostCommand: infracostCommand
              vcsCommitSha: vcsCommitSha
              vcsRepositoryUrl: vcsRepositoryUrl
              vcsCommitAuthorEmail: vcsCommitAuthorEmail
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
        totalHourlyCost: totalHourlyCost
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
        totalHourlyCost:
          type: string
        totalMonthlyCost:
          type: string
      type: object
    ExceededQuotaList:
      example:
        data: "{}"
        totalCount: 0
      properties:
        data:
          type: object
        totalCount:
          format: int32
          type: integer
      type: object
    FetchAzureFlavorEuroPricesCommand:
      type: object
    FetchAzureFlavorPricesCommand:
      type: object
    FetchKubernetesAlertDataCommand:
      type: object
    FetchKubernetesOverviewDataCommand:
      type: object
    FetchOrganizationDetailsCommand:
      type: object
    FillArtifacthubOrganizationCommand:
      type: object
    Filter:
      example:
        value: value
        operator: operator
      properties:
        operator:
          type: string
        value:
          type: string
      type: object
    FilteringElementDto:
      example:
        organizationName: organizationName
        name: name
      properties:
        organizationName:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      - organizationName
      type: object
    FinalPriceCommand:
      example:
        subscriptionId: 0
      properties:
        subscriptionId:
          format: int32
          type: integer
      type: object
    FinalPriceDto:
      example:
        yearlyFinalPrice: 0.8008281904610115
        monthlyFinalPrice: 6.027456183070403
      properties:
        yearlyFinalPrice:
          format: double
          type: number
        monthlyFinalPrice:
          format: double
          type: number
      type: object
    FlavorsListDto:
      example:
        maxDataDiskCount: 1.4658129805029452
        name: name
        cpu: 6
        description: "{}"
        ram: 0
      properties:
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: object
        maxDataDiskCount:
          format: double
          type: number
      type: object
    ForceToResetPasswordCommand:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    ForgotPasswordCommand:
      example:
        email: email
      properties:
        email:
          type: string
      type: object
    FromTemplateDto:
      example:
        autoTrigger: true
        userName: userName
        userId: userId
      properties:
        autoTrigger:
          type: boolean
        userId:
          type: string
        userName:
          type: string
      type: object
    FullSpotOperationCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    GetCatalogAppValueAutocompleteCommand:
      example:
        packageId: packageId
        version: version
        catalogAppId: 0
      properties:
        packageId:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
        catalogAppId:
          format: int32
          type: integer
      required:
      - packageId
      - version
      type: object
    GetCatalogAppValueCommand:
      example:
        packageId: packageId
        version: version
      properties:
        packageId:
          minLength: 1
          type: string
        version:
          minLength: 1
          type: string
      required:
      - packageId
      - version
      type: object
    GetProjectOperationCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    GetToken:
      example:
        refreshTokenExpireTime: 2000-01-23T04:56:07.000+00:00
        token: token
        refreshToken: refreshToken
      properties:
        token:
          type: string
        refreshToken:
          type: string
        refreshTokenExpireTime:
          format: date-time
          type: string
      type: object
    GoogleCommonImages:
      example:
        displayName: displayName
        name: name
      properties:
        name:
          type: string
        displayName:
          type: string
      type: object
    GoogleCredentialForProjectDto:
      example:
        zone: zone
        billingAccountId: billingAccountId
        region: region
        config: config
        folderId: folderId
      properties:
        config:
          type: string
        folderId:
          type: string
        billingAccountId:
          type: string
        zone:
          type: string
        region:
          type: string
      type: object
    GoogleCredentialList:
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          availabilityZonesCount: 2
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          availabilityZonesCount: 2
          billingAccountName: billingAccountName
          id: 5
          region: region
          continentName: continentName
          projectId: projectId
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/GoogleCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    GoogleCredentialsListDto:
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        partnerName: partnerName
        partnerLogo: partnerLogo
        billingAccountId: billingAccountId
        zones:
        - zones
        - zones
        folderId: folderId
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        isLocked: true
        name: name
        availabilityZonesCount: 2
        billingAccountName: billingAccountName
        id: 5
        region: region
        continentName: continentName
        projectId: projectId
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        partnerLogo:
          type: string
        partnerName:
          type: string
        folderId:
          type: string
        projectId:
          type: string
        billingAccountId:
          type: string
        zones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        region:
          type: string
        isLocked:
          type: boolean
        isDefault:
          type: boolean
        billingAccountName:
          type: string
        createdAt:
          type: string
        continentName:
          type: string
      type: object
    GoogleFlavorDto:
      example:
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 0
        description: "{}"
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        ram: 6
        linuxSpotPrice: linuxSpotPrice
      properties:
        name:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        description:
          type: object
        linuxPrice:
          type: string
        windowsPrice:
          type: string
        linuxSpotPrice:
          type: string
        windowsSpotPrice:
          type: string
      type: object
    GoogleFlavorList:
      example:
        data:
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: "{}"
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 6
          linuxSpotPrice: linuxSpotPrice
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: "{}"
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          ram: 6
          linuxSpotPrice: linuxSpotPrice
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/GoogleFlavorDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    GoogleImageList:
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    GoogleOwnerDetails:
      example:
        owner: owner
        image:
          displayName: displayName
          name: name
      properties:
        owner:
          type: string
        image:
          $ref: '#/components/schemas/GoogleCommonImages'
      type: object
    GroupedBillingInfo:
      example:
        data:
        - tcu: 0
          startDate: startDate
        - tcu: 0
          startDate: startDate
        projectName: projectName
        projectId: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/GroupedBillings'
          type: array
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
      type: object
    GroupedBillings:
      example:
        tcu: 0
        startDate: startDate
      properties:
        startDate:
          type: string
        tcu:
          format: int64
          type: integer
      type: object
    HelmMetadata:
      example:
        name: name
        namespace: namespace
        creationTimestamp: creationTimestamp
      properties:
        name:
          type: string
        namespace:
          type: string
        creationTimestamp:
          type: string
      type: object
    HelmReleaseDto:
      example:
        metadata:
          name: name
          namespace: namespace
          creationTimestamp: creationTimestamp
        apiVersion: apiVersion
        kind: kind
        spec:
          targetNamespace: targetNamespace
          releaseName: releaseName
          values:
            parent: null
            root: null
            options:
              propertyNameCaseInsensitive: true
          storageNamespace: storageNamespace
          interval: interval
          chart:
            spec:
              interval: interval
              sourceRef:
                kind: kind
                name: name
              chart: chart
              version: version
          url: url
        status:
          failures: 0
          helmChart: helmChart
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            status: status
          observedGeneration: 6
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/HelmMetadata'
        spec:
          $ref: '#/components/schemas/HelmSpec'
        status:
          $ref: '#/components/schemas/HelmStatus'
      type: object
    HelmReleasesList:
      example:
        data:
        - metadata:
            name: name
            namespace: namespace
            creationTimestamp: creationTimestamp
          apiVersion: apiVersion
          kind: kind
          spec:
            targetNamespace: targetNamespace
            releaseName: releaseName
            values:
              parent: null
              root: null
              options:
                propertyNameCaseInsensitive: true
            storageNamespace: storageNamespace
            interval: interval
            chart:
              spec:
                interval: interval
                sourceRef:
                  kind: kind
                  name: name
                chart: chart
                version: version
            url: url
          status:
            failures: 0
            helmChart: helmChart
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            observedGeneration: 6
        - metadata:
            name: name
            namespace: namespace
            creationTimestamp: creationTimestamp
          apiVersion: apiVersion
          kind: kind
          spec:
            targetNamespace: targetNamespace
            releaseName: releaseName
            values:
              parent: null
              root: null
              options:
                propertyNameCaseInsensitive: true
            storageNamespace: storageNamespace
            interval: interval
            chart:
              spec:
                interval: interval
                sourceRef:
                  kind: kind
                  name: name
                chart: chart
                version: version
            url: url
          status:
            failures: 0
            helmChart: helmChart
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              status: status
            observedGeneration: 6
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/HelmReleaseDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    HelmSpec:
      example:
        targetNamespace: targetNamespace
        releaseName: releaseName
        values:
          parent: null
          root: null
          options:
            propertyNameCaseInsensitive: true
        storageNamespace: storageNamespace
        interval: interval
        chart:
          spec:
            interval: interval
            sourceRef:
              kind: kind
              name: name
            chart: chart
            version: version
        url: url
      properties:
        interval:
          type: string
        releaseName:
          type: string
        url:
          type: string
        targetNamespace:
          type: string
        storageNamespace:
          type: string
        chart:
          $ref: '#/components/schemas/Chart'
        values:
          $ref: '#/components/schemas/JsonNode'
      type: object
    HelmStatus:
      example:
        failures: 0
        helmChart: helmChart
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          status: status
        observedGeneration: 6
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        failures:
          format: int64
          type: integer
        helmChart:
          type: string
        observedGeneration:
          format: int64
          type: integer
      type: object
    HypervisorListCommand:
      example:
        tokenId: tokenId
        cloudId: 0
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          type: string
        tokenId:
          type: string
        tokenSecret:
          type: string
        cloudId:
          format: int32
          type: integer
      type: object
    ImageByIdCommand:
      example:
        imageId: imageId
        cloudId: 0
      properties:
        cloudId:
          format: int32
          type: integer
        imageId:
          type: string
      type: object
    ImportBackupStorageLocationCommand:
      example:
        targetProjectId: 0
        sourceProjectId: 6
      properties:
        targetProjectId:
          format: int32
          type: integer
        sourceProjectId:
          format: int32
          type: integer
      type: object
    ImportRepoCommand:
      example:
        displayName: displayName
        name: name
        url: url
      properties:
        name:
          maxLength: 200
          minLength: 3
          pattern: "^[a-z][a-z0-9-]*$"
          type: string
        url:
          pattern: "^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\\
            /([\\w#!:.?+=&%@!\\-\\/]))?"
          type: string
        displayName:
          maxLength: 200
          minLength: 3
          type: string
      required:
      - displayName
      - name
      type: object
    IngressDto:
      example:
        hosts: hosts
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        hosts:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    IngressSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    IngressSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Ingresses:
      example:
        data:
        - hosts: hosts
          namespace: namespace
          metadataName: metadataName
          age: age
        - hosts: hosts
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/IngressDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    InteractiveShellSendCommand:
      example:
        projectId: 0
        token: token
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        token:
          minLength: 1
          type: string
      required:
      - projectId
      - token
      type: object
    InvoiceDto:
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        documentNumber: documentNumber
        price: 2.3021358869347655
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 5
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        id: 5
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        documentNumber:
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          type: string
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
      type: object
    InvoiceListDto:
      example:
        organizationName: organizationName
        endDate: endDate
        organizationSubscriptionId: 5
        requiredPaymentAction: true
        organizationId: 1
        isPaid: true
        subscriptionType: subscriptionType
        price: 6.027456183070403
        subscriptionName: subscriptionName
        name: name
        invoiceNumber: invoiceNumber
        invoiceId: invoiceId
        id: 0
        startDate: startDate
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        requiredPaymentAction:
          type: boolean
        isPaid:
          type: boolean
        invoiceId:
          type: string
        subscriptionType:
          type: string
        subscriptionName:
          type: string
        price:
          format: double
          type: number
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        invoiceNumber:
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
      type: object
    Invoices:
      example:
        data:
        - organizationName: organizationName
          endDate: endDate
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          organizationId: 1
          isPaid: true
          subscriptionType: subscriptionType
          price: 6.027456183070403
          subscriptionName: subscriptionName
          name: name
          invoiceNumber: invoiceNumber
          invoiceId: invoiceId
          id: 0
          startDate: startDate
        - organizationName: organizationName
          endDate: endDate
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          organizationId: 1
          isPaid: true
          subscriptionType: subscriptionType
          price: 6.027456183070403
          subscriptionName: subscriptionName
          name: name
          invoiceNumber: invoiceNumber
          invoiceId: invoiceId
          id: 0
          startDate: startDate
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/InvoiceListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    IpAddressRangeCountCommand:
      example:
        end: end
        begin: begin
      properties:
        begin:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        end:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
      type: object
    IpAddressRangeListCommand:
      example:
        netMask: 16
        ipAddress: ipAddress
        gateway: gateway
      properties:
        ipAddress:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        netMask:
          format: int32
          maximum: 28
          minimum: 16
          type: integer
        gateway:
          pattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
          type: string
      type: object
    IpListCommand:
      example:
        netMask: 16
        ipAddress: ipAddress
      properties:
        ipAddress:
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        netMask:
          format: int32
          maximum: 28
          minimum: 16
          type: integer
      type: object
    JsonNode:
      example:
        parent: null
        root: null
        options:
          propertyNameCaseInsensitive: true
      properties:
        options:
          $ref: '#/components/schemas/JsonNodeOptions'
        parent:
          $ref: '#/components/schemas/JsonNode'
        root:
          $ref: '#/components/schemas/JsonNode'
      type: object
    JsonNodeOptions:
      example:
        propertyNameCaseInsensitive: true
      properties:
        propertyNameCaseInsensitive:
          type: boolean
      type: object
    KeycloakCheckerCommand:
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        url: url
        realmsName: realmsName
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        url:
          minLength: 1
          type: string
        realmsName:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - name
      - realmsName
      - url
      type: object
    KeycloakCreateCommand:
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        url: url
        realmsName: realmsName
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        url:
          minLength: 1
          type: string
        realmsName:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - name
      - realmsName
      - url
      type: object
    KeycloakDeleteCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    KeycloakEditCommand:
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        id: 0
        url: url
        realmsName: realmsName
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        url:
          minLength: 1
          type: string
        realmsName:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        clientSecret:
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - id
      - name
      - realmsName
      - url
      type: object
    KeycloakListDto:
      example:
        organizationId: 6
        clientId: clientId
        organizationName: organizationName
        partnerLogo: partnerLogo
        name: name
        clientSecret: clientSecret
        id: 0
        url: url
        enabled: true
        realmsName: realmsName
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        url:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        realmsName:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        partnerLogo:
          type: string
        enabled:
          type: boolean
      type: object
    KubeConfigForUserDto:
      example:
        createdAt: createdAt
        isAccessibleForManager: true
        createdBy: createdBy
        displayName: displayName
        namespace: namespace
        isAccessibleForAll: true
        id: 0
        projectName: projectName
        userId: userId
        projectId: 6
        kubeConfigRoleName: kubeConfigRoleName
        expirationDate: expirationDate
      properties:
        id:
          format: int32
          type: integer
        userId:
          type: string
        displayName:
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        isAccessibleForAll:
          type: boolean
        isAccessibleForManager:
          type: boolean
        kubeConfigRoleName:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
        namespace:
          type: string
        expirationDate:
          type: string
      type: object
    KubeConfigForUserList:
      example:
        data:
        - createdAt: createdAt
          isAccessibleForManager: true
          createdBy: createdBy
          displayName: displayName
          namespace: namespace
          isAccessibleForAll: true
          id: 0
          projectName: projectName
          userId: userId
          projectId: 6
          kubeConfigRoleName: kubeConfigRoleName
          expirationDate: expirationDate
        - createdAt: createdAt
          isAccessibleForManager: true
          createdBy: createdBy
          displayName: displayName
          namespace: namespace
          isAccessibleForAll: true
          id: 0
          projectName: projectName
          userId: userId
          projectId: 6
          kubeConfigRoleName: kubeConfigRoleName
          expirationDate: expirationDate
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubeConfigForUserDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubeConfigInteractiveShellCommand:
      example:
        kubeConfigId: 0
        projectId: 0
        token: token
      properties:
        kubeConfigId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        token:
          minLength: 1
          type: string
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - kubeConfigId
      - projectId
      - token
      type: object
    KubeConfigResponse:
      example:
        data: data
      properties:
        data:
          type: string
      type: object
    KubeConfigRoleDto:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    KubeConfigRoleResponse:
      example:
        data:
        - name: name
          id: 0
        - name: name
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubeConfigRoleDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesAlertCreateDto:
      example:
        fingerprint: fingerprint
        annotations:
          description: description
          title: title
        startsAt: 2000-01-23T04:56:07.000+00:00
        endsAt: 2000-01-23T04:56:07.000+00:00
        status: status
        labels: "{}"
      properties:
        status:
          type: string
        labels:
          type: object
        annotations:
          $ref: '#/components/schemas/Annotations'
        startsAt:
          format: date-time
          type: string
        endsAt:
          format: date-time
          type: string
        fingerprint:
          type: string
      type: object
    KubernetesAlertDto:
      example:
        severity: severity
        lastModifiedBy: lastModifiedBy
        description: description
        title: title
        endAt: endAt
        silenceReason: silenceReason
        labels: "{}"
        isSolved: true
        isSilenced: true
        fingerprint: fingerprint
        startsAt: startsAt
        id: 0
        projectName: projectName
        projectId: 6
        status: status
      properties:
        id:
          format: int32
          type: integer
        labels:
          type: object
        description:
          type: string
        title:
          type: string
        severity:
          type: string
        fingerprint:
          type: string
        status:
          type: string
        startsAt:
          type: string
        endAt:
          type: string
        isSolved:
          type: boolean
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        isSilenced:
          type: boolean
        silenceReason:
          type: string
        lastModifiedBy:
          type: string
      type: object
    KubernetesAlertList:
      example:
        data:
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: "{}"
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: "{}"
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesAlertDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesCliCommand:
      example:
        kubeConfigId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        kubeConfigId:
          format: int32
          type: integer
      type: object
    KubernetesCronJobDto:
      example:
        suspend: true
        schedule: schedule
        lastSchedule: lastSchedule
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        lastSchedule:
          type: string
        suspend:
          type: boolean
        schedule:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    KubernetesCronJobsList:
      example:
        data:
        - suspend: true
          schedule: schedule
          lastSchedule: lastSchedule
          namespace: namespace
          metadataName: metadataName
          age: age
        - suspend: true
          schedule: schedule
          lastSchedule: lastSchedule
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesCronJobDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesEventCreateDto:
      example:
        reason: reason
        metadata: "{}"
        lastTimeStamp: 2000-01-23T04:56:07.000+00:00
        involvedObject: "{}"
        firstTimeStamp: 2000-01-23T04:56:07.000+00:00
        count: 0
        source: "{}"
        type: type
        message: message
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        metadata:
          type: object
        source:
          type: object
        involvedObject:
          type: object
        firstTimeStamp:
          format: date-time
          type: string
        lastTimeStamp:
          format: date-time
          type: string
        count:
          format: int32
          type: integer
      type: object
    KubernetesJobDto:
      example:
        namespace: namespace
        metadataName: metadataName
        completions: 0
        conditions: conditions
        age: age
      properties:
        metadataName:
          type: string
        namespace:
          type: string
        age:
          type: string
        completions:
          format: int32
          type: integer
        conditions:
          type: string
      type: object
    KubernetesJobList:
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          completions: 0
          conditions: conditions
          age: age
        - namespace: namespace
          metadataName: metadataName
          completions: 0
          conditions: conditions
          age: age
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesJobDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesNodeLabelsDto:
      example:
        value: value
        key: key
      properties:
        key:
          maxLength: 63
          minLength: 1
          pattern: "^[a-zA-Z0-9-_./]+$"
          type: string
        value:
          type: string
      required:
      - key
      type: object
    KubernetesPodLogsCommand:
      example:
        container: container
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          type: string
        container:
          type: string
      type: object
    KubernetesProfilesEntity:
      example:
        name: name
        id: 0
        taikunLBEnabled: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        taikunLBEnabled:
          type: boolean
      type: object
    KubernetesProfilesLisForPollerDto:
      example:
        organizationId: 1
        proxmoxStorage: proxmoxStorage
        organizationName: organizationName
        octaviaEnabled: true
        isLocked: true
        name: name
        exposeNodePortOnBastion: true
        allowSchedulingOnMaster: true
        id: 7
        uniqueClusterName: true
        taikunLBEnabled: true
        cni: cni
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        cni:
          type: string
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        isLocked:
          type: boolean
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
        proxmoxStorage:
          type: string
      type: object
    KubernetesProfilesList:
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          exposeNodePortOnBastion: true
          taikunLBEnabled: true
          organizationId: 6
          createdAt: createdAt
          proxmoxStorage: proxmoxStorage
          createdBy: createdBy
          octaviaEnabled: true
          isLocked: true
          name: name
          allowSchedulingOnMaster: true
          id: 0
          lastModified: lastModified
          uniqueClusterName: true
          cni: cni
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          exposeNodePortOnBastion: true
          taikunLBEnabled: true
          organizationId: 6
          createdAt: createdAt
          proxmoxStorage: proxmoxStorage
          createdBy: createdBy
          octaviaEnabled: true
          isLocked: true
          name: name
          allowSchedulingOnMaster: true
          id: 0
          lastModified: lastModified
          uniqueClusterName: true
          cni: cni
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubernetesProfilesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesProfilesListDto:
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        exposeNodePortOnBastion: true
        taikunLBEnabled: true
        organizationId: 6
        createdAt: createdAt
        proxmoxStorage: proxmoxStorage
        createdBy: createdBy
        octaviaEnabled: true
        isLocked: true
        name: name
        allowSchedulingOnMaster: true
        id: 0
        lastModified: lastModified
        uniqueClusterName: true
        cni: cni
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        cni:
          type: string
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        isLocked:
          type: boolean
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        createdAt:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        proxmoxStorage:
          type: string
      type: object
    KubernetesProfilesLockManagerCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    KubernetesProfilesSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    KubernetesProfilesSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesQuotaListDto:
      example:
        sumOfCpuUsage: 1.4658129805029452
        podsCapacity: 5
        sumOfRamInGb: 6.027456183070403
        podsTotalCount: 2
        sumOfRamUsage: 5.962133916683182
        sumOfCpu: 0.8008281904610115
      properties:
        sumOfCpu:
          format: double
          type: number
        sumOfRamInGb:
          format: double
          type: number
        sumOfCpuUsage:
          format: double
          type: number
        sumOfRamUsage:
          format: double
          type: number
        podsCapacity:
          format: int32
          type: integer
        podsTotalCount:
          format: int32
          type: integer
      type: object
    KubernetesVersionListDto:
      example:
        isKubevapEnabled: true
        version: version
      properties:
        version:
          type: string
        isKubevapEnabled:
          type: boolean
      type: object
    KubesprayCreateCommand:
      example:
        version: version
        kubernetesVersion: kubernetesVersion
      properties:
        version:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
        kubernetesVersion:
          maxLength: 15
          minLength: 3
          pattern: "^v\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
          type: string
      required:
      - kubernetesVersion
      - version
      type: object
    KubesprayListDto:
      example:
        isDeprecated: true
        id: 0
        version: version
        kubernetesVersion: kubernetesVersion
      properties:
        id:
          format: int32
          type: integer
        version:
          type: string
        kubernetesVersion:
          type: string
        isDeprecated:
          type: boolean
      type: object
    Kubesprays:
      example:
        data:
        - isDeprecated: true
          id: 0
          version: version
          kubernetesVersion: kubernetesVersion
        - isDeprecated: true
          id: 0
          version: version
          kubernetesVersion: kubernetesVersion
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/KubesprayListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    LeaveTaikunCommand:
      example:
        reason: reason
        message: message
      properties:
        reason:
          minLength: 1
          type: string
        message:
          type: string
      required:
      - reason
      type: object
    LeaveTaikunDto:
      example:
        paymentIntentId: paymentIntentId
        paymentClientSecret: paymentClientSecret
      properties:
        paymentIntentId:
          type: string
        paymentClientSecret:
          type: string
      type: object
    ListAllBackupStorageLocations:
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          provider: provider
          namespace: namespace
          metadataName: metadataName
          accessMode: accessMode
          lastValidated: 2000-01-23T04:56:07.000+00:00
          backupCredentialId: 0
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          provider: provider
          namespace: namespace
          metadataName: metadataName
          accessMode: accessMode
          lastValidated: 2000-01-23T04:56:07.000+00:00
          backupCredentialId: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/BackupStorageLocationDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListAllBackups:
      example:
        data:
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          expiration: 2000-01-23T04:56:07.000+00:00
          location: location
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          expiration: 2000-01-23T04:56:07.000+00:00
          location: location
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CBackupDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListAllDeleteBackupRequests:
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          backupName: backupName
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          backupName: backupName
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CDeleteBackupRequestDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListAllRestores:
      example:
        data:
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          startTimeStamp: 2000-01-23T04:56:07.000+00:00
          warnings: 0
          namespace: namespace
          excludeNamespaces:
          - excludeNamespaces
          - excludeNamespaces
          completionDateTime: 2000-01-23T04:56:07.000+00:00
          metadataName: metadataName
          backupName: backupName
          includeNamespaces:
          - includeNamespaces
          - includeNamespaces
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          startTimeStamp: 2000-01-23T04:56:07.000+00:00
          warnings: 0
          namespace: namespace
          excludeNamespaces:
          - excludeNamespaces
          - excludeNamespaces
          completionDateTime: 2000-01-23T04:56:07.000+00:00
          metadataName: metadataName
          backupName: backupName
          includeNamespaces:
          - includeNamespaces
          - includeNamespaces
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/CRestoreDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListAllSchedules:
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule: schedule
          lastBackup: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          includedNamespaces:
          - includedNamespaces
          - includedNamespaces
          excludedNamespaces:
          - excludedNamespaces
          - excludedNamespaces
          ttl: ttl
          status:
            phase: phase
            lastBackup: 2000-01-23T04:56:07.000+00:00
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule: schedule
          lastBackup: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          includedNamespaces:
          - includedNamespaces
          - includedNamespaces
          excludedNamespaces:
          - excludedNamespaces
          - excludedNamespaces
          ttl: ttl
          status:
            phase: phase
            lastBackup: 2000-01-23T04:56:07.000+00:00
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CScheduleDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ListCatalogAppAvailableVersionsCommand:
      example:
        repoName: repoName
        packageName: packageName
        currentVersion: currentVersion
      properties:
        repoName:
          type: string
        packageName:
          type: string
        currentVersion:
          type: string
      type: object
    ListForLandingPageDto:
      example:
        serverLimit: 1
        yearlyPrice: 7.061401241503109
        isDeprecated: true
        trialDays: 2
        cloudCredentialLimit: 5
        description: description
        monthlyPrice: 2.3021358869347655
        projectLimit: 6
        isFree: true
        tcuPrice: 9.301444243932576
        name: name
        isEnterprise: true
        currency: currency
        id: 0
        partnerId: 3
        userLimit: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectLimit:
          format: int32
          type: integer
        serverLimit:
          format: int32
          type: integer
        userLimit:
          format: int32
          type: integer
        cloudCredentialLimit:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          type: number
        yearlyPrice:
          format: double
          type: number
        tcuPrice:
          format: double
          type: number
        isDeprecated:
          type: boolean
        currency:
          type: string
        partnerId:
          format: int32
          type: integer
        trialDays:
          format: int32
          type: integer
        description:
          type: string
        isFree:
          type: boolean
        isEnterprise:
          type: boolean
      type: object
    ListForOrganizationEditDto:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    ListForPartnersDto:
      example:
        serverLimit: 1
        yearlyPrice: 7.061401241503109
        isDeprecated: true
        trialDays: 2
        cloudCredentialLimit: 5
        exceededCloudCredential: true
        exceededUser: true
        description: description
        monthlyPrice: 2.3021358869347655
        isActive: true
        isDemo: true
        isYearly: true
        projectLimit: 6
        partner:
          name: name
          link: link
          logo: logo
          id: 3
        exceededProject: true
        tcuPrice: 9.301444243932576
        name: name
        exceededServers: true
        isEnterprise: true
        currency: currency
        id: 0
        userLimit: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectLimit:
          format: int32
          type: integer
        serverLimit:
          format: int32
          type: integer
        userLimit:
          format: int32
          type: integer
        cloudCredentialLimit:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          type: number
        yearlyPrice:
          format: double
          type: number
        tcuPrice:
          format: double
          type: number
        isDeprecated:
          type: boolean
        currency:
          type: string
        isEnterprise:
          type: boolean
        partner:
          $ref: '#/components/schemas/PartnerDetailsForSubscription'
        exceededUser:
          type: boolean
        exceededProject:
          type: boolean
        exceededCloudCredential:
          type: boolean
        exceededServers:
          type: boolean
        isActive:
          type: boolean
        isYearly:
          type: boolean
        trialDays:
          format: int32
          type: integer
        description:
          type: string
        isDemo:
          type: boolean
      type: object
    LockProjectAppCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    LoginCommand:
      example:
        mode: mode
        password: password
        secretKey: secretKey
        accessKey: accessKey
        email: email
      properties:
        email:
          type: string
        password:
          type: string
        mode:
          type: string
        accessKey:
          type: string
        secretKey:
          type: string
      type: object
    LokiResponseDto:
      example:
        start: 2000-01-23T04:56:07.000+00:00
        limit: 6
        canDownload: true
        end: 2000-01-23T04:56:07.000+00:00
        filters:
        - value: value
          operator: operator
        - value: value
          operator: operator
        projectId: 0
        parameters:
        - label: label
          value: value
          operator: operator
        - label: label
          value: value
          operator: operator
        direction: direction
      properties:
        projectId:
          format: int32
          type: integer
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        limit:
          format: int32
          type: integer
        direction:
          type: string
        canDownload:
          type: boolean
      type: object
    MakeCsmCommand:
      example:
        mode: mode
        userId: userId
      properties:
        userId:
          minLength: 1
          type: string
        mode:
          minLength: 1
          type: string
      required:
      - mode
      - userId
      type: object
    MakeOwnerCommand:
      example:
        userId: userId
      properties:
        userId:
          minLength: 1
          type: string
      required:
      - userId
      type: object
    Metadata:
      example:
        vcsSubPath: vcsSubPath
        path: path
        vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
        vcsCommitMessage: vcsCommitMessage
        vcsBranch: vcsBranch
        vcsCommitAuthorName: vcsCommitAuthorName
        type: type
        infracostCommand: infracostCommand
        vcsCommitSha: vcsCommitSha
        vcsRepositoryUrl: vcsRepositoryUrl
        vcsCommitAuthorEmail: vcsCommitAuthorEmail
      properties:
        infracostCommand:
          type: string
        vcsBranch:
          type: string
        vcsCommitSha:
          type: string
        vcsCommitAuthorName:
          type: string
        vcsCommitAuthorEmail:
          type: string
        vcsCommitTimestamp:
          format: date-time
          type: string
        vcsCommitMessage:
          type: string
        vcsRepositoryUrl:
          type: string
        path:
          type: string
        type:
          type: string
        vcsSubPath:
          type: string
      type: object
    MetricNameCommand:
      example:
        operationCredentialId: 0
      properties:
        operationCredentialId:
          format: int32
          type: integer
      type: object
    MonitoringCredentialsListDto:
      example:
        lokiUrl: lokiUrl
        password: password
        alertManagerUrl: alertManagerUrl
        prometheusUrl: prometheusUrl
        id: 7
        username: username
      properties:
        id:
          format: int32
          type: integer
        username:
          type: string
        password:
          type: string
        prometheusUrl:
          type: string
        lokiUrl:
          type: string
        alertManagerUrl:
          type: string
      type: object
    MonitoringOperationsCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    NetworkPolicies:
      example:
        data:
        - podSelector:
            key: podSelector
          namespace: namespace
          metadataName: metadataName
          age: age
        - podSelector:
            key: podSelector
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/NetworkPolicyDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NetworkPolicyDto:
      example:
        podSelector:
          key: podSelector
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        podSelector:
          additionalProperties:
            type: string
          type: object
        namespace:
          type: string
        age:
          type: string
      type: object
    NodeCommand:
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      type: object
    NodeSearchResponseData:
      example:
        organizationId: 6
        organizationName: organizationName
        metadataName: metadataName
        projectName: projectName
        projectId: 0
      properties:
        metadataName:
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
      type: object
    NodesSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    NodesSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/NodeSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NotificationHistory:
      example:
        data:
        - createdAt: createdAt
          actionStatus: actionStatus
          isDeleted: true
          actionMessage: actionMessage
          category: category
          projectName: projectName
          projectId: 0
          username: username
        - createdAt: createdAt
          actionStatus: actionStatus
          isDeleted: true
          actionMessage: actionMessage
          category: category
          projectName: projectName
          projectId: 0
          username: username
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/NotificationListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NotificationListDto:
      example:
        createdAt: createdAt
        actionStatus: actionStatus
        isDeleted: true
        actionMessage: actionMessage
        category: category
        projectName: projectName
        projectId: 0
        username: username
      properties:
        createdAt:
          type: string
        actionMessage:
          type: string
        actionStatus:
          type: string
        username:
          type: string
        category:
          type: string
        projectName:
          type: string
        projectId:
          format: int32
          type: integer
        isDeleted:
          type: boolean
      type: object
    NotificationSendCommand:
      example:
        actionType: null
        actionStatus: null
        projectType: null
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        actionType:
          $ref: '#/components/schemas/ActionType'
        actionStatus:
          $ref: '#/components/schemas/ActionStatus'
        projectType:
          $ref: '#/components/schemas/ProjectType'
      type: object
    NotifyOwnersCommand:
      example:
        organizationId: 0
      properties:
        organizationId:
          format: int32
          type: integer
      type: object
    NtpCommand:
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    NtpServerCreateDto:
      example:
        address: address
      properties:
        address:
          minLength: 1
          type: string
      required:
      - address
      type: object
    NtpServerListDto:
      example:
        address: address
        id: 5
      properties:
        id:
          format: int32
          type: integer
        address:
          type: string
      type: object
    NtpServersListDto:
      example:
        address: address
        accessProfileName: accessProfileName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        address:
          type: string
        accessProfileName:
          type: string
      type: object
    OpaMakeDefaultCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OpaProfileList:
      example:
        data:
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        - projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpaProfileListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpaProfileListDto:
      example:
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        forbidNodePort: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
        revision: 6
        organizationId: 1
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        createdAt: createdAt
        isDefault: true
        requireProbe: true
        isLocked: true
        name: name
        uniqueServiceSelector: true
        id: 0
        uniqueIngresses: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        allowedRepo:
          items:
            type: string
          type: array
        forbidSpecificTags:
          items:
            type: string
          type: array
        ingressWhitelist:
          items:
            type: string
          type: array
        isLocked:
          type: boolean
        revision:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          type: string
        isDefault:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
      type: object
    OpaProfileLockManagerCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    OpaProfileSyncCommand:
      example:
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectId
      type: object
    OpaProfileUpdateCommand:
      example:
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        requireProbe: true
        name: name
        uniqueServiceSelector: true
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        id: 0
        forbidNodePort: true
        uniqueIngresses: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 50
          minLength: 2
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        allowedRepo:
          items:
            type: string
          type: array
        forbidSpecificTags:
          items:
            type: string
          type: array
        ingressWhitelist:
          items:
            type: string
          type: array
      required:
      - id
      - name
      type: object
    OpenStackNetworkListQuery:
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackProjectId: openStackProjectId
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
      properties:
        openStackUser:
          type: string
        openStackPassword:
          type: string
        openStackUrl:
          type: string
        openStackProjectId:
          type: string
        openStackDomain:
          type: string
        openStackRegion:
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackProjectListQuery:
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          type: string
        openStackPassword:
          type: string
        openStackUrl:
          type: string
        openStackDomain:
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackRegionListQuery:
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          type: string
        openStackPassword:
          type: string
        openStackUrl:
          type: string
        openStackDomain:
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackZoneListQuery:
      example:
        openstackProject: openstackProject
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
      properties:
        openStackUser:
          type: string
        openStackPassword:
          type: string
        openStackUrl:
          type: string
        openStackDomain:
          type: string
        openStackRegion:
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        openstackProject:
          type: string
      type: object
    OpenTicketCommand:
      example:
        ticketId: ticketId
      properties:
        ticketId:
          minLength: 1
          type: string
      required:
      - ticketId
      type: object
    OpenstackComputeQuotaDto:
      example:
        maxTotalCores: 5
        maxTotalInstances: 1
        usedRamSize: 5
        maxServerGroups: 6
        usedServerGroups: 9
        maxTotalRamSize: 0
        usedCpuSize: 2
        usedInstanceSize: 7
      properties:
        maxTotalRamSize:
          format: int64
          type: integer
        maxServerGroups:
          format: int64
          type: integer
        maxTotalInstances:
          format: int64
          type: integer
        maxTotalCores:
          format: int64
          type: integer
        usedRamSize:
          format: int64
          type: integer
        usedCpuSize:
          format: int64
          type: integer
        usedInstanceSize:
          format: int64
          type: integer
        usedServerGroups:
          format: int64
          type: integer
      type: object
    OpenstackCredentialList:
      example:
        data:
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          id: 0
          organizationName: organizationName
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpenstackCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpenstackCredentialsForProjectDto:
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackUser: openStackUser
        openStackVolumeType: openStackVolumeType
        openStackProject: openStackProject
        openStackTenantId: openStackTenantId
        openStackDomain: openStackDomain
        openStackInternalSubnetId: openStackInternalSubnetId
        openStackAvailabilityZone: openStackAvailabilityZone
        openStackRegion: openStackRegion
        openStackImportNetwork: true
        openStackPublicNetwork: openStackPublicNetwork
      properties:
        openStackUser:
          type: string
        openStackDomain:
          type: string
        openStackPassword:
          type: string
        openStackProject:
          type: string
        openStackRegion:
          type: string
        openStackUrl:
          type: string
        openStackPublicNetwork:
          type: string
        openStackAvailabilityZone:
          type: string
        openStackVolumeType:
          type: string
        openStackTenantId:
          type: string
        openStackImportNetwork:
          type: boolean
        openStackInternalSubnetId:
          type: string
        applicationCredEnabled:
          type: boolean
      type: object
    OpenstackCredentialsListDto:
      example:
        volumeType: volumeType
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        project: project
        availabilityZone: availabilityZone
        publicNetwork: publicNetwork
        organizationId: 1
        createdAt: createdAt
        isLocked: true
        id: 0
        organizationName: organizationName
        internalSubnetId: internalSubnetId
        lastModifiedBy: lastModifiedBy
        importNetwork: true
        isAdmin: true
        url: url
        isDefault: true
        createdBy: createdBy
        domain: domain
        name: name
        tenantId: tenantId
        lastModified: lastModified
        region: region
        continentName: continentName
        user: user
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        user:
          type: string
        url:
          type: string
        project:
          type: string
        domain:
          type: string
        region:
          type: string
        publicNetwork:
          type: string
        importNetwork:
          type: boolean
        tenantId:
          type: string
        availabilityZone:
          type: string
        volumeType:
          type: string
        internalSubnetId:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          type: string
        continentName:
          type: string
        isAdmin:
          type: boolean
      type: object
    OpenstackFlavorList:
      example:
        data:
        - name: name
          cpu: 6
          description: description
          ram: 0
        - name: name
          cpu: 6
          description: description
          ram: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpenstackFlavorListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpenstackFlavorListDto:
      example:
        name: name
        cpu: 6
        description: description
        ram: 0
      properties:
        ram:
          format: int64
          type: integer
        cpu:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
      type: object
    OpenstackImageList:
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonStringBasedDropdownDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OpenstackNetworkDto:
      example:
        routerUsed: 6
        floatingIpLimit: 1
        securityGroupRuleLimit: 1
        networkLimit: 1
        securityGroupRuleUsed: 6
        routerLimit: 6
        portLimit: 4
        securityGroupUsed: 8
        subnetUsed: 9
        securityGroupLimit: 7
        portUsed: 9
        subnetLimit: 1
        floatingIpUsed: 9
        networkUsed: 5
      properties:
        networkLimit:
          format: int64
          type: integer
        subnetLimit:
          format: int64
          type: integer
        floatingIpLimit:
          format: int64
          type: integer
        routerLimit:
          format: int64
          type: integer
        securityGroupLimit:
          format: int64
          type: integer
        securityGroupRuleLimit:
          format: int64
          type: integer
        portLimit:
          format: int64
          type: integer
        networkUsed:
          format: int64
          type: integer
        subnetUsed:
          format: int64
          type: integer
        floatingIpUsed:
          format: int64
          type: integer
        routerUsed:
          format: int64
          type: integer
        securityGroupUsed:
          format: int64
          type: integer
        portUsed:
          format: int64
          type: integer
        securityGroupRuleUsed:
          format: int64
          type: integer
      type: object
    OpenstackQuotaList:
      example:
        compute:
          maxTotalCores: 5
          maxTotalInstances: 1
          usedRamSize: 5
          maxServerGroups: 6
          usedServerGroups: 9
          maxTotalRamSize: 0
          usedCpuSize: 2
          usedInstanceSize: 7
        volume:
          usedVolumeSize: 2
          maxCountVolumeSize: 4
          countVolumeSize: 7
          maxTotalVolumeSize: 3
        network:
          routerUsed: 6
          floatingIpLimit: 1
          securityGroupRuleLimit: 1
          networkLimit: 1
          securityGroupRuleUsed: 6
          routerLimit: 6
          portLimit: 4
          securityGroupUsed: 8
          subnetUsed: 9
          securityGroupLimit: 7
          portUsed: 9
          subnetLimit: 1
          floatingIpUsed: 9
          networkUsed: 5
      properties:
        compute:
          $ref: '#/components/schemas/OpenstackComputeQuotaDto'
        volume:
          $ref: '#/components/schemas/OpenstackVolumeQuotaDto'
        network:
          $ref: '#/components/schemas/OpenstackNetworkDto'
      type: object
    OpenstackQuotasCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OpenstackSubnetListQuery:
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackProjectId: openStackProjectId
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        openStackProject: openStackProject
      properties:
        openStackUser:
          type: string
        openStackPassword:
          type: string
        openStackUrl:
          type: string
        openStackProject:
          type: string
        openStackProjectId:
          type: string
        openStackDomain:
          type: string
        openStackRegion:
          type: string
        applicationCredEnabled:
          type: boolean
      type: object
    OpenstackVolumeQuotaDto:
      example:
        usedVolumeSize: 2
        maxCountVolumeSize: 4
        countVolumeSize: 7
        maxTotalVolumeSize: 3
      properties:
        maxTotalVolumeSize:
          format: int64
          type: integer
        usedVolumeSize:
          format: int64
          type: integer
        maxCountVolumeSize:
          format: int64
          type: integer
        countVolumeSize:
          format: int64
          type: integer
      type: object
    OpenstackVolumeTypeListQuery:
      example:
        openstackProject: openstackProject
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        openStackUser:
          type: string
        openStackPassword:
          type: string
        openStackUrl:
          type: string
        openStackDomain:
          type: string
        openStackRegion:
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        openstackProject:
          type: string
      type: object
    OperationCredentialLockManagerCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    OperationCredentials:
      example:
        data:
        - organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          prometheusUrl: prometheusUrl
          rules:
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          organizationId: 6
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          prometheusUsername: prometheusUsername
          id: 0
          lastModified: lastModified
          prometheusPassword: prometheusPassword
        - organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          prometheusUrl: prometheusUrl
          rules:
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          organizationId: 6
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          prometheusUsername: prometheusUsername
          id: 0
          lastModified: lastModified
          prometheusPassword: prometheusPassword
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/OperationCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OperationCredentialsCreateCommand:
      example:
        organizationId: 0
        name: name
        prometheusUrl: prometheusUrl
        prometheusUsername: prometheusUsername
        prometheusPassword: prometheusPassword
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        prometheusUsername:
          minLength: 1
          type: string
        prometheusPassword:
          minLength: 1
          type: string
        prometheusUrl:
          minLength: 1
          type: string
        organizationId:
          format: int32
          type: integer
      required:
      - name
      - prometheusPassword
      - prometheusUrl
      - prometheusUsername
      type: object
    OperationCredentialsForOrganizationEntity:
      example:
        isDefault: true
        operationCredentialId: 0
        name: name
      properties:
        operationCredentialId:
          format: int32
          type: integer
        name:
          type: string
        isDefault:
          type: boolean
      type: object
    OperationCredentialsListDto:
      example:
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        prometheusUrl: prometheusUrl
        rules:
        - prometheusRuleName: prometheusRuleName
          prometheusRuleId: 1
        - prometheusRuleName: prometheusRuleName
          prometheusRuleId: 1
        organizationId: 6
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        prometheusUsername: prometheusUsername
        id: 0
        lastModified: lastModified
        prometheusPassword: prometheusPassword
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        prometheusUsername:
          type: string
        prometheusPassword:
          type: string
        prometheusUrl:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        isLocked:
          type: boolean
        rules:
          items:
            $ref: '#/components/schemas/SimplePrometheusEntity'
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
      type: object
    OperationCredentialsMakeDefaultCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OrganizationCreateCommand:
      example:
        country: country
        discountRate: 0.8008281904610115
        adminCloudCredentialId: 6
        address: address
        phone: phone
        billingEmail: billingEmail
        city: city
        name: name
        fullName: fullName
        isEligibleUpdateSubscription: true
        email: email
        vatNumber: vatNumber
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        fullName:
          maxLength: 200
          minLength: 3
          type: string
        phone:
          type: string
        email:
          type: string
        billingEmail:
          type: string
        address:
          type: string
        country:
          type: string
        city:
          type: string
        vatNumber:
          type: string
        discountRate:
          format: double
          type: number
        isEligibleUpdateSubscription:
          type: boolean
        adminCloudCredentialId:
          format: int32
          type: integer
      required:
      - fullName
      - name
      type: object
    OrganizationDetailsDto:
      example:
        country: country
        discountRate: 9.301444243932576
        address: address
        projects: 1
        city: city
        partnerName: partnerName
        boundRules:
        - prometheusRuleName: prometheusRuleName
          ruleDiscountRate: 2.027123023002322
          prometheusRuleId: 3
        - prometheusRuleName: prometheusRuleName
          ruleDiscountRate: 2.027123023002322
          prometheusRuleId: 3
        fullName: fullName
        cloudCredentials: 5
        isEligibleUpdateSubscription: true
        users: 6
        createdAt: createdAt
        isReadOnly: true
        servers: 5
        partner:
          domain: domain
          name: name
          link: link
          logo: logo
          id: 7
        billingEmail: billingEmail
        phone: phone
        isLocked: true
        name: name
        id: 0
        partnerId: 2
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        fullName:
          type: string
        email:
          type: string
        billingEmail:
          type: string
        phone:
          type: string
        country:
          type: string
        city:
          type: string
        vatNumber:
          type: string
        address:
          type: string
        isEligibleUpdateSubscription:
          type: boolean
        isLocked:
          type: boolean
        isReadOnly:
          type: boolean
        users:
          format: int32
          type: integer
        projects:
          format: int32
          type: integer
        servers:
          format: int32
          type: integer
        cloudCredentials:
          format: int32
          type: integer
        createdAt:
          type: string
        partnerId:
          format: int32
          type: integer
        partnerName:
          type: string
        partner:
          $ref: '#/components/schemas/PartnerDetailsForOrganizationsDto'
        discountRate:
          format: double
          type: number
        boundRules:
          items:
            $ref: '#/components/schemas/PrometheusEntity'
          type: array
      type: object
    OrganizationDto:
      example:
        organizationId: 0
        isBound: true
      properties:
        organizationId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    OrganizationEntityForDashboard:
      example:
        name: name
        id: 0
        users: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        users:
          format: int32
          type: integer
      type: object
    OrganizationNameCheckerCommand:
      example:
        name: name
      properties:
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    OrganizationSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    OrganizationSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OrganizationSubscriptionDto:
      example:
        organizationId: 6
        stripeSubscriptionId: stripeSubscriptionId
        organizationName: organizationName
        invoices:
        - isPaid: true
          endDate: 2000-01-23T04:56:07.000+00:00
          documentNumber: documentNumber
          price: 2.3021358869347655
          dueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          stripeInvoiceId: stripeInvoiceId
          id: 5
          startDate: 2000-01-23T04:56:07.000+00:00
        - isPaid: true
          endDate: 2000-01-23T04:56:07.000+00:00
          documentNumber: documentNumber
          price: 2.3021358869347655
          dueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          stripeInvoiceId: stripeInvoiceId
          id: 5
          startDate: 2000-01-23T04:56:07.000+00:00
        subscriptionType: subscriptionType
        endDate: 2000-01-23T04:56:07.000+00:00
        subscriptionName: subscriptionName
        id: 0
        subscriptionId: 1
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        subscriptionId:
          format: int32
          type: integer
        stripeSubscriptionId:
          type: string
        subscriptionType:
          type: string
        subscriptionName:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        invoices:
          items:
            $ref: '#/components/schemas/InvoiceDto'
          type: array
      type: object
    OrganizationSubscriptionList:
      example:
        data:
        - organizationId: 6
          stripeSubscriptionId: stripeSubscriptionId
          organizationName: organizationName
          invoices:
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          subscriptionType: subscriptionType
          endDate: 2000-01-23T04:56:07.000+00:00
          subscriptionName: subscriptionName
          id: 0
          subscriptionId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
        - organizationId: 6
          stripeSubscriptionId: stripeSubscriptionId
          organizationName: organizationName
          invoices:
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          - isPaid: true
            endDate: 2000-01-23T04:56:07.000+00:00
            documentNumber: documentNumber
            price: 2.3021358869347655
            dueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            organizationSubscriptionId: 5
            requiredPaymentAction: true
            stripeInvoiceId: stripeInvoiceId
            id: 5
            startDate: 2000-01-23T04:56:07.000+00:00
          subscriptionType: subscriptionType
          endDate: 2000-01-23T04:56:07.000+00:00
          subscriptionName: subscriptionName
          id: 0
          subscriptionId: 1
          startDate: 2000-01-23T04:56:07.000+00:00
        totalCount: 7
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationSubscriptionDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OrganizationsList:
      example:
        data:
        - country: country
          discountRate: 9.301444243932576
          address: address
          projects: 1
          city: city
          partnerName: partnerName
          boundRules:
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          fullName: fullName
          cloudCredentials: 5
          isEligibleUpdateSubscription: true
          users: 6
          createdAt: createdAt
          isReadOnly: true
          servers: 5
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 7
          billingEmail: billingEmail
          phone: phone
          isLocked: true
          name: name
          id: 0
          partnerId: 2
          email: email
          vatNumber: vatNumber
        - country: country
          discountRate: 9.301444243932576
          address: address
          projects: 1
          city: city
          partnerName: partnerName
          boundRules:
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          fullName: fullName
          cloudCredentials: 5
          isEligibleUpdateSubscription: true
          users: 6
          createdAt: createdAt
          isReadOnly: true
          servers: 5
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 7
          billingEmail: billingEmail
          phone: phone
          isLocked: true
          name: name
          id: 0
          partnerId: 2
          email: email
          vatNumber: vatNumber
        totalCount: 4
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationDetailsDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PackageAutocompleteDto:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    Parameter:
      example:
        label: label
        value: value
        operator: operator
      properties:
        label:
          type: string
        operator:
          type: string
        value:
          type: string
      type: object
    PartnerDetailsDto:
      example:
        whiteListDomains:
        - name: name
          id: 6
        - name: name
          id: 6
        country: country
        address: address
        city: city
        link: link
        paymentEnabled: true
        phone: phone
        domain: domain
        name: name
        organizations:
        - name: name
          id: 0
        - name: name
          id: 0
        logo: logo
        requiredUserApproval: true
        id: 0
        allowRegistration: true
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        link:
          type: string
        domain:
          type: string
        country:
          type: string
        city:
          type: string
        vatNumber:
          type: string
        address:
          type: string
        logo:
          type: string
        phone:
          type: string
        email:
          type: string
        paymentEnabled:
          type: boolean
        allowRegistration:
          type: boolean
        requiredUserApproval:
          type: boolean
        organizations:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        whiteListDomains:
          items:
            $ref: '#/components/schemas/WhiteListDomainDto'
          type: array
      type: object
    PartnerDetailsForOrganizationsDto:
      example:
        domain: domain
        name: name
        link: link
        logo: logo
        id: 7
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        link:
          type: string
        domain:
          type: string
        logo:
          type: string
      type: object
    PartnerDetailsForSubscription:
      example:
        name: name
        link: link
        logo: logo
        id: 3
      properties:
        name:
          type: string
        logo:
          type: string
        link:
          type: string
        id:
          format: int32
          type: integer
      type: object
    PartnerDetailsForUserDto:
      example:
        name: name
        link: link
        logo: logo
        id: 1
      properties:
        name:
          type: string
        logo:
          type: string
        link:
          type: string
        id:
          format: int32
          type: integer
      type: object
    PartnerEntity:
      example:
        partnerName: partnerName
        partnerId: 0
      properties:
        partnerId:
          format: int32
          type: integer
        partnerName:
          type: string
      type: object
    PartnerRecordDto:
      example:
        imageUrl: imageUrl
        id: 0
        allowRegistration: true
        paymentEnabled: true
      properties:
        imageUrl:
          type: string
        id:
          format: int32
          type: integer
        paymentEnabled:
          type: boolean
        allowRegistration:
          type: boolean
      type: object
    PartnersList:
      example:
        data:
        - whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          paymentEnabled: true
          phone: phone
          domain: domain
          name: name
          organizations:
          - name: name
            id: 0
          - name: name
            id: 0
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
        - whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          paymentEnabled: true
          phone: phone
          domain: domain
          name: name
          organizations:
          - name: name
            id: 0
          - name: name
            id: 0
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartnerDetailsDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PartnersSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    PartnersSearchList:
      example:
        data:
        - name: name
          logo: logo
          id: 0
        - name: name
          logo: logo
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartnersSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PartnersSearchResponseData:
      example:
        name: name
        logo: logo
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        logo:
          type: string
      type: object
    PatchConfigMapCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchCrdCommand:
      example:
        name: name
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      - projectId
      - yaml
      type: object
    PatchCronJobCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchDeploymentCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchIngressCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchJobCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchNodeCommand:
      example:
        name: name
        projectId: 0
        parameters:
        - mode: mode
          value: value
          key: key
        - mode: mode
          value: value
          key: key
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/PatchNodeLabelsDto'
          type: array
      required:
      - name
      - projectId
      type: object
    PatchNodeLabelsDto:
      example:
        mode: mode
        value: value
        key: key
      properties:
        key:
          maxLength: 63
          minLength: 1
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        value:
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        mode:
          minLength: 1
          type: string
      required:
      - key
      - mode
      type: object
    PatchPdbCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchPodCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchPvcCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchSecretCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PatchStsCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        yaml:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      - yaml
      type: object
    PayInvoiceCommand:
      example:
        invoiceId: invoiceId
      properties:
        invoiceId:
          type: string
      type: object
    PodDisruptionDto:
      example:
        createdAt: createdAt
        allowedDisruptions: "{}"
        minAvailable: "{}"
        name: name
        namespace: namespace
        maxAvailable: "{}"
      properties:
        name:
          type: string
        namespace:
          type: string
        minAvailable:
          type: object
        maxAvailable:
          type: object
        allowedDisruptions:
          type: object
        createdAt:
          type: string
      type: object
    PodDisruptions:
      example:
        data:
        - createdAt: createdAt
          allowedDisruptions: "{}"
          minAvailable: "{}"
          name: name
          namespace: namespace
          maxAvailable: "{}"
        - createdAt: createdAt
          allowedDisruptions: "{}"
          minAvailable: "{}"
          name: name
          namespace: namespace
          maxAvailable: "{}"
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PodDisruptionDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PodListDto:
      example:
        phase: phase
        container:
        - container
        - container
        node: node
        restartCount: 0
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          type: string
        restartCount:
          format: int32
          type: integer
        namespace:
          type: string
        node:
          type: string
        age:
          type: string
        status:
          type: string
        phase:
          type: string
        container:
          items:
            type: string
          type: array
      type: object
    Pods:
      example:
        data:
        - phase: phase
          container:
          - container
          - container
          node: node
          restartCount: 0
          namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - phase: phase
          container:
          - container
          - container
          node: node
          restartCount: 0
          namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/PodListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PodsSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    PodsSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrivateSubscriptionList:
      example:
        isEligibleToSwitch: true
        activeSubscriptionStatus: activeSubscriptionStatus
        data:
        - serverLimit: 1
          yearlyPrice: 7.061401241503109
          isDeprecated: true
          trialDays: 2
          cloudCredentialLimit: 5
          exceededCloudCredential: true
          exceededUser: true
          description: description
          monthlyPrice: 2.3021358869347655
          isActive: true
          isDemo: true
          isYearly: true
          projectLimit: 6
          partner:
            name: name
            link: link
            logo: logo
            id: 3
          exceededProject: true
          tcuPrice: 9.301444243932576
          name: name
          exceededServers: true
          isEnterprise: true
          currency: currency
          id: 0
          userLimit: 5
        - serverLimit: 1
          yearlyPrice: 7.061401241503109
          isDeprecated: true
          trialDays: 2
          cloudCredentialLimit: 5
          exceededCloudCredential: true
          exceededUser: true
          description: description
          monthlyPrice: 2.3021358869347655
          isActive: true
          isDemo: true
          isYearly: true
          projectLimit: 6
          partner:
            name: name
            link: link
            logo: logo
            id: 3
          exceededProject: true
          tcuPrice: 9.301444243932576
          name: name
          exceededServers: true
          isEnterprise: true
          currency: currency
          id: 0
          userLimit: 5
        totalCount: 4
      properties:
        data:
          items:
            $ref: '#/components/schemas/ListForPartnersDto'
          type: array
        totalCount:
          format: int32
          type: integer
        isEligibleToSwitch:
          type: boolean
        activeSubscriptionStatus:
          type: string
      type: object
    ProblemDetails:
      additionalProperties:
        type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
      type: object
    ProjectActionUpdateDto:
      example:
        estimatedTime: estimatedTime
        jobUrl: jobUrl
        operation: operation
      properties:
        operation:
          type: string
        jobUrl:
          type: string
        estimatedTime:
          type: string
      type: object
    ProjectActionVisibilityDto:
      example:
        repair:
          reasons:
          - reasons
          - reasons
          enable: true
        enableFullSpot:
          reasons:
          - reasons
          - reasons
          enable: true
        enableAutoscaler:
          reasons:
          - reasons
          - reasons
          enable: true
        disableSpotVm:
          reasons:
          - reasons
          - reasons
          enable: true
        unlock:
          reasons:
          - reasons
          - reasons
          enable: true
        upgrade:
          reasons:
          - reasons
          - reasons
          enable: true
        enableOpa:
          reasons:
          - reasons
          - reasons
          enable: true
        vmRepair:
          reasons:
          - reasons
          - reasons
          enable: true
        commit:
          reasons:
          - reasons
          - reasons
          enable: true
        disableFullSpot:
          reasons:
          - reasons
          - reasons
          enable: true
        enableSpotVm:
          reasons:
          - reasons
          - reasons
          enable: true
        monitoring:
          reasons:
          - reasons
          - reasons
          enable: true
        enableSpotWorker:
          reasons:
          - reasons
          - reasons
          enable: true
        disableBackup:
          reasons:
          - reasons
          - reasons
          enable: true
        disableSpotWorker:
          reasons:
          - reasons
          - reasons
          enable: true
        disableOpa:
          reasons:
          - reasons
          - reasons
          enable: true
        lock:
          reasons:
          - reasons
          - reasons
          enable: true
        disableAutoscaler:
          reasons:
          - reasons
          - reasons
          enable: true
        vmCommit:
          reasons:
          - reasons
          - reasons
          enable: true
        enableBackup:
          reasons:
          - reasons
          - reasons
          enable: true
      properties:
        commit:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        repair:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        upgrade:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        monitoring:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        enableBackup:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        disableBackup:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        enableOpa:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        disableOpa:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        enableAutoscaler:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        disableAutoscaler:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        vmRepair:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        vmCommit:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        lock:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        unlock:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        enableSpotWorker:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        disableSpotWorker:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        enableFullSpot:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        disableFullSpot:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        enableSpotVm:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
        disableSpotVm:
          $ref: '#/components/schemas/ProjectButtonStatusDto'
      type: object
    ProjectAppDetailsDto:
      example:
        projectAppParams:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        catalogAppName: catalogAppName
        values: values
        autoSync: true
        version: version
        catalogName: catalogName
        appRepoName: appRepoName
        catalogId: 6
        releaseNotes: releaseNotes
        helmResult: helmResult
        hasJsonSchema: true
        name: name
        namespace: namespace
        logo: logo
        id: 0
        projectName: projectName
        projectId: 1
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          type: string
        status:
          type: string
        version:
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          type: string
        catalogAppName:
          type: string
        appRepoName:
          type: string
        logo:
          type: string
        values:
          type: string
        autoSync:
          type: boolean
        releaseNotes:
          type: string
        projectName:
          type: string
        helmResult:
          type: string
        projectId:
          format: int32
          type: integer
        hasJsonSchema:
          type: boolean
        projectAppParams:
          items:
            $ref: '#/components/schemas/ProjectAppParamDto'
          type: array
      type: object
    ProjectAppDto:
      example:
        isLocked: true
        name: name
        namespace: namespace
        id: 5
        projectName: projectName
        projectId: 5
        version: version
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          type: string
        projectName:
          type: string
        projectId:
          format: int32
          type: integer
        version:
          type: string
        isLocked:
          type: boolean
        status:
          type: string
      type: object
    ProjectAppList:
      example:
        data:
        - catalogAppName: catalogAppName
          created: created
          lastModifiedBy: lastModifiedBy
          autoSync: true
          version: version
          catalogAppId: 1
          catalogName: catalogName
          appRepoName: appRepoName
          catalogId: 6
          createdBy: createdBy
          name: name
          namespace: namespace
          logo: logo
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 5
          status: status
        - catalogAppName: catalogAppName
          created: created
          lastModifiedBy: lastModifiedBy
          autoSync: true
          version: version
          catalogAppId: 1
          catalogName: catalogName
          appRepoName: appRepoName
          catalogId: 6
          createdBy: createdBy
          name: name
          namespace: namespace
          logo: logo
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 5
          status: status
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectAppListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectAppListDto:
      example:
        catalogAppName: catalogAppName
        created: created
        lastModifiedBy: lastModifiedBy
        autoSync: true
        version: version
        catalogAppId: 1
        catalogName: catalogName
        appRepoName: appRepoName
        catalogId: 6
        createdBy: createdBy
        name: name
        namespace: namespace
        logo: logo
        id: 0
        lastModified: lastModified
        projectName: projectName
        projectId: 5
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          type: string
        status:
          type: string
        version:
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          type: string
        catalogAppName:
          type: string
        catalogAppId:
          format: int32
          type: integer
        appRepoName:
          type: string
        logo:
          type: string
        autoSync:
          type: boolean
        created:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
      type: object
    ProjectAppParamDto:
      example:
        isEditableWhenInstalling: true
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        key:
          type: string
        value:
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
      type: object
    ProjectAppParamsDto:
      example:
        value: value
        key: key
      properties:
        key:
          minLength: 1
          type: string
        value:
          type: string
      required:
      - key
      type: object
    ProjectButtonStatusDto:
      example:
        reasons:
        - reasons
        - reasons
        enable: true
      properties:
        enable:
          type: boolean
        reasons:
          items:
            type: string
          type: array
      type: object
    ProjectChartDto:
      example:
        updating:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        pending:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        failed:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        totalCount: 5
        succeeded:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
      properties:
        succeeded:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          type: array
        pending:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          type: array
        updating:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          type: array
        totalCount:
          format: int32
          type: integer
        failed:
          items:
            $ref: '#/components/schemas/ProjectCommonRecordDto'
          type: array
      type: object
    ProjectCommonRecordDto:
      example:
        expiredAt: expiredAt
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        expiredAt:
          type: string
      type: object
    ProjectDetailsForServersDto:
      example:
        isKubevapEnabled: true
        spotEnabled: true
        alertsTotalCount: 6
        isOpaEnabled: true
        projectRevision: 6
        opaProfileId: 6
        availabilityZones:
        - availabilityZones
        - availabilityZones
        hasAlertingProfile: true
        organizationId: 2
        diskSize: 3.0937452626664474
        hasNextVersion: true
        usedRam: 1
        cloudType: cloudType
        cloudId: 9
        isLocked: true
        accessProfileName: accessProfileName
        kubernetesProfileId: 6
        minSize: 6
        bastion: 5
        worker: 5
        usedCpu: 1
        vmVolumeSizeLimit: 4
        isAutoscalingEnabled: true
        isAutoUpgrade: true
        isKubernetes: true
        kubernetesProfileName: kubernetesProfileName
        cloudProviderMessage: cloudProviderMessage
        accessIp: accessIp
        organizationName: organizationName
        hasSelectedFlavors: true
        cpuLimit: 4
        warningMessage: warningMessage
        quotaId: 3
        vmUsedCpu: 5
        allowSpotWorkers: true
        maxSpotPrice: 6.878052220127876
        vmRamLimit: 1
        isKubernetesCurrentVersionKubevapEnabled: true
        flavor: flavor
        vmUsedRam: 9
        usedDiskSize: 6
        vmUsedVolumeSize: 9
        failureReason: failureReason
        kubernetesCurrentVersion: kubernetesCurrentVersion
        allowFullSpotKubernetes: true
        projectName: projectName
        projectCloudRevision: 9
        projectId: 2
        cloudCredentialRevision: 6
        accessProfileId: 3
        maxSize: 3
        totalCount: 0
        autoscalingGroupName: autoscalingGroupName
        kubeCurrentVersion: kubeCurrentVersion
        quotaMessage: quotaMessage
        expiredAt: expiredAt
        alertingProfileName: alertingProfileName
        hasNfsServer: true
        projectHealth: projectHealth
        totalHourlyCost: 5.944895607614016
        ramLimit: 7
        opaProfileName: opaProfileName
        s3CredentialId: 2
        isDeprecated: true
        isAllReady: true
        allowSpotVMs: true
        vmCpuLimit: 7
        isMonitoringEnabled: true
        isAllFailedUpgrade: true
        diskSizeLimit: 1
        masterReady: 7
        hasKubeConfigFile: true
        master: 1
        projectStatus: projectStatus
        alertingProfileId: 1
        deleteOnExpiration: true
        cloudName: cloudName
        accessProfileRevision: 8
        isBackupEnabled: true
        hasExpirationWarning: true
        hypervisors:
        - hypervisors
        - hypervisors
        certificationExpiredAt: certificationExpiredAt
        isMaintenanceModeEnabled: true
      properties:
        isAllReady:
          type: boolean
        isAllFailedUpgrade:
          type: boolean
        totalCount:
          format: int32
          type: integer
        alertsTotalCount:
          format: int32
          type: integer
        master:
          format: int32
          type: integer
        worker:
          format: int32
          type: integer
        bastion:
          format: int32
          type: integer
        projectStatus:
          type: string
        projectName:
          type: string
        accessIp:
          type: string
        projectId:
          format: int32
          type: integer
        masterReady:
          format: int32
          type: integer
        cloudType:
          type: string
        cloudName:
          type: string
        cloudId:
          format: int32
          type: integer
        quotaId:
          format: int32
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        kubeCurrentVersion:
          type: string
        kubernetesCurrentVersion:
          type: string
        hasNextVersion:
          type: boolean
        isKubernetes:
          type: boolean
        isBackupEnabled:
          type: boolean
        isLocked:
          type: boolean
        isAutoUpgrade:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        isOpaEnabled:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        hasSelectedFlavors:
          type: boolean
        hasAlertingProfile:
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        isDeprecated:
          type: boolean
        cpuLimit:
          format: int64
          type: integer
        ramLimit:
          format: int64
          type: integer
        diskSizeLimit:
          format: int64
          type: integer
        usedCpu:
          format: int64
          type: integer
        usedRam:
          format: int64
          type: integer
        usedDiskSize:
          format: int64
          type: integer
        vmCpuLimit:
          format: int64
          type: integer
        vmRamLimit:
          format: int64
          type: integer
        vmVolumeSizeLimit:
          format: int64
          type: integer
        vmUsedCpu:
          format: int64
          type: integer
        vmUsedRam:
          format: int64
          type: integer
        vmUsedVolumeSize:
          format: int64
          type: integer
        projectRevision:
          format: int32
          type: integer
        accessProfileRevision:
          format: int32
          type: integer
        projectCloudRevision:
          format: int32
          type: integer
        cloudCredentialRevision:
          format: int32
          type: integer
        accessProfileName:
          type: string
        accessProfileId:
          format: int32
          type: integer
        kubernetesProfileName:
          type: string
        kubernetesProfileId:
          format: int32
          type: integer
        alertingProfileName:
          type: string
        projectHealth:
          type: string
        alertingProfileId:
          format: int32
          type: integer
        s3CredentialId:
          format: int32
          type: integer
        quotaMessage:
          type: string
        cloudProviderMessage:
          type: string
        expiredAt:
          type: string
        deleteOnExpiration:
          type: boolean
        certificationExpiredAt:
          type: string
        opaProfileId:
          format: int32
          type: integer
        opaProfileName:
          type: string
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          type: number
        isKubevapEnabled:
          type: boolean
        isKubernetesCurrentVersionKubevapEnabled:
          type: boolean
        failureReason:
          type: string
        warningMessage:
          type: string
        totalHourlyCost:
          format: double
          type: number
        autoscalingGroupName:
          type: string
        minSize:
          format: int32
          type: integer
        maxSize:
          format: int32
          type: integer
        diskSize:
          format: double
          type: number
        flavor:
          type: string
        spotEnabled:
          type: boolean
        isAutoscalingEnabled:
          type: boolean
        hasExpirationWarning:
          type: boolean
        hasNfsServer:
          type: boolean
        availabilityZones:
          items:
            type: string
          type: array
        hypervisors:
          items:
            type: string
          type: array
      type: object
    ProjectDetailsForVmsDto:
      example:
        organizationName: organizationName
        hasSelectedFlavors: true
        allowSpotVMs: true
        cloudCredentialRevision: 1
        availabilityZones:
        - availabilityZones
        - availabilityZones
        allowSpotWorkers: true
        maxSpotPrice: 6.84685269835264
        organizationId: 1
        projectStatus: projectStatus
        cloudType: cloudType
        cloudName: cloudName
        cloudId: 7
        isLocked: true
        allowFullSpotKubernetes: true
        hypervisors:
        - hypervisors
        - hypervisors
        totalHourlyCost: 7.457744773683766
        projectName: projectName
        projectCloudRevision: 1
        projectId: 4
        isMaintenanceModeEnabled: true
      properties:
        projectStatus:
          type: string
        projectName:
          type: string
        projectId:
          format: int32
          type: integer
        cloudType:
          type: string
        cloudName:
          type: string
        cloudId:
          format: int32
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        isLocked:
          type: boolean
        hasSelectedFlavors:
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        projectCloudRevision:
          format: int32
          type: integer
        cloudCredentialRevision:
          format: int32
          type: integer
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          type: number
        totalHourlyCost:
          format: double
          type: number
        availabilityZones:
          items:
            type: string
          type: array
        hypervisors:
          items:
            type: string
          type: array
      type: object
    ProjectDto:
      example:
        projectName: projectName
        projectId: 6
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
      type: object
    ProjectExtendLifeTimeCommand:
      example:
        deleteOnExpiration: true
        expireAt: 2000-01-23T04:56:07.000+00:00
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        expireAt:
          format: date-time
          type: string
        deleteOnExpiration:
          type: boolean
      required:
      - projectId
      type: object
    ProjectForListDto:
      example:
        flavors:
        - flavors
        - flavors
        boundUsers:
        - userName: userName
          userId: userId
        - userName: userName
          userId: userId
        isKubevapEnabled: true
        taikunLBFlavor: taikunLBFlavor
        isOpaEnabled: true
        s3Region: s3Region
        routerIdStartRange: 4
        privateIp: privateIp
        opaProfile:
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 3
        createdAt: createdAt
        taikunLBPublicKey: taikunLBPublicKey
        s3Endpoint: s3Endpoint
        cloudType: cloudType
        s3AccessKeyId: s3AccessKeyId
        isLocked: true
        s3BucketName: s3BucketName
        googleProjectId: googleProjectId
        id: 0
        bastion: 5
        updatedAt: 2000-01-23T04:56:07.000+00:00
        isAutoscalingEnabled: true
        isAutoUpgrade: true
        isKubernetes: true
        taikunPublicSSHKey: taikunPublicSSHKey
        imageName: imageName
        hasSelectedFlavors: true
        organizationName: organizationName
        accessIp: accessIp
        quotaId: 5
        cloudCredentialName: cloudCredentialName
        name: name
        cloudCredentialId: 9
        kubernetesCurrentVersion: kubernetesCurrentVersion
        opaProfileRevision: 7
        status: status
        isDeleteCluster: true
        awsProjectAZSubnets:
        - zone: zone
          privateIp: privateIp
          publicIp: publicIp
        - zone: zone
          privateIp: privateIp
          publicIp: publicIp
        totalServersCount: 4
        taikunLBPrivateKey: taikunLBPrivateKey
        accessProfile:
          organizationId: 1
          allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          organizationName: organizationName
          httpProxy: httpProxy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          name: name
          id: 1
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
          revision: 1
          sshUsers:
          - sshPublicKey: sshPublicKey
            isDeleted: true
            name: name
            id: 6
          - sshPublicKey: sshPublicKey
            isDeleted: true
            name: name
            id: 6
        tanzuReleaseVersion: tanzuReleaseVersion
        nfsDiskSize: 9
        jobUrl: jobUrl
        cidr: cidr
        taikunPrivateSSHKey: taikunPrivateSSHKey
        kubesprayTargetVersion: kubesprayTargetVersion
        routerIdEndRange: 5
        kubernetesTargetVersion: kubernetesTargetVersion
        netMask: 9
        isMonitoringEnabled: true
        health: health
        kubesprayCurrentVersion: kubesprayCurrentVersion
        publicIp: publicIp
        masterReady: 1
        hasKubeConfigFile: true
        token: token
        master: 6
        monitoringCredential:
          lokiUrl: lokiUrl
          password: password
          alertManagerUrl: alertManagerUrl
          prometheusUrl: prometheusUrl
          id: 7
          username: username
        kubernetesProfiles:
          organizationId: 1
          proxmoxStorage: proxmoxStorage
          organizationName: organizationName
          octaviaEnabled: true
          isLocked: true
          name: name
          exposeNodePortOnBastion: true
          allowSchedulingOnMaster: true
          id: 7
          uniqueClusterName: true
          taikunLBEnabled: true
          cni: cni
        s3SecretKey: s3SecretKey
        kubevapEnabeledKubernetesVersions:
        - kubevapEnabeledKubernetesVersions
        - kubevapEnabeledKubernetesVersions
        accessProfileRevision: 2
        isBackupEnabled: true
        topicName: topicName
        kubernetesAlerts:
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: "{}"
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: "{}"
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        partnerId: 2
        operation: operation
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        operation:
          type: string
        jobUrl:
          type: string
        topicName:
          type: string
        imageName:
          type: string
        token:
          type: string
        isKubernetes:
          type: boolean
        isLocked:
          type: boolean
        isBackupEnabled:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        isOpaEnabled:
          type: boolean
        isAutoUpgrade:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        hasSelectedFlavors:
          type: boolean
        master:
          format: int32
          type: integer
        masterReady:
          format: int32
          type: integer
        quotaId:
          format: int32
          type: integer
        bastion:
          format: int32
          type: integer
        accessProfileRevision:
          format: int32
          type: integer
        opaProfileRevision:
          format: int32
          type: integer
        cloudCredentialName:
          type: string
        cloudCredentialId:
          format: int32
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        partnerId:
          format: int32
          type: integer
        status:
          type: string
        health:
          type: string
        accessIp:
          type: string
        totalServersCount:
          format: int32
          type: integer
        cloudType:
          type: string
        kubesprayCurrentVersion:
          type: string
        kubesprayTargetVersion:
          type: string
        kubernetesCurrentVersion:
          type: string
        kubernetesTargetVersion:
          type: string
        createdAt:
          type: string
        updatedAt:
          format: date-time
          type: string
        boundUsers:
          items:
            $ref: '#/components/schemas/UserDto'
          type: array
        monitoringCredential:
          $ref: '#/components/schemas/MonitoringCredentialsListDto'
        isAutoscalingEnabled:
          type: boolean
        flavors:
          items:
            type: string
          type: array
        accessProfile:
          $ref: '#/components/schemas/AccessProfilesForProjectListDto'
        kubernetesProfiles:
          $ref: '#/components/schemas/KubernetesProfilesLisForPollerDto'
        opaProfile:
          $ref: '#/components/schemas/OpaProfileListDto'
        kubernetesAlerts:
          items:
            $ref: '#/components/schemas/KubernetesAlertDto'
          type: array
        s3BucketName:
          type: string
        s3AccessKeyId:
          type: string
        s3SecretKey:
          type: string
        s3Endpoint:
          type: string
        s3Region:
          type: string
        isDeleteCluster:
          type: boolean
        taikunLBFlavor:
          type: string
        taikunLBPrivateKey:
          type: string
        taikunLBPublicKey:
          type: string
        routerIdStartRange:
          format: int32
          type: integer
        routerIdEndRange:
          format: int32
          type: integer
        taikunPrivateSSHKey:
          type: string
        taikunPublicSSHKey:
          type: string
        googleProjectId:
          type: string
        cidr:
          type: string
        netMask:
          format: int32
          type: integer
        privateIp:
          type: string
        publicIp:
          type: string
        isKubevapEnabled:
          type: boolean
        tanzuReleaseVersion:
          type: string
        nfsDiskSize:
          format: int32
          type: integer
        kubevapEnabeledKubernetesVersions:
          items:
            type: string
          type: array
        awsProjectAZSubnets:
          items:
            $ref: '#/components/schemas/AwsProjectAZSubnetDto'
          type: array
        availabilityZones:
          items:
            type: string
          type: array
      type: object
    ProjectForUpdateDto:
      example:
        isAutoUpgrade: true
        tanzuReleaseCurrentVersion: tanzuReleaseCurrentVersion
        imageName: imageName
        monitoringIp: monitoringIp
        isKubevapEnabled: true
        accessIp: accessIp
        isOpaEnabled: true
        kubeConfig: kubeConfig
        health: null
        isMonitoringEnabled: true
        kubesprayCurrentVersion: kubesprayCurrentVersion
        appEnabled: true
        failureReason: failureReason
        isBackupEnabled: true
        kubernetesCurrentVersion: kubernetesCurrentVersion
        status: null
      properties:
        kubeConfig:
          type: string
        kubesprayCurrentVersion:
          type: string
        accessIp:
          type: string
        imageName:
          type: string
        monitoringIp:
          type: string
        tanzuReleaseCurrentVersion:
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        health:
          $ref: '#/components/schemas/ProjectHealth'
        isBackupEnabled:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        isOpaEnabled:
          type: boolean
        isAutoUpgrade:
          type: boolean
        appEnabled:
          type: boolean
        isKubevapEnabled:
          type: boolean
        kubernetesCurrentVersion:
          type: string
        failureReason:
          type: string
      type: object
    ProjectFullListDto:
      example:
        isDeleteCluster: true
        isKubevapEnabled: true
        privateIp: privateIp
        tanzuReleaseVersion: tanzuReleaseVersion
        organizationId: 1
        createdAt: createdAt
        accessProfiles:
          organizationId: 1
          allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          organizationName: organizationName
          httpProxy: httpProxy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          name: name
          id: 1
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
          revision: 1
          sshUsers:
          - sshPublicKey: sshPublicKey
            isDeleted: true
            name: name
            id: 6
          - sshPublicKey: sshPublicKey
            isDeleted: true
            name: name
            id: 6
        cloudType: cloudType
        isLocked: true
        jobUrl: jobUrl
        cidr: cidr
        id: 0
        taikunPrivateSSHKey: taikunPrivateSSHKey
        updatedAt: 2000-01-23T04:56:07.000+00:00
        isAutoUpgrade: true
        isKubernetes: true
        taikunPublicSSHKey: taikunPublicSSHKey
        imageName: imageName
        organizationName: organizationName
        accessIp: accessIp
        netMask: 5
        isMonitoringEnabled: true
        health: health
        publicIp: publicIp
        cloudCredentialName: cloudCredentialName
        token: token
        standaloneVms:
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: spotPrice
          flavorId: flavorId
          publicIpEnabled: true
          availabilityZone: availabilityZone
          volumeSize: 6
          shutOff: true
          spotInstance: true
          password: password
          hypervisor: hypervisor
          isWindows: true
          id: 0
          ram: 1
          standAloneVmDisks:
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          imageId: imageId
          imageName: imageName
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          revision: 5
          cloudInit: cloudInit
          name: name
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            name: name
            id: 2
            publicKey: publicKey
            revision: 7
          status: status
          username: username
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: spotPrice
          flavorId: flavorId
          publicIpEnabled: true
          availabilityZone: availabilityZone
          volumeSize: 6
          shutOff: true
          spotInstance: true
          password: password
          hypervisor: hypervisor
          isWindows: true
          id: 0
          ram: 1
          standAloneVmDisks:
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          imageId: imageId
          imageName: imageName
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          revision: 5
          cloudInit: cloudInit
          name: name
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            name: name
            id: 2
            publicKey: publicKey
            revision: 7
          status: status
          username: username
        accessProfileRevision: 6
        name: name
        isBackupEnabled: true
        operation: operation
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        operation:
          type: string
        jobUrl:
          type: string
        imageName:
          type: string
        token:
          type: string
        isKubernetes:
          type: boolean
        isLocked:
          type: boolean
        isBackupEnabled:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        isAutoUpgrade:
          type: boolean
        accessProfileRevision:
          format: int32
          type: integer
        cloudCredentialName:
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        status:
          type: string
        health:
          type: string
        accessIp:
          type: string
        cloudType:
          type: string
        createdAt:
          type: string
        updatedAt:
          format: date-time
          type: string
        accessProfiles:
          $ref: '#/components/schemas/AccessProfilesForProjectListDto'
        isDeleteCluster:
          type: boolean
        taikunPrivateSSHKey:
          type: string
        taikunPublicSSHKey:
          type: string
        standaloneVms:
          items:
            $ref: '#/components/schemas/StandAloneVmFullDto'
          type: array
        cidr:
          type: string
        netMask:
          format: int32
          type: integer
        privateIp:
          type: string
        publicIp:
          type: string
        isKubevapEnabled:
          type: boolean
        tanzuReleaseVersion:
          type: string
      type: object
    ProjectGroupDetailsListDto:
      example:
        organizationId: 6
        userGroups:
        - name: name
          id: 5
        - name: name
          id: 5
        projects:
        - name: name
          id: 1
        - name: name
          id: 1
        organizationName: organizationName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/ProjectListDto'
          type: array
        userGroups:
          items:
            $ref: '#/components/schemas/UserGroupEntityListDto'
          type: array
      type: object
    ProjectGroupEntityListDto:
      example:
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    ProjectGroupList:
      example:
        data:
        - organizationId: 6
          userGroups:
          - name: name
            id: 5
          - name: name
            id: 5
          projects:
          - name: name
            id: 1
          - name: name
            id: 1
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          userGroups:
          - name: name
            id: 5
          - name: name
            id: 5
          projects:
          - name: name
            id: 1
          - name: name
            id: 1
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectGroupDetailsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectHealth:
      enum:
      - 100
      - 150
      - 200
      - 300
      - 400
      format: int32
      type: integer
    ProjectInfracostUpsertDto:
      example:
        details: details
      properties:
        details:
          type: string
      type: object
    ProjectListDetailDto:
      example:
        boundUsers:
        - userName: userName
          userId: userId
        - userName: userName
          userId: userId
        totalServersCount: 5
        certificateExpiredAt: certificateExpiredAt
        organizationId: 6
        createdAt: createdAt
        expiredAt: expiredAt
        projectAction: true
        totalStandaloneVmsCount: 5
        cloudType: cloudType
        isLocked: true
        id: 0
        totalHourlyCost: 9.301444243932576
        kubesprayTargetVersion: kubesprayTargetVersion
        isAutoscalingEnabled: true
        isKubernetes: true
        organizationName: organizationName
        alertsCount: 1
        allowSpotVMs: true
        kubernetesTargetVersion: kubernetesTargetVersion
        lastModifiedBy: lastModifiedBy
        health: health
        kubesprayCurrentVersion: kubesprayCurrentVersion
        quotaId: 2
        cloudCredentialName: cloudCredentialName
        allowSpotWorkers: true
        maxSpotPrice: 7.061401241503109
        hasKubeConfigFile: true
        deleteOnExpiration: true
        createdBy: createdBy
        name: name
        hasExpirationWarning: true
        kubernetesCurrentVersion: kubernetesCurrentVersion
        allowFullSpotKubernetes: true
        lastModified: lastModified
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isKubernetes:
          type: boolean
        isLocked:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        cloudCredentialName:
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        status:
          type: string
        health:
          type: string
        cloudType:
          type: string
        kubesprayCurrentVersion:
          type: string
        kubesprayTargetVersion:
          type: string
        kubernetesCurrentVersion:
          type: string
        kubernetesTargetVersion:
          type: string
        createdAt:
          type: string
        alertsCount:
          format: int32
          type: integer
        totalServersCount:
          format: int32
          type: integer
        totalStandaloneVmsCount:
          format: int32
          type: integer
        boundUsers:
          items:
            $ref: '#/components/schemas/UserDto'
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        expiredAt:
          type: string
        deleteOnExpiration:
          type: boolean
        certificateExpiredAt:
          type: string
        lastModifiedBy:
          type: string
        quotaId:
          format: int32
          type: integer
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          type: number
        projectAction:
          type: boolean
        hasExpirationWarning:
          type: boolean
        totalHourlyCost:
          format: double
          type: number
        isAutoscalingEnabled:
          type: boolean
      type: object
    ProjectListDto:
      example:
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    ProjectListForAlert:
      example:
        organizationId: 6
        monitoringCredential:
          lokiUrl: lokiUrl
          password: password
          alertManagerUrl: alertManagerUrl
          prometheusUrl: prometheusUrl
          id: 7
          username: username
        isKubernetes: true
        isLocked: true
        name: name
        health: health
        isMonitoringEnabled: true
        kubernetesAlerts:
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: "{}"
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: "{}"
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        id: 0
        hasKubeConfigFile: true
        token: token
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        token:
          type: string
        status:
          type: string
        organizationId:
          format: int32
          type: integer
        health:
          type: string
        isKubernetes:
          type: boolean
        isLocked:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        monitoringCredential:
          $ref: '#/components/schemas/MonitoringCredentialsListDto'
        kubernetesAlerts:
          items:
            $ref: '#/components/schemas/KubernetesAlertDto'
          type: array
      type: object
    ProjectListForPoller:
      example:
        data:
        - flavors:
          - flavors
          - flavors
          boundUsers:
          - userName: userName
            userId: userId
          - userName: userName
            userId: userId
          isKubevapEnabled: true
          taikunLBFlavor: taikunLBFlavor
          isOpaEnabled: true
          s3Region: s3Region
          routerIdStartRange: 4
          privateIp: privateIp
          opaProfile:
            projects:
            - name: name
              id: 0
            - name: name
              id: 0
            organizationName: organizationName
            forbidSpecificTags:
            - forbidSpecificTags
            - forbidSpecificTags
            forbidNodePort: true
            ingressWhitelist:
            - ingressWhitelist
            - ingressWhitelist
            revision: 6
            organizationId: 1
            forbidHttpIngress: true
            allowedRepo:
            - allowedRepo
            - allowedRepo
            createdAt: createdAt
            isDefault: true
            requireProbe: true
            isLocked: true
            name: name
            uniqueServiceSelector: true
            id: 0
            uniqueIngresses: true
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 3
          createdAt: createdAt
          taikunLBPublicKey: taikunLBPublicKey
          s3Endpoint: s3Endpoint
          cloudType: cloudType
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          s3BucketName: s3BucketName
          googleProjectId: googleProjectId
          id: 0
          bastion: 5
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isAutoscalingEnabled: true
          isAutoUpgrade: true
          isKubernetes: true
          taikunPublicSSHKey: taikunPublicSSHKey
          imageName: imageName
          hasSelectedFlavors: true
          organizationName: organizationName
          accessIp: accessIp
          quotaId: 5
          cloudCredentialName: cloudCredentialName
          name: name
          cloudCredentialId: 9
          kubernetesCurrentVersion: kubernetesCurrentVersion
          opaProfileRevision: 7
          status: status
          isDeleteCluster: true
          awsProjectAZSubnets:
          - zone: zone
            privateIp: privateIp
            publicIp: publicIp
          - zone: zone
            privateIp: privateIp
            publicIp: publicIp
          totalServersCount: 4
          taikunLBPrivateKey: taikunLBPrivateKey
          accessProfile:
            organizationId: 1
            allowedHosts:
            - accessProfileName: accessProfileName
              ipAddress: ipAddress
              description: description
              accessProfileId: 7
              id: 5
              maskBits: 2
            - accessProfileName: accessProfileName
              ipAddress: ipAddress
              description: description
              accessProfileId: 7
              id: 5
              maskBits: 2
            organizationName: organizationName
            httpProxy: httpProxy
            ntpServers:
            - address: address
              id: 5
            - address: address
              id: 5
            name: name
            id: 1
            dnsServers:
            - address: address
              id: 1
            - address: address
              id: 1
            revision: 1
            sshUsers:
            - sshPublicKey: sshPublicKey
              isDeleted: true
              name: name
              id: 6
            - sshPublicKey: sshPublicKey
              isDeleted: true
              name: name
              id: 6
          tanzuReleaseVersion: tanzuReleaseVersion
          nfsDiskSize: 9
          jobUrl: jobUrl
          cidr: cidr
          taikunPrivateSSHKey: taikunPrivateSSHKey
          kubesprayTargetVersion: kubesprayTargetVersion
          routerIdEndRange: 5
          kubernetesTargetVersion: kubernetesTargetVersion
          netMask: 9
          isMonitoringEnabled: true
          health: health
          kubesprayCurrentVersion: kubesprayCurrentVersion
          publicIp: publicIp
          masterReady: 1
          hasKubeConfigFile: true
          token: token
          master: 6
          monitoringCredential:
            lokiUrl: lokiUrl
            password: password
            alertManagerUrl: alertManagerUrl
            prometheusUrl: prometheusUrl
            id: 7
            username: username
          kubernetesProfiles:
            organizationId: 1
            proxmoxStorage: proxmoxStorage
            organizationName: organizationName
            octaviaEnabled: true
            isLocked: true
            name: name
            exposeNodePortOnBastion: true
            allowSchedulingOnMaster: true
            id: 7
            uniqueClusterName: true
            taikunLBEnabled: true
            cni: cni
          s3SecretKey: s3SecretKey
          kubevapEnabeledKubernetesVersions:
          - kubevapEnabeledKubernetesVersions
          - kubevapEnabeledKubernetesVersions
          accessProfileRevision: 2
          isBackupEnabled: true
          topicName: topicName
          kubernetesAlerts:
          - severity: severity
            lastModifiedBy: lastModifiedBy
            description: description
            title: title
            endAt: endAt
            silenceReason: silenceReason
            labels: "{}"
            isSolved: true
            isSilenced: true
            fingerprint: fingerprint
            startsAt: startsAt
            id: 0
            projectName: projectName
            projectId: 6
            status: status
          - severity: severity
            lastModifiedBy: lastModifiedBy
            description: description
            title: title
            endAt: endAt
            silenceReason: silenceReason
            labels: "{}"
            isSolved: true
            isSilenced: true
            fingerprint: fingerprint
            startsAt: startsAt
            id: 0
            projectName: projectName
            projectId: 6
            status: status
          partnerId: 2
          operation: operation
        - flavors:
          - flavors
          - flavors
          boundUsers:
          - userName: userName
            userId: userId
          - userName: userName
            userId: userId
          isKubevapEnabled: true
          taikunLBFlavor: taikunLBFlavor
          isOpaEnabled: true
          s3Region: s3Region
          routerIdStartRange: 4
          privateIp: privateIp
          opaProfile:
            projects:
            - name: name
              id: 0
            - name: name
              id: 0
            organizationName: organizationName
            forbidSpecificTags:
            - forbidSpecificTags
            - forbidSpecificTags
            forbidNodePort: true
            ingressWhitelist:
            - ingressWhitelist
            - ingressWhitelist
            revision: 6
            organizationId: 1
            forbidHttpIngress: true
            allowedRepo:
            - allowedRepo
            - allowedRepo
            createdAt: createdAt
            isDefault: true
            requireProbe: true
            isLocked: true
            name: name
            uniqueServiceSelector: true
            id: 0
            uniqueIngresses: true
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 3
          createdAt: createdAt
          taikunLBPublicKey: taikunLBPublicKey
          s3Endpoint: s3Endpoint
          cloudType: cloudType
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          s3BucketName: s3BucketName
          googleProjectId: googleProjectId
          id: 0
          bastion: 5
          updatedAt: 2000-01-23T04:56:07.000+00:00
          isAutoscalingEnabled: true
          isAutoUpgrade: true
          isKubernetes: true
          taikunPublicSSHKey: taikunPublicSSHKey
          imageName: imageName
          hasSelectedFlavors: true
          organizationName: organizationName
          accessIp: accessIp
          quotaId: 5
          cloudCredentialName: cloudCredentialName
          name: name
          cloudCredentialId: 9
          kubernetesCurrentVersion: kubernetesCurrentVersion
          opaProfileRevision: 7
          status: status
          isDeleteCluster: true
          awsProjectAZSubnets:
          - zone: zone
            privateIp: privateIp
            publicIp: publicIp
          - zone: zone
            privateIp: privateIp
            publicIp: publicIp
          totalServersCount: 4
          taikunLBPrivateKey: taikunLBPrivateKey
          accessProfile:
            organizationId: 1
            allowedHosts:
            - accessProfileName: accessProfileName
              ipAddress: ipAddress
              description: description
              accessProfileId: 7
              id: 5
              maskBits: 2
            - accessProfileName: accessProfileName
              ipAddress: ipAddress
              description: description
              accessProfileId: 7
              id: 5
              maskBits: 2
            organizationName: organizationName
            httpProxy: httpProxy
            ntpServers:
            - address: address
              id: 5
            - address: address
              id: 5
            name: name
            id: 1
            dnsServers:
            - address: address
              id: 1
            - address: address
              id: 1
            revision: 1
            sshUsers:
            - sshPublicKey: sshPublicKey
              isDeleted: true
              name: name
              id: 6
            - sshPublicKey: sshPublicKey
              isDeleted: true
              name: name
              id: 6
          tanzuReleaseVersion: tanzuReleaseVersion
          nfsDiskSize: 9
          jobUrl: jobUrl
          cidr: cidr
          taikunPrivateSSHKey: taikunPrivateSSHKey
          kubesprayTargetVersion: kubesprayTargetVersion
          routerIdEndRange: 5
          kubernetesTargetVersion: kubernetesTargetVersion
          netMask: 9
          isMonitoringEnabled: true
          health: health
          kubesprayCurrentVersion: kubesprayCurrentVersion
          publicIp: publicIp
          masterReady: 1
          hasKubeConfigFile: true
          token: token
          master: 6
          monitoringCredential:
            lokiUrl: lokiUrl
            password: password
            alertManagerUrl: alertManagerUrl
            prometheusUrl: prometheusUrl
            id: 7
            username: username
          kubernetesProfiles:
            organizationId: 1
            proxmoxStorage: proxmoxStorage
            organizationName: organizationName
            octaviaEnabled: true
            isLocked: true
            name: name
            exposeNodePortOnBastion: true
            allowSchedulingOnMaster: true
            id: 7
            uniqueClusterName: true
            taikunLBEnabled: true
            cni: cni
          s3SecretKey: s3SecretKey
          kubevapEnabeledKubernetesVersions:
          - kubevapEnabeledKubernetesVersions
          - kubevapEnabeledKubernetesVersions
          accessProfileRevision: 2
          isBackupEnabled: true
          topicName: topicName
          kubernetesAlerts:
          - severity: severity
            lastModifiedBy: lastModifiedBy
            description: description
            title: title
            endAt: endAt
            silenceReason: silenceReason
            labels: "{}"
            isSolved: true
            isSilenced: true
            fingerprint: fingerprint
            startsAt: startsAt
            id: 0
            projectName: projectName
            projectId: 6
            status: status
          - severity: severity
            lastModifiedBy: lastModifiedBy
            description: description
            title: title
            endAt: endAt
            silenceReason: silenceReason
            labels: "{}"
            isSolved: true
            isSilenced: true
            fingerprint: fingerprint
            startsAt: startsAt
            id: 0
            projectName: projectName
            projectId: 6
            status: status
          partnerId: 2
          operation: operation
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectForListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectListForProjectGroupDto:
      example:
        isSelected: true
        projectName: projectName
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        isSelected:
          type: boolean
      type: object
    ProjectQuotaList:
      example:
        data:
        - serverRam: 6
          vmCpu: 5
          serverDiskSize: 1
          vmRam: 5
          vmVolumeSize: 2
          projectName: projectName
          projectId: 7
          serverCpu: 0
        - serverRam: 6
          vmCpu: 5
          serverDiskSize: 1
          vmRam: 5
          vmVolumeSize: 2
          projectName: projectName
          projectId: 7
          serverCpu: 0
        totalCount: 9
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectQuotaListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectQuotaListDto:
      example:
        serverRam: 6
        vmCpu: 5
        serverDiskSize: 1
        vmRam: 5
        vmVolumeSize: 2
        projectName: projectName
        projectId: 7
        serverCpu: 0
      properties:
        serverCpu:
          format: int64
          type: integer
        serverRam:
          format: int64
          type: integer
        serverDiskSize:
          format: int64
          type: integer
        vmCpu:
          format: int64
          type: integer
        vmRam:
          format: int64
          type: integer
        vmVolumeSize:
          format: int64
          type: integer
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
      type: object
    ProjectRevisionUpdateDto:
      example:
        cloudCredentialRevision: 0
        accessProfileRevision: 1
        opaProfileRevision: 6
      properties:
        cloudCredentialRevision:
          format: int32
          type: integer
        opaProfileRevision:
          format: int32
          type: integer
        accessProfileRevision:
          format: int32
          type: integer
      type: object
    ProjectStatus:
      enum:
      - 100
      - 145
      - 150
      - 154
      - 155
      - 156
      - 160
      - 165
      - 200
      - 250
      - 300
      - 400
      - 500
      - 550
      - 600
      - 700
      - 800
      - 900
      - 1000
      - 1100
      format: int32
      type: integer
    ProjectTemplateDropdownListDto:
      example:
        name: name
        id: 0
        canCommit: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        canCommit:
          type: boolean
      type: object
    ProjectTemplateList:
      example:
        data:
        - organizationId: 6
          backupEnabled: true
          allowSpotVms: true
          organizationName: organizationName
          name: name
          allowFullSpotKubernetes: true
          id: 0
          allowSpotWorkers: true
          monitoringEnabled: true
          kubernetesVersion: kubernetesVersion
        - organizationId: 6
          backupEnabled: true
          allowSpotVms: true
          organizationName: organizationName
          name: name
          allowFullSpotKubernetes: true
          id: 0
          allowSpotWorkers: true
          monitoringEnabled: true
          kubernetesVersion: kubernetesVersion
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectTemplateListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectTemplateListDto:
      example:
        organizationId: 6
        backupEnabled: true
        allowSpotVms: true
        organizationName: organizationName
        name: name
        allowFullSpotKubernetes: true
        id: 0
        allowSpotWorkers: true
        monitoringEnabled: true
        kubernetesVersion: kubernetesVersion
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        monitoringEnabled:
          type: boolean
        backupEnabled:
          type: boolean
        allowFullSpotKubernetes:
          type: boolean
        allowSpotVms:
          type: boolean
        allowSpotWorkers:
          type: boolean
        kubernetesVersion:
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
      type: object
    ProjectType:
      enum:
      - 100
      - 200
      format: int32
      type: integer
    ProjectWithFlavorsAndImagesDto:
      example:
        flavors:
        - flavors
        - flavors
        images:
        - images
        - images
        imageNames:
        - imageNames
        - imageNames
        isReady: true
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        flavors:
          items:
            type: string
          type: array
        images:
          items:
            type: string
          type: array
        imageNames:
          items:
            type: string
          type: array
        isReady:
          type: boolean
      type: object
    ProjectsForBillingDto:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        standaloneVms:
        - cpu: 5
          ram: 2
        - cpu: 5
          ram: 2
        servers:
        - cpu: 1
          ram: 5
        - cpu: 1
          ram: 5
        organizationName: organizationName
        price: 6.027456183070403
        name: name
        id: 0
        billingEnabled: true
        billingStartDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        createdAt:
          format: date-time
          type: string
        billingStartDate:
          format: date-time
          type: string
        organizationName:
          type: string
        price:
          format: double
          type: number
        servers:
          items:
            $ref: '#/components/schemas/ServersForBillingDto'
          type: array
        standaloneVms:
          items:
            $ref: '#/components/schemas/StandaloneVmsForBillingDto'
          type: array
        billingEnabled:
          type: boolean
      type: object
    ProjectsList:
      example:
        data:
        - boundUsers:
          - userName: userName
            userId: userId
          - userName: userName
            userId: userId
          totalServersCount: 5
          certificateExpiredAt: certificateExpiredAt
          organizationId: 6
          createdAt: createdAt
          expiredAt: expiredAt
          projectAction: true
          totalStandaloneVmsCount: 5
          cloudType: cloudType
          isLocked: true
          id: 0
          totalHourlyCost: 9.301444243932576
          kubesprayTargetVersion: kubesprayTargetVersion
          isAutoscalingEnabled: true
          isKubernetes: true
          organizationName: organizationName
          alertsCount: 1
          allowSpotVMs: true
          kubernetesTargetVersion: kubernetesTargetVersion
          lastModifiedBy: lastModifiedBy
          health: health
          kubesprayCurrentVersion: kubesprayCurrentVersion
          quotaId: 2
          cloudCredentialName: cloudCredentialName
          allowSpotWorkers: true
          maxSpotPrice: 7.061401241503109
          hasKubeConfigFile: true
          deleteOnExpiration: true
          createdBy: createdBy
          name: name
          hasExpirationWarning: true
          kubernetesCurrentVersion: kubernetesCurrentVersion
          allowFullSpotKubernetes: true
          lastModified: lastModified
          status: status
        - boundUsers:
          - userName: userName
            userId: userId
          - userName: userName
            userId: userId
          totalServersCount: 5
          certificateExpiredAt: certificateExpiredAt
          organizationId: 6
          createdAt: createdAt
          expiredAt: expiredAt
          projectAction: true
          totalStandaloneVmsCount: 5
          cloudType: cloudType
          isLocked: true
          id: 0
          totalHourlyCost: 9.301444243932576
          kubesprayTargetVersion: kubesprayTargetVersion
          isAutoscalingEnabled: true
          isKubernetes: true
          organizationName: organizationName
          alertsCount: 1
          allowSpotVMs: true
          kubernetesTargetVersion: kubernetesTargetVersion
          lastModifiedBy: lastModifiedBy
          health: health
          kubesprayCurrentVersion: kubesprayCurrentVersion
          quotaId: 2
          cloudCredentialName: cloudCredentialName
          allowSpotWorkers: true
          maxSpotPrice: 7.061401241503109
          hasKubeConfigFile: true
          deleteOnExpiration: true
          createdBy: createdBy
          name: name
          hasExpirationWarning: true
          kubernetesCurrentVersion: kubernetesCurrentVersion
          allowFullSpotKubernetes: true
          lastModified: lastModified
          status: status
        totalCount: 3
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectListDetailDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProjectsMonitoringAlertsCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ProjectsSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    ProjectsSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusBillingCreateCommand:
      example:
        organizationId: 0
        price: 43974389.415088356
        startDate: 2000-01-23T04:56:07.000+00:00
        prometheusRuleId: 0
      properties:
        organizationId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        prometheusRuleId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        startDate:
          format: date-time
          type: string
        price:
          exclusiveMinimum: true
          format: double
          maximum: 300000000
          minimum: 0
          type: number
      required:
      - organizationId
      - prometheusRuleId
      type: object
    PrometheusBillingInfo:
      example:
        data:
        - endDate: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          price: 0.8008281904610115
          lastModifiedBy: lastModifiedBy
          ruleName: ruleName
          lastModified: lastModified
          startDate: 2000-01-23T04:56:07.000+00:00
          prometheusRuleId: 6
        - endDate: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          price: 0.8008281904610115
          lastModifiedBy: lastModifiedBy
          ruleName: ruleName
          lastModified: lastModified
          startDate: 2000-01-23T04:56:07.000+00:00
          prometheusRuleId: 6
        totalPrice: 1.4658129805029452
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/PrometheusBillingSummaryDto'
          type: array
        totalPrice:
          format: double
          type: number
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusBillingSummaryDto:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        price: 0.8008281904610115
        lastModifiedBy: lastModifiedBy
        ruleName: ruleName
        lastModified: lastModified
        startDate: 2000-01-23T04:56:07.000+00:00
        prometheusRuleId: 6
      properties:
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        prometheusRuleId:
          format: int32
          type: integer
        ruleName:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
      type: object
    PrometheusDashboardCreateCommand:
      example:
        expression: expression
        name: name
        description: description
        projectId: 0
        categoryName: categoryName
      properties:
        projectId:
          format: int32
          type: integer
        name:
          maxLength: 100
          minLength: 3
          type: string
        expression:
          maxLength: 200
          minLength: 3
          type: string
        description:
          maxLength: 100
          minLength: 3
          type: string
        categoryName:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - categoryName
      - description
      - expression
      - name
      type: object
    PrometheusDashboardDto:
      example:
        isReadonly: true
        name: name
        expressionDecoded: expressionDecoded
        description: description
        id: 0
        expressionEncoded: expressionEncoded
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        expressionDecoded:
          type: string
        expressionEncoded:
          type: string
        description:
          type: string
        isReadonly:
          type: boolean
      type: object
    PrometheusDashboardListDto:
      example:
        data:
        - isReadonly: true
          name: name
          expressionDecoded: expressionDecoded
          description: description
          id: 0
          expressionEncoded: expressionEncoded
        - isReadonly: true
          name: name
          expressionDecoded: expressionDecoded
          description: description
          id: 0
          expressionEncoded: expressionEncoded
        categoryName: categoryName
      properties:
        categoryName:
          type: string
        data:
          items:
            $ref: '#/components/schemas/PrometheusDashboardDto'
          type: array
      type: object
    PrometheusDashboardUpdateCommand:
      example:
        expression: expression
        name: name
        description: description
        id: 0
        categoryName: categoryName
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 100
          minLength: 3
          type: string
        expression:
          maxLength: 200
          minLength: 3
          type: string
        description:
          maxLength: 100
          minLength: 3
          type: string
        categoryName:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - categoryName
      - description
      - expression
      - id
      - name
      type: object
    PrometheusEntity:
      example:
        prometheusRuleName: prometheusRuleName
        ruleDiscountRate: 2.027123023002322
        prometheusRuleId: 3
      properties:
        prometheusRuleId:
          format: int32
          type: integer
        prometheusRuleName:
          type: string
        ruleDiscountRate:
          format: double
          type: number
      type: object
    PrometheusLabelDeleteDto:
      example:
        id: 6
      properties:
        id:
          format: int32
          type: integer
      type: object
    PrometheusLabelListDto:
      example:
        label: label
        value: value
      properties:
        label:
          pattern: "[a-zA-Z_][a-zA-Z0-9_]*"
          type: string
        value:
          maxLength: 300
          minLength: 1
          type: string
      required:
      - value
      type: object
    PrometheusLabelUpdateDto:
      example:
        id: 6
        label: label
        value: value
      properties:
        id:
          format: int32
          type: integer
        label:
          type: string
        value:
          type: string
      type: object
    PrometheusMetricsCommand:
      example:
        isAutoComplete: true
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
        step: step
        time: 2000-01-23T04:56:07.000+00:00
        isGraphEnabled: true
        projectId: 0
        parameters: parameters
      properties:
        projectId:
          format: int32
          type: integer
        parameters:
          type: string
        time:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        isGraphEnabled:
          type: boolean
        isAutoComplete:
          type: boolean
        step:
          type: string
      type: object
    PrometheusOrganizationDiscountDto:
      example:
        discountRate: 5.962133916683182
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        discountRate:
          format: double
          type: number
      type: object
    PrometheusRuleListDto:
      example:
        metricName: metricName
        lastModifiedBy: lastModifiedBy
        userName: userName
        type: type
        url: url
        boundOrganizations:
        - discountRate: 5.962133916683182
          name: name
          id: 1
        - discountRate: 5.962133916683182
          name: name
          id: 1
        billingStartDate: billingStartDate
        labels:
        - id: 6
          label: label
          value: value
        - id: 6
          label: label
          value: value
        operationCredential:
          isDefault: true
          operationCredentialId: 0
          name: name
        createdAt: createdAt
        password: password
        partner:
          whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          paymentEnabled: true
          phone: phone
          domain: domain
          name: name
          organizations:
          - name: name
            id: 0
          - name: name
            id: 0
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
        createdBy: createdBy
        price: 5.637376656633329
        name: name
        id: 0
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        password:
          type: string
        userName:
          type: string
        url:
          type: string
        metricName:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/PrometheusLabelUpdateDto'
          type: array
        boundOrganizations:
          items:
            $ref: '#/components/schemas/PrometheusOrganizationDiscountDto'
          type: array
        type:
          type: string
        price:
          format: double
          type: number
        billingStartDate:
          type: string
        createdAt:
          type: string
        partner:
          $ref: '#/components/schemas/PartnerDetailsDto'
        operationCredential:
          $ref: '#/components/schemas/OperationCredentialsForOrganizationEntity'
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
      type: object
    PrometheusRulesList:
      example:
        data:
        - metricName: metricName
          lastModifiedBy: lastModifiedBy
          userName: userName
          type: type
          url: url
          boundOrganizations:
          - discountRate: 5.962133916683182
            name: name
            id: 1
          - discountRate: 5.962133916683182
            name: name
            id: 1
          billingStartDate: billingStartDate
          labels:
          - id: 6
            label: label
            value: value
          - id: 6
            label: label
            value: value
          operationCredential:
            isDefault: true
            operationCredentialId: 0
            name: name
          createdAt: createdAt
          password: password
          partner:
            whiteListDomains:
            - name: name
              id: 6
            - name: name
              id: 6
            country: country
            address: address
            city: city
            link: link
            paymentEnabled: true
            phone: phone
            domain: domain
            name: name
            organizations:
            - name: name
              id: 0
            - name: name
              id: 0
            logo: logo
            requiredUserApproval: true
            id: 0
            allowRegistration: true
            email: email
            vatNumber: vatNumber
          createdBy: createdBy
          price: 5.637376656633329
          name: name
          id: 0
          lastModified: lastModified
        - metricName: metricName
          lastModifiedBy: lastModifiedBy
          userName: userName
          type: type
          url: url
          boundOrganizations:
          - discountRate: 5.962133916683182
            name: name
            id: 1
          - discountRate: 5.962133916683182
            name: name
            id: 1
          billingStartDate: billingStartDate
          labels:
          - id: 6
            label: label
            value: value
          - id: 6
            label: label
            value: value
          operationCredential:
            isDefault: true
            operationCredentialId: 0
            name: name
          createdAt: createdAt
          password: password
          partner:
            whiteListDomains:
            - name: name
              id: 6
            - name: name
              id: 6
            country: country
            address: address
            city: city
            link: link
            paymentEnabled: true
            phone: phone
            domain: domain
            name: name
            organizations:
            - name: name
              id: 0
            - name: name
              id: 0
            logo: logo
            requiredUserApproval: true
            id: 0
            allowRegistration: true
            email: email
            vatNumber: vatNumber
          createdBy: createdBy
          price: 5.637376656633329
          name: name
          id: 0
          lastModified: lastModified
        totalCount: 2
      properties:
        data:
          items:
            $ref: '#/components/schemas/PrometheusRuleListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusRulesSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    PrometheusRulesSearchList:
      example:
        data:
        - partner: 6
          name: name
          id: 0
        - partner: 6
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/PrometheusRulesSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusRulesSearchResponseData:
      example:
        partner: 6
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        partner:
          format: int32
          type: integer
      type: object
    PrometheusType:
      enum:
      - 100
      - 200
      format: int32
      type: integer
    ProxmoxCheckerCommand:
      example:
        tokenId: tokenId
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          minLength: 1
          type: string
        tokenId:
          minLength: 1
          type: string
        tokenSecret:
          minLength: 1
          type: string
      required:
      - tokenId
      - tokenSecret
      - url
      type: object
    ProxmoxCredentialsForProjectDto:
      example:
        password: password
        tokenId: tokenId
        proxmoxNetworks:
        - endAllocationRange: endAllocationRange
          netMask: 1
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        - endAllocationRange: endAllocationRange
          netMask: 1
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        storage: storage
        vmTemplateName: vmTemplateName
        tokenSecret: tokenSecret
        url: url
      properties:
        tokenId:
          type: string
        tokenSecret:
          type: string
        url:
          type: string
        password:
          type: string
        storage:
          type: string
        vmTemplateName:
          type: string
        proxmoxNetworks:
          items:
            $ref: '#/components/schemas/ProxmoxNetworkListDto'
          type: array
      type: object
    ProxmoxFlavorData:
      example:
        name: name
        cpu: 0
        ram: 6
      properties:
        name:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      type: object
    ProxmoxFlavorList:
      example:
        data:
        - name: name
          cpu: 0
          ram: 6
        - name: name
          cpu: 0
          ram: 6
        count: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProxmoxFlavorData'
          type: array
        count:
          format: int32
          type: integer
      type: object
    ProxmoxHypervisorDto:
      example:
        isBound: true
        name: name
        usedByServer: true
      properties:
        name:
          type: string
        isBound:
          type: boolean
        usedByServer:
          type: boolean
      type: object
    ProxmoxImageList:
      example:
        data:
        - name: name
          id: 0
        - name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProxmoxList:
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          tokenId: tokenId
          lastModifiedBy: lastModifiedBy
          storage: storage
          url: url
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          proxmoxNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
          - endAllocationRange: endAllocationRange
            netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
          hypervisors:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          lastModified: lastModified
          continentName: continentName
          vmTemplateName: vmTemplateName
        - projectCount: 6
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          tokenId: tokenId
          lastModifiedBy: lastModifiedBy
          storage: storage
          url: url
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          proxmoxNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
          - endAllocationRange: endAllocationRange
            netMask: 1
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
          hypervisors:
          - name: name
            id: 0
          - name: name
            id: 0
          id: 0
          lastModified: lastModified
          continentName: continentName
          vmTemplateName: vmTemplateName
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProxmoxListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ProxmoxListDto:
      example:
        projectCount: 6
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        tokenId: tokenId
        lastModifiedBy: lastModifiedBy
        storage: storage
        url: url
        organizationId: 1
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        proxmoxNetworks:
        - endAllocationRange: endAllocationRange
          netMask: 1
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        - endAllocationRange: endAllocationRange
          netMask: 1
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        hypervisors:
        - name: name
          id: 0
        - name: name
          id: 0
        id: 0
        lastModified: lastModified
        continentName: continentName
        vmTemplateName: vmTemplateName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        createdAt:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          type: string
        hypervisors:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        tokenId:
          type: string
        url:
          type: string
        storage:
          type: string
        vmTemplateName:
          type: string
        proxmoxNetworks:
          items:
            $ref: '#/components/schemas/ProxmoxNetworkListDto'
          type: array
      type: object
    ProxmoxNetworkListDto:
      example:
        endAllocationRange: endAllocationRange
        netMask: 1
        ipAddress: ipAddress
        bridge: bridge
        isPrivate: true
        beginAllocationRange: beginAllocationRange
        gateway: gateway
      properties:
        bridge:
          type: string
        gateway:
          type: string
        ipAddress:
          type: string
        netMask:
          format: int32
          type: integer
        beginAllocationRange:
          type: string
        endAllocationRange:
          type: string
        isPrivate:
          type: boolean
      type: object
    ProxmoxRole:
      enum:
      - 0
      - 100
      format: int32
      type: integer
    PurgeCommand:
      example:
        projectId: 0
        serverIds:
        - 6
        - 6
      properties:
        projectId:
          format: int32
          type: integer
        serverIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    PurgeExpiredProjectsCommand:
      type: object
    PurgeStandAloneCommand:
      example:
        vmIds:
        - 6
        - 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        vmIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    PurgeStandAloneVmDiskCommand:
      example:
        vmDiskIds:
        - 6
        - 6
        standaloneVmId: 0
      properties:
        standaloneVmId:
          format: int32
          type: integer
        vmDiskIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    PurgeWholeProjectCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    PvcDto:
      example:
        phase: phase
        size: size
        storageClassName: storageClassName
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        phase:
          type: string
        size:
          type: string
        namespace:
          type: string
        storageClassName:
          type: string
        age:
          type: string
      type: object
    PvcSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    PvcSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Pvcs:
      example:
        data:
        - phase: phase
          size: size
          storageClassName: storageClassName
          namespace: namespace
          metadataName: metadataName
          age: age
        - phase: phase
          size: size
          storageClassName: storageClassName
          namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PvcDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    RebootServerCommand:
      example:
        type: type
        serverId: 0
      properties:
        serverId:
          format: int32
          type: integer
        type:
          type: string
      type: object
    RebootStandAloneVmCommand:
      example:
        id: 0
        type: type
      properties:
        id:
          format: int32
          type: integer
        type:
          type: string
      type: object
    RefreshTokenCommand:
      example:
        token: token
        refreshToken: refreshToken
      properties:
        token:
          type: string
        refreshToken:
          type: string
      type: object
    RegionListCommand:
      example:
        awsAccessKeyId: awsAccessKeyId
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          type: string
        awsSecretAccessKey:
          type: string
      type: object
    RemindUsersByAlertingProfileCommand:
      example:
        reminder: null
      properties:
        reminder:
          $ref: '#/components/schemas/AlertingReminder'
      type: object
    RepairStandAloneVmCommand:
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ReplyTicketCommand:
      example:
        body: body
        ticketId: ticketId
      properties:
        ticketId:
          minLength: 1
          type: string
        body:
          maxLength: 2000
          minLength: 3
          type: string
      required:
      - body
      - ticketId
      type: object
    Repository:
      example:
        scannerDisabled: true
        organizationName: organizationName
        organizationDisplayName: organizationDisplayName
        kind: 3
        name: name
        repositoryId: repositoryId
        official: true
        verifiedPublisher: true
        url: url
      properties:
        url:
          type: string
        kind:
          format: int64
          type: integer
        name:
          type: string
        official:
          type: boolean
        repositoryId:
          type: string
        scannerDisabled:
          type: boolean
        organizationName:
          type: string
        verifiedPublisher:
          type: boolean
        organizationDisplayName:
          type: string
      type: object
    ResetPasswordCommand:
      example:
        newPassword: null
        email: email
        token: token
      properties:
        token:
          minLength: 1
          type: string
        email:
          format: email
          type: string
        newPassword:
          $ref: '#/components/schemas/AdminUserCreateCommand_password'
      required:
      - newPassword
      - token
      type: object
    ResetProjectStatusCommand:
      example:
        projectId: 0
        status: null
      properties:
        projectId:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/ProjectStatus'
      type: object
    ResetServerStatusCommand:
      example:
        projectId: 0
        serverIds:
        - 6
        - 6
        status: null
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        serverIds:
          items:
            format: int32
            type: integer
          type: array
        status:
          $ref: '#/components/schemas/CloudStatus'
      required:
      - projectId
      type: object
    ResetStandAloneVmDiskStatusCommand:
      example:
        standAloneVmId: 0
        diskIds:
        - 6
        - 6
        status: null
      properties:
        standAloneVmId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        diskIds:
          items:
            format: int32
            type: integer
          type: array
        status:
          $ref: '#/components/schemas/StandAloneVmDiskStatus'
      required:
      - standAloneVmId
      type: object
    ResetStandAloneVmStatusCommand:
      example:
        vmIds:
        - 6
        - 6
        projectId: 0
        status: null
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        vmIds:
          items:
            format: int32
            type: integer
          type: array
        status:
          $ref: '#/components/schemas/StandAloneVmStatus'
      required:
      - projectId
      type: object
    Resource:
      example:
        metadata:
          vcsSubPath: vcsSubPath
          path: path
          vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
          vcsCommitMessage: vcsCommitMessage
          vcsBranch: vcsBranch
          vcsCommitAuthorName: vcsCommitAuthorName
          type: type
          infracostCommand: infracostCommand
          vcsCommitSha: vcsCommitSha
          vcsRepositoryUrl: vcsRepositoryUrl
          vcsCommitAuthorEmail: vcsCommitAuthorEmail
        name: name
        hourlyCost: hourlyCost
        subresources:
        - metadata:
            vcsSubPath: vcsSubPath
            path: path
            vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
            vcsCommitMessage: vcsCommitMessage
            vcsBranch: vcsBranch
            vcsCommitAuthorName: vcsCommitAuthorName
            type: type
            infracostCommand: infracostCommand
            vcsCommitSha: vcsCommitSha
            vcsRepositoryUrl: vcsRepositoryUrl
            vcsCommitAuthorEmail: vcsCommitAuthorEmail
          name: name
          hourlyCost: hourlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
        - metadata:
            vcsSubPath: vcsSubPath
            path: path
            vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
            vcsCommitMessage: vcsCommitMessage
            vcsBranch: vcsBranch
            vcsCommitAuthorName: vcsCommitAuthorName
            type: type
            infracostCommand: infracostCommand
            vcsCommitSha: vcsCommitSha
            vcsRepositoryUrl: vcsRepositoryUrl
            vcsCommitAuthorEmail: vcsCommitAuthorEmail
          name: name
          hourlyCost: hourlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
        costComponents:
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          monthlyCost: monthlyCost
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          monthlyCost: monthlyCost
        monthlyCost: monthlyCost
      properties:
        name:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        hourlyCost:
          type: string
        monthlyCost:
          type: string
        costComponents:
          items:
            $ref: '#/components/schemas/CostComponent'
          type: array
        subresources:
          items:
            $ref: '#/components/schemas/Subresource'
          type: array
      type: object
    RestartDaemonSetCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    RestartDeploymentCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    RestartStsCommand:
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          minLength: 1
          type: string
        namespace:
          minLength: 1
          type: string
      required:
      - name
      - namespace
      - projectId
      type: object
    RestoreBackupCommand:
      example:
        excludeNamespaces:
        - excludeNamespaces
        - excludeNamespaces
        projectId: 0
        backupName: backupName
        restoreName: restoreName
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
      properties:
        projectId:
          format: int32
          type: integer
        backupName:
          pattern: "^(?=[a-z])(?!-)(?!.*--)[a-z0-9-]+(?<!-)$"
          type: string
        restoreName:
          pattern: "^(?=[a-z])(?!-)(?!.*--)[a-z0-9-]+(?<!-)$"
          type: string
        includeNamespaces:
          items:
            type: string
          type: array
        excludeNamespaces:
          items:
            type: string
          type: array
      type: object
    RuleCreateCommand:
      example:
        organizationId:
        - 5
        - 5
        metricName: metricName
        price: 24024845.713830344
        ruleDiscountRate: 5
        name: name
        operationCredentialId: 1
        partnerId: 6
        type: null
        labels:
        - label: label
          value: value
        - label: label
          value: value
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        metricName:
          maxLength: 256
          minLength: 3
          pattern: "[a-zA-Z_:][a-zA-Z0-9_:]*"
          type: string
        labels:
          items:
            $ref: '#/components/schemas/PrometheusLabelListDto'
          minItems: 1
          type: array
        type:
          $ref: '#/components/schemas/PrometheusType'
        price:
          exclusiveMinimum: true
          format: double
          maximum: 300000000
          minimum: 0
          type: number
        partnerId:
          format: int32
          type: integer
        operationCredentialId:
          format: int32
          type: integer
        organizationId:
          items:
            format: int32
            type: integer
          type: array
        ruleDiscountRate:
          format: int32
          type: integer
      required:
      - labels
      - metricName
      - name
      - type
      type: object
    RuleForUpdateDto:
      example:
        organizationId: 1
        metricName: metricName
        labelsToUpdate:
        - id: 6
          label: label
          value: value
        - id: 6
          label: label
          value: value
        price: 0.8008281904610115
        ruleDiscountRate: 5
        name: name
        labelsToDelete:
        - id: 6
        - id: 6
        operationCredentialId: 5
        type: null
        labelsToAdd:
        - label: label
          value: value
        - label: label
          value: value
      properties:
        name:
          type: string
        metricName:
          type: string
        type:
          $ref: '#/components/schemas/PrometheusType'
        price:
          format: double
          type: number
        labelsToAdd:
          items:
            $ref: '#/components/schemas/PrometheusLabelListDto'
          type: array
        labelsToDelete:
          items:
            $ref: '#/components/schemas/PrometheusLabelDeleteDto'
          type: array
        labelsToUpdate:
          items:
            $ref: '#/components/schemas/PrometheusLabelUpdateDto'
          type: array
        organizationId:
          format: int32
          type: integer
        ruleDiscountRate:
          format: int32
          type: integer
        operationCredentialId:
          format: int32
          type: integer
      type: object
    SecretDto:
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    SecretSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    SecretSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Secrets:
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
        - namespace: namespace
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/SecretDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SecurityGroupListDto:
      example:
        profileName: profileName
        protocol: protocol
        name: name
        id: 0
        portMinRange: 6
        portMaxRange: 1
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        protocol:
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          type: string
        profileName:
          type: string
      type: object
    SecurityGroupProtocol:
      enum:
      - 100
      - 200
      - 300
      format: int32
      type: integer
    SecurityReportSummary:
      example:
        high: 5
        critical: 9
        low: 5
        medium: 2
        unknown: 7
      properties:
        low:
          format: int64
          type: integer
        high:
          format: int64
          type: integer
        medium:
          format: int64
          type: integer
        unknown:
          format: int64
          type: integer
        critical:
          format: int64
          type: integer
      type: object
    SecurityReportSummaryDto:
      example:
        high: 7
        critical: 2
        low: 2
        medium: 9
        unknown: 3
      properties:
        low:
          format: int64
          type: integer
        high:
          format: int64
          type: integer
        medium:
          format: int64
          type: integer
        unknown:
          format: int64
          type: integer
        critical:
          format: int64
          type: integer
      type: object
    SendEmailAboutProjectExpirationCommand:
      type: object
    ServerActionButtonVisibilityDto:
      example:
        reboot: true
        console: true
        status: true
      properties:
        status:
          type: boolean
        reboot:
          type: boolean
        console:
          type: boolean
      type: object
    ServerChartDto:
      example:
        totalUpdatingCount: 1
        totalDiskSize: 1
        waiting:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalGoogleCount: 6
        google:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        failed:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        tanzu:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalCount: 7
        totalRam: 1
        totalSucceededCount: 7
        totalOpenstackCount: 9
        totalPendingCount: 4
        usedResources:
        - diskSize: 6
          maxRam: 1
          cpu: 6
          maxCpu: 2
          projectName: projectName
          maxDiskSize: 6
          projectId: 9
          ram: 3
        - diskSize: 6
          maxRam: 1
          cpu: 6
          maxCpu: 2
          projectName: projectName
          maxDiskSize: 6
          projectId: 9
          ram: 3
        updating:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalCpu: 1
        totalFailedCount: 6
        totalAzureCount: 9
        openstack:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        totalAwsCount: 5
        totalTanzuCount: 8
        aws:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        azure:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        succeeded:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
        - names:
          - names
          - names
          projectName: projectName
          projectId: 4
      properties:
        aws:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        azure:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        openstack:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        google:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        tanzu:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        failed:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        succeeded:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        waiting:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        updating:
          items:
            $ref: '#/components/schemas/ServerCommonRecordDto'
          type: array
        totalCount:
          format: int32
          type: integer
        totalCpu:
          format: int32
          type: integer
        totalRam:
          format: int64
          type: integer
        totalDiskSize:
          format: int64
          type: integer
        totalFailedCount:
          format: int32
          type: integer
        totalSucceededCount:
          format: int32
          type: integer
        totalUpdatingCount:
          format: int32
          type: integer
        totalPendingCount:
          format: int32
          type: integer
        totalAwsCount:
          format: int32
          type: integer
        totalAzureCount:
          format: int32
          type: integer
        totalOpenstackCount:
          format: int32
          type: integer
        totalGoogleCount:
          format: int32
          type: integer
        totalTanzuCount:
          format: int32
          type: integer
        usedResources:
          items:
            $ref: '#/components/schemas/UserResourceChartDto'
          type: array
      type: object
    ServerCommonRecordDto:
      example:
        names:
        - names
        - names
        projectName: projectName
        projectId: 4
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        names:
          items:
            type: string
          type: array
      type: object
    ServerForCreateDto:
      example:
        proxmoxNFSDiskSize: 5
        role: null
        spotPrice: 5.962133916683182
        count: 1
        availabilityZone: availabilityZone
        proxmoxRole: null
        flavor: flavor
        spotInstance: true
        autoscalingGroup: autoscalingGroup
        diskSize: 6
        hypervisor: hypervisor
        name: name
        kubernetesNodeLabels:
        - value: value
          key: key
        - value: value
          key: key
        projectId: 0
      properties:
        name:
          type: string
        role:
          $ref: '#/components/schemas/CloudRole'
        projectId:
          format: int32
          type: integer
        diskSize:
          format: int64
          type: integer
        flavor:
          type: string
        count:
          format: int32
          type: integer
        spotPrice:
          format: double
          type: number
        spotInstance:
          type: boolean
        autoscalingGroup:
          type: string
        availabilityZone:
          type: string
        proxmoxNFSDiskSize:
          format: int32
          type: integer
        proxmoxRole:
          $ref: '#/components/schemas/ProxmoxRole'
        hypervisor:
          type: string
        kubernetesNodeLabels:
          items:
            $ref: '#/components/schemas/KubernetesNodeLabelsDto'
          type: array
      type: object
    ServerListDto:
      example:
        proxmoxFlavor: proxmoxFlavor
        proxmoxNFSDiskSize: 7
        role: role
        spotPrice: spotPrice
        awsHostName: awsHostName
        actionButtons:
          reboot: true
          console: true
          status: true
        availabilityZone: availabilityZone
        proxmoxRole: proxmoxRole
        organizationId: 6
        shutOff: true
        createdAt: createdAt
        spotInstance: true
        autoscalingGroup: autoscalingGroup
        diskSize: 5
        kubernetesHealth: kubernetesHealth
        googleMachineType: googleMachineType
        cloudType: cloudType
        hypervisor: hypervisor
        id: 0
        kubernetesNodeLabels:
        - value: value
          key: key
        - value: value
          key: key
        ram: 2
        tanzuFlavor: tanzuFlavor
        organizationName: organizationName
        awsInstanceType: awsInstanceType
        lastModifiedBy: lastModifiedBy
        ipAddress: ipAddress
        cpu: 5
        createdBy: createdBy
        azureVmSize: azureVmSize
        providerID: providerID
        name: name
        openstackFlavor: openstackFlavor
        lastModified: lastModified
        projectName: projectName
        projectId: 1
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectName:
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
        ipAddress:
          type: string
        diskSize:
          format: int64
          type: integer
        kubernetesHealth:
          type: string
        googleMachineType:
          type: string
        tanzuFlavor:
          type: string
        proxmoxFlavor:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        role:
          type: string
        status:
          type: string
        createdAt:
          type: string
        openstackFlavor:
          type: string
        awsInstanceType:
          type: string
        azureVmSize:
          type: string
        cloudType:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        spotPrice:
          type: string
        spotInstance:
          type: boolean
        shutOff:
          type: boolean
        autoscalingGroup:
          type: string
        providerID:
          type: string
        awsHostName:
          type: string
        availabilityZone:
          type: string
        hypervisor:
          type: string
        proxmoxRole:
          type: string
        proxmoxNFSDiskSize:
          format: int32
          type: integer
        actionButtons:
          $ref: '#/components/schemas/ServerActionButtonVisibilityDto'
        kubernetesNodeLabels:
          items:
            $ref: '#/components/schemas/KubernetesNodeLabelsDto'
          type: array
      type: object
    ServerTemplateDto:
      example:
        flavor: flavor
        diskSize: 1337518599436.1604
        role: null
        count: 6
      properties:
        role:
          $ref: '#/components/schemas/CloudRole'
        flavor:
          type: string
        diskSize:
          format: double
          maximum: 8796093022208
          minimum: 32212254720
          type: number
        count:
          format: int32
          type: integer
      type: object
    ServersForBillingDto:
      example:
        cpu: 1
        ram: 5
      properties:
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      type: object
    ServersList:
      example:
        data:
        - proxmoxFlavor: proxmoxFlavor
          proxmoxNFSDiskSize: 7
          role: role
          spotPrice: spotPrice
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: proxmoxRole
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5
          kubernetesHealth: kubernetesHealth
          googleMachineType: googleMachineType
          cloudType: cloudType
          hypervisor: hypervisor
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2
          tanzuFlavor: tanzuFlavor
          organizationName: organizationName
          awsInstanceType: awsInstanceType
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          createdBy: createdBy
          azureVmSize: azureVmSize
          providerID: providerID
          name: name
          openstackFlavor: openstackFlavor
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        - proxmoxFlavor: proxmoxFlavor
          proxmoxNFSDiskSize: 7
          role: role
          spotPrice: spotPrice
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: proxmoxRole
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5
          kubernetesHealth: kubernetesHealth
          googleMachineType: googleMachineType
          cloudType: cloudType
          hypervisor: hypervisor
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2
          tanzuFlavor: tanzuFlavor
          organizationName: organizationName
          awsInstanceType: awsInstanceType
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          createdBy: createdBy
          azureVmSize: azureVmSize
          providerID: providerID
          name: name
          openstackFlavor: openstackFlavor
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        totalCount: 9
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ServersListForDetails:
      example:
        data:
        - proxmoxFlavor: proxmoxFlavor
          proxmoxNFSDiskSize: 7
          role: role
          spotPrice: spotPrice
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: proxmoxRole
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5
          kubernetesHealth: kubernetesHealth
          googleMachineType: googleMachineType
          cloudType: cloudType
          hypervisor: hypervisor
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2
          tanzuFlavor: tanzuFlavor
          organizationName: organizationName
          awsInstanceType: awsInstanceType
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          createdBy: createdBy
          azureVmSize: azureVmSize
          providerID: providerID
          name: name
          openstackFlavor: openstackFlavor
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        - proxmoxFlavor: proxmoxFlavor
          proxmoxNFSDiskSize: 7
          role: role
          spotPrice: spotPrice
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: proxmoxRole
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5
          kubernetesHealth: kubernetesHealth
          googleMachineType: googleMachineType
          cloudType: cloudType
          hypervisor: hypervisor
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2
          tanzuFlavor: tanzuFlavor
          organizationName: organizationName
          awsInstanceType: awsInstanceType
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          createdBy: createdBy
          azureVmSize: azureVmSize
          providerID: providerID
          name: name
          openstackFlavor: openstackFlavor
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        project:
          isKubevapEnabled: true
          spotEnabled: true
          alertsTotalCount: 6
          isOpaEnabled: true
          projectRevision: 6
          opaProfileId: 6
          availabilityZones:
          - availabilityZones
          - availabilityZones
          hasAlertingProfile: true
          organizationId: 2
          diskSize: 3.0937452626664474
          hasNextVersion: true
          usedRam: 1
          cloudType: cloudType
          cloudId: 9
          isLocked: true
          accessProfileName: accessProfileName
          kubernetesProfileId: 6
          minSize: 6
          bastion: 5
          worker: 5
          usedCpu: 1
          vmVolumeSizeLimit: 4
          isAutoscalingEnabled: true
          isAutoUpgrade: true
          isKubernetes: true
          kubernetesProfileName: kubernetesProfileName
          cloudProviderMessage: cloudProviderMessage
          accessIp: accessIp
          organizationName: organizationName
          hasSelectedFlavors: true
          cpuLimit: 4
          warningMessage: warningMessage
          quotaId: 3
          vmUsedCpu: 5
          allowSpotWorkers: true
          maxSpotPrice: 6.878052220127876
          vmRamLimit: 1
          isKubernetesCurrentVersionKubevapEnabled: true
          flavor: flavor
          vmUsedRam: 9
          usedDiskSize: 6
          vmUsedVolumeSize: 9
          failureReason: failureReason
          kubernetesCurrentVersion: kubernetesCurrentVersion
          allowFullSpotKubernetes: true
          projectName: projectName
          projectCloudRevision: 9
          projectId: 2
          cloudCredentialRevision: 6
          accessProfileId: 3
          maxSize: 3
          totalCount: 0
          autoscalingGroupName: autoscalingGroupName
          kubeCurrentVersion: kubeCurrentVersion
          quotaMessage: quotaMessage
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          hasNfsServer: true
          projectHealth: projectHealth
          totalHourlyCost: 5.944895607614016
          ramLimit: 7
          opaProfileName: opaProfileName
          s3CredentialId: 2
          isDeprecated: true
          isAllReady: true
          allowSpotVMs: true
          vmCpuLimit: 7
          isMonitoringEnabled: true
          isAllFailedUpgrade: true
          diskSizeLimit: 1
          masterReady: 7
          hasKubeConfigFile: true
          master: 1
          projectStatus: projectStatus
          alertingProfileId: 1
          deleteOnExpiration: true
          cloudName: cloudName
          accessProfileRevision: 8
          isBackupEnabled: true
          hasExpirationWarning: true
          hypervisors:
          - hypervisors
          - hypervisors
          certificationExpiredAt: certificationExpiredAt
          isMaintenanceModeEnabled: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerListDto'
          type: array
        project:
          $ref: '#/components/schemas/ProjectDetailsForServersDto'
      type: object
    ServersSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    ServersSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
          projectName: projectName
          projectId: 1
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
          projectName: projectName
          projectId: 1
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServersSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ServersSearchResponseData:
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        id: 0
        projectName: projectName
        projectId: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
      type: object
    ServiceDto:
      example:
        ip: "{}"
        namespace: namespace
        metadataName: metadataName
        type: type
        age: age
      properties:
        metadataName:
          type: string
        namespace:
          type: string
        age:
          type: string
        type:
          type: string
        ip:
          type: object
      type: object
    ServiceSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    ServiceSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Services:
      example:
        data:
        - ip: "{}"
          namespace: namespace
          metadataName: metadataName
          type: type
          age: age
        - ip: "{}"
          namespace: namespace
          metadataName: metadataName
          type: type
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SetTicketPriorityCommand:
      example:
        id: id
        priority: null
      properties:
        id:
          minLength: 1
          type: string
        priority:
          $ref: '#/components/schemas/TicketPriority'
      required:
      - id
      type: object
    ShelveStandAloneVmCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    SilenceOperationsCommand:
      example:
        mode: mode
        reason: reason
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        mode:
          minLength: 1
          type: string
        reason:
          type: string
      required:
      - id
      - mode
      type: object
    SimplePrometheusEntity:
      example:
        prometheusRuleName: prometheusRuleName
        prometheusRuleId: 1
      properties:
        prometheusRuleId:
          format: int32
          type: integer
        prometheusRuleName:
          type: string
      type: object
    SlackConfigurationDto:
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        channel: channel
        id: 0
        url: url
        slackType: slackType
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        url:
          type: string
        channel:
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        slackType:
          type: string
      type: object
    SlackConfigurationList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          channel: channel
          id: 0
          url: url
          slackType: slackType
        - organizationId: 6
          organizationName: organizationName
          name: name
          channel: channel
          id: 0
          url: url
          slackType: slackType
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/SlackConfigurationDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SlackType:
      enum:
      - 100
      - 200
      format: int32
      type: integer
    SourceRef:
      example:
        kind: kind
        name: name
      properties:
        kind:
          type: string
        name:
          type: string
      type: object
    SpotVmOperationCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    SpotWorkerOperationCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    SshKeyCommand:
      example:
        sshPublicKey: sshPublicKey
      properties:
        sshPublicKey:
          minLength: 1
          type: string
      required:
      - sshPublicKey
      type: object
    SshUserCreateDto:
      example:
        sshPublicKey: sshPublicKey
        name: name
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^[a-z_][a-z0-9_-]*[$]?$"
          type: string
        sshPublicKey:
          minLength: 1
          type: string
      required:
      - name
      - sshPublicKey
      type: object
    SshUserListDto:
      example:
        sshPublicKey: sshPublicKey
        isDeleted: true
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        sshPublicKey:
          type: string
        isDeleted:
          type: boolean
      type: object
    SshUsersListDto:
      example:
        sshPublicKey: sshPublicKey
        accessProfileName: accessProfileName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        sshPublicKey:
          type: string
        accessProfileName:
          type: string
      type: object
    StandAloneMetaDataDto:
      example:
        value: value
        key: key
      properties:
        key:
          maxLength: 63
          minLength: 1
          type: string
        value:
          maxLength: 63
          minLength: 1
          type: string
      required:
      - key
      - value
      type: object
    StandAloneMetaDataDtoForVm:
      example:
        id: 2
        value: value
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          type: string
        value:
          type: string
      type: object
    StandAloneProfileCreateCommand:
      example:
        organizationId: 1
        name: name
        securityGroups:
        - protocol: null
          name: name
          portMinRange: 0
          portMaxRange: 6
          remoteIpPrefix: remoteIpPrefix
        - protocol: null
          name: name
          portMinRange: 0
          portMaxRange: 6
          remoteIpPrefix: remoteIpPrefix
        publicKey: publicKey
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        publicKey:
          maxLength: 3000
          minLength: 3
          type: string
        securityGroups:
          items:
            $ref: '#/components/schemas/StandAloneProfileSecurityGroupDto'
          type: array
        organizationId:
          format: int32
          type: integer
      required:
      - name
      - publicKey
      type: object
    StandAloneProfileForDetailsDto:
      example:
        name: name
        securityGroups:
        - protocol: protocol
          name: name
          id: 9
          portMinRange: 3
          portMaxRange: 2
          isRdpPortEnabled: true
          remoteIpPrefix: remoteIpPrefix
        - protocol: protocol
          name: name
          id: 9
          portMinRange: 3
          portMaxRange: 2
          isRdpPortEnabled: true
          remoteIpPrefix: remoteIpPrefix
        id: 7
        publicKey: publicKey
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        publicKey:
          type: string
        securityGroups:
          items:
            $ref: '#/components/schemas/StandAloneProfileSecurityGroupForDetailsDto'
          type: array
      type: object
    StandAloneProfileFullDto:
      example:
        standAloneProfileSecurityGroups:
        - protocol: protocol
          name: name
          id: 9
          portMinRange: 3
          portMaxRange: 2
          priority: 4
          remoteIpPrefix: remoteIpPrefix
        - protocol: protocol
          name: name
          id: 9
          portMinRange: 3
          portMaxRange: 2
          priority: 4
          remoteIpPrefix: remoteIpPrefix
        name: name
        id: 2
        publicKey: publicKey
        revision: 7
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        publicKey:
          type: string
        revision:
          format: int32
          type: integer
        standAloneProfileSecurityGroups:
          items:
            $ref: '#/components/schemas/StandAloneProfileSecurityGroupFullDto'
          type: array
      type: object
    StandAloneProfileLockManagementCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          type: string
      type: object
    StandAloneProfileSecurityGroupDto:
      example:
        protocol: null
        name: name
        portMinRange: 0
        portMaxRange: 6
        remoteIpPrefix: remoteIpPrefix
      properties:
        name:
          maxLength: 30
          minLength: 3
          type: string
        protocol:
          $ref: '#/components/schemas/SecurityGroupProtocol'
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          minLength: 1
          type: string
      required:
      - name
      - remoteIpPrefix
      type: object
    StandAloneProfileSecurityGroupForDetailsDto:
      example:
        protocol: protocol
        name: name
        id: 9
        portMinRange: 3
        portMaxRange: 2
        isRdpPortEnabled: true
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        protocol:
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          type: string
        isRdpPortEnabled:
          type: boolean
      type: object
    StandAloneProfileSecurityGroupFullDto:
      example:
        protocol: protocol
        name: name
        id: 9
        portMinRange: 3
        portMaxRange: 2
        priority: 4
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        protocol:
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          type: string
        priority:
          format: int32
          type: integer
      type: object
    StandAloneProfileUpdateCommand:
      example:
        name: name
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
      required:
      - id
      - name
      type: object
    StandAloneProfiles:
      example:
        data:
        - organizationId: 5
          standaloneVms:
          - name: name
            id: 6
            projectId: 1
          - name: name
            id: 6
            projectId: 1
          createdAt: createdAt
          organizationName: organizationName
          partnerLogo: partnerLogo
          isLocked: true
          name: name
          id: 0
          publicKey: publicKey
        - organizationId: 5
          standaloneVms:
          - name: name
            id: 6
            projectId: 1
          - name: name
            id: 6
            projectId: 1
          createdAt: createdAt
          organizationName: organizationName
          partnerLogo: partnerLogo
          isLocked: true
          name: name
          id: 0
          publicKey: publicKey
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/StandAloneProfilesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StandAloneProfilesListDto:
      example:
        organizationId: 5
        standaloneVms:
        - name: name
          id: 6
          projectId: 1
        - name: name
          id: 6
          projectId: 1
        createdAt: createdAt
        organizationName: organizationName
        partnerLogo: partnerLogo
        isLocked: true
        name: name
        id: 0
        publicKey: publicKey
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        publicKey:
          type: string
        isLocked:
          type: boolean
        standaloneVms:
          items:
            $ref: '#/components/schemas/StandAloneVmSmallDetailDto'
          type: array
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        partnerLogo:
          type: string
        createdAt:
          type: string
      type: object
    StandAloneProfilesSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    StandAloneProfilesSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StandAloneVmDiskDto:
      example:
        volumeType: volumeType
        size: 2302
        name: name
        lunId: 7
        deviceName: deviceName
      properties:
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        size:
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
        volumeType:
          type: string
        deviceName:
          type: string
        lunId:
          format: int32
          type: integer
      required:
      - name
      type: object
    StandAloneVmDiskForDetailsDto:
      example:
        volumeType: volumeType
        targetSize: 5
        name: name
        lunId: lunId
        id: 1
        deviceName: deviceName
        currentSize: 5
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        currentSize:
          format: int64
          type: integer
        targetSize:
          format: int64
          type: integer
        volumeType:
          type: string
        deviceName:
          type: string
        lunId:
          type: string
        status:
          type: string
      type: object
    StandAloneVmDiskFullDto:
      example:
        volumeType: volumeType
        size: 1
        name: name
        lunId: lunId
        id: 7
        deviceName: deviceName
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        size:
          format: int64
          type: integer
        volumeType:
          type: string
        deviceName:
          type: string
        lunId:
          type: string
        status:
          type: string
      type: object
    StandAloneVmDiskStatus:
      enum:
      - 100
      - 200
      - 300
      - 400
      - 500
      - 600
      format: int32
      type: integer
    StandAloneVmFullDto:
      example:
        volumeType: volumeType
        sshPublicKey: sshPublicKey
        spotPrice: spotPrice
        flavorId: flavorId
        publicIpEnabled: true
        availabilityZone: availabilityZone
        volumeSize: 6
        shutOff: true
        spotInstance: true
        password: password
        hypervisor: hypervisor
        isWindows: true
        id: 0
        ram: 1
        standAloneVmDisks:
        - volumeType: volumeType
          size: 1
          name: name
          lunId: lunId
          id: 7
          deviceName: deviceName
          status: status
        - volumeType: volumeType
          size: 1
          name: name
          lunId: lunId
          id: 7
          deviceName: deviceName
          status: status
        imageId: imageId
        imageName: imageName
        ipAddress: ipAddress
        cpu: 5
        publicIp: publicIp
        revision: 5
        cloudInit: cloudInit
        name: name
        standAloneProfile:
          standAloneProfileSecurityGroups:
          - protocol: protocol
            name: name
            id: 9
            portMinRange: 3
            portMaxRange: 2
            priority: 4
            remoteIpPrefix: remoteIpPrefix
          - protocol: protocol
            name: name
            id: 9
            portMinRange: 3
            portMaxRange: 2
            priority: 4
            remoteIpPrefix: remoteIpPrefix
          name: name
          id: 2
          publicKey: publicKey
          revision: 7
        status: status
        username: username
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        flavorId:
          type: string
        volumeSize:
          format: int64
          type: integer
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        volumeType:
          type: string
        sshPublicKey:
          type: string
        publicIpEnabled:
          type: boolean
        imageId:
          type: string
        imageName:
          type: string
        status:
          type: string
        revision:
          format: int32
          type: integer
        shutOff:
          type: boolean
        publicIp:
          type: string
        ipAddress:
          type: string
        cloudInit:
          type: string
        isWindows:
          type: boolean
        standAloneProfile:
          $ref: '#/components/schemas/StandAloneProfileFullDto'
        standAloneVmDisks:
          items:
            $ref: '#/components/schemas/StandAloneVmDiskFullDto'
          type: array
        username:
          type: string
        password:
          type: string
        spotPrice:
          type: string
        hypervisor:
          type: string
        spotInstance:
          type: boolean
        availabilityZone:
          type: string
      type: object
    StandAloneVmIpManagementCommand:
      example:
        mode: mode
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        mode:
          minLength: 1
          type: string
      required:
      - id
      - mode
      type: object
    StandAloneVmListForDetails:
      example:
        data:
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: spotPrice
          disks:
          - volumeType: volumeType
            targetSize: 5
            name: name
            lunId: lunId
            id: 1
            deviceName: deviceName
            currentSize: 5
            status: status
          - volumeType: volumeType
            targetSize: 5
            name: name
            lunId: lunId
            id: 1
            deviceName: deviceName
            currentSize: 5
            status: status
          publicIpEnabled: true
          actionButtons:
            reboot: true
            showConsole: true
            stop: true
            start: true
            unshelve: true
            showStatus: true
            shelve: true
          volumeSize: 6
          createdAt: createdAt
          spotInstance: true
          isWindows: true
          id: 0
          imageName: imageName
          imageId: imageId
          lastModifiedBy: lastModifiedBy
          profile:
            name: name
            securityGroups:
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            id: 7
            publicKey: publicKey
          ipAddress: ipAddress
          publicIp: publicIp
          standAloneMetaDatas:
          - id: 2
            value: value
            key: key
          - id: 2
            value: value
            key: key
          targetFlavor: targetFlavor
          cloudInit: cloudInit
          createdBy: createdBy
          name: name
          currentFlavor: currentFlavor
          lastModified: lastModified
          status: status
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: spotPrice
          disks:
          - volumeType: volumeType
            targetSize: 5
            name: name
            lunId: lunId
            id: 1
            deviceName: deviceName
            currentSize: 5
            status: status
          - volumeType: volumeType
            targetSize: 5
            name: name
            lunId: lunId
            id: 1
            deviceName: deviceName
            currentSize: 5
            status: status
          publicIpEnabled: true
          actionButtons:
            reboot: true
            showConsole: true
            stop: true
            start: true
            unshelve: true
            showStatus: true
            shelve: true
          volumeSize: 6
          createdAt: createdAt
          spotInstance: true
          isWindows: true
          id: 0
          imageName: imageName
          imageId: imageId
          lastModifiedBy: lastModifiedBy
          profile:
            name: name
            securityGroups:
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            id: 7
            publicKey: publicKey
          ipAddress: ipAddress
          publicIp: publicIp
          standAloneMetaDatas:
          - id: 2
            value: value
            key: key
          - id: 2
            value: value
            key: key
          targetFlavor: targetFlavor
          cloudInit: cloudInit
          createdBy: createdBy
          name: name
          currentFlavor: currentFlavor
          lastModified: lastModified
          status: status
        project:
          organizationName: organizationName
          hasSelectedFlavors: true
          allowSpotVMs: true
          cloudCredentialRevision: 1
          availabilityZones:
          - availabilityZones
          - availabilityZones
          allowSpotWorkers: true
          maxSpotPrice: 6.84685269835264
          organizationId: 1
          projectStatus: projectStatus
          cloudType: cloudType
          cloudName: cloudName
          cloudId: 7
          isLocked: true
          allowFullSpotKubernetes: true
          hypervisors:
          - hypervisors
          - hypervisors
          totalHourlyCost: 7.457744773683766
          projectName: projectName
          projectCloudRevision: 1
          projectId: 4
          isMaintenanceModeEnabled: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/StandaloneVmsListForDetailsDto'
          type: array
        project:
          $ref: '#/components/schemas/ProjectDetailsForVmsDto'
      type: object
    StandAloneVmSmallDetailDto:
      example:
        name: name
        id: 6
        projectId: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectId:
          format: int32
          type: integer
      type: object
    StandAloneVmStatus:
      enum:
      - 100
      - 200
      - 300
      - 400
      - 500
      - 600
      format: int32
      type: integer
    StandaloneProfileListDto:
      example:
        standAloneProfileSecurityGroups:
        - protocol: protocol
          name: name
          id: 2
          portMinRange: 4
          portMaxRange: 7
          remoteIpPrefix: remoteIpPrefix
        - protocol: protocol
          name: name
          id: 2
          portMinRange: 4
          portMaxRange: 7
          remoteIpPrefix: remoteIpPrefix
        isLocked: true
        name: name
        id: 9
        revision: 3
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        revision:
          format: int32
          type: integer
        isLocked:
          type: boolean
        standAloneProfileSecurityGroups:
          items:
            $ref: '#/components/schemas/StandaloneProfileSecurityGroupListDto'
          type: array
      type: object
    StandaloneProfileSecurityGroupListDto:
      example:
        protocol: protocol
        name: name
        id: 2
        portMinRange: 4
        portMaxRange: 7
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        protocol:
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          type: string
      type: object
    StandaloneVisibilityDto:
      example:
        reboot: true
        showConsole: true
        stop: true
        start: true
        unshelve: true
        showStatus: true
        shelve: true
      properties:
        showStatus:
          type: boolean
        showConsole:
          type: boolean
        shelve:
          type: boolean
        unshelve:
          type: boolean
        start:
          type: boolean
        stop:
          type: boolean
        reboot:
          type: boolean
      type: object
    StandaloneVmListDto:
      example:
        volumeType: volumeType
        imageName: imageName
        organizationName: organizationName
        flavorId: flavorId
        publicIpEnabled: true
        ipAddress: ipAddress
        cpu: 5
        publicIp: publicIp
        volumeSize: 6
        revision: 2
        organizationId: 1
        createdAt: createdAt
        createdBy: createdBy
        cloudType: cloudType
        name: name
        isWindows: true
        id: 0
        lastModified: lastModified
        projectName: projectName
        projectId: 7
        standAloneProfile:
          standAloneProfileSecurityGroups:
          - protocol: protocol
            name: name
            id: 2
            portMinRange: 4
            portMaxRange: 7
            remoteIpPrefix: remoteIpPrefix
          - protocol: protocol
            name: name
            id: 2
            portMinRange: 4
            portMaxRange: 7
            remoteIpPrefix: remoteIpPrefix
          isLocked: true
          name: name
          id: 9
          revision: 3
        ram: 5
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        flavorId:
          type: string
        volumeSize:
          format: int64
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        volumeType:
          type: string
        publicIpEnabled:
          type: boolean
        publicIp:
          type: string
        ipAddress:
          type: string
        cloudType:
          type: string
        imageName:
          type: string
        revision:
          format: int32
          type: integer
        isWindows:
          type: boolean
        status:
          type: string
        projectName:
          type: string
        projectId:
          format: int32
          type: integer
        standAloneProfile:
          $ref: '#/components/schemas/StandaloneProfileListDto'
        createdAt:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
      type: object
    StandaloneVmsForBillingDto:
      example:
        cpu: 5
        ram: 2
      properties:
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      type: object
    StandaloneVmsList:
      example:
        data:
        - volumeType: volumeType
          imageName: imageName
          organizationName: organizationName
          flavorId: flavorId
          publicIpEnabled: true
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          volumeSize: 6
          revision: 2
          organizationId: 1
          createdAt: createdAt
          createdBy: createdBy
          cloudType: cloudType
          name: name
          isWindows: true
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 7
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            isLocked: true
            name: name
            id: 9
            revision: 3
          ram: 5
          status: status
        - volumeType: volumeType
          imageName: imageName
          organizationName: organizationName
          flavorId: flavorId
          publicIpEnabled: true
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          volumeSize: 6
          revision: 2
          organizationId: 1
          createdAt: createdAt
          createdBy: createdBy
          cloudType: cloudType
          name: name
          isWindows: true
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 7
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            isLocked: true
            name: name
            id: 9
            revision: 3
          ram: 5
          status: status
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/StandaloneVmListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StandaloneVmsListForDetailsDto:
      example:
        volumeType: volumeType
        sshPublicKey: sshPublicKey
        spotPrice: spotPrice
        disks:
        - volumeType: volumeType
          targetSize: 5
          name: name
          lunId: lunId
          id: 1
          deviceName: deviceName
          currentSize: 5
          status: status
        - volumeType: volumeType
          targetSize: 5
          name: name
          lunId: lunId
          id: 1
          deviceName: deviceName
          currentSize: 5
          status: status
        publicIpEnabled: true
        actionButtons:
          reboot: true
          showConsole: true
          stop: true
          start: true
          unshelve: true
          showStatus: true
          shelve: true
        volumeSize: 6
        createdAt: createdAt
        spotInstance: true
        isWindows: true
        id: 0
        imageName: imageName
        imageId: imageId
        lastModifiedBy: lastModifiedBy
        profile:
          name: name
          securityGroups:
          - protocol: protocol
            name: name
            id: 9
            portMinRange: 3
            portMaxRange: 2
            isRdpPortEnabled: true
            remoteIpPrefix: remoteIpPrefix
          - protocol: protocol
            name: name
            id: 9
            portMinRange: 3
            portMaxRange: 2
            isRdpPortEnabled: true
            remoteIpPrefix: remoteIpPrefix
          id: 7
          publicKey: publicKey
        ipAddress: ipAddress
        publicIp: publicIp
        standAloneMetaDatas:
        - id: 2
          value: value
          key: key
        - id: 2
          value: value
          key: key
        targetFlavor: targetFlavor
        cloudInit: cloudInit
        createdBy: createdBy
        name: name
        currentFlavor: currentFlavor
        lastModified: lastModified
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        imageName:
          type: string
        imageId:
          type: string
        status:
          type: string
        cloudInit:
          type: string
        volumeType:
          type: string
        volumeSize:
          format: int64
          type: integer
        createdAt:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        sshPublicKey:
          type: string
        currentFlavor:
          type: string
        targetFlavor:
          type: string
        publicIpEnabled:
          type: boolean
        publicIp:
          type: string
        ipAddress:
          type: string
        spotPrice:
          type: string
        spotInstance:
          type: boolean
        actionButtons:
          $ref: '#/components/schemas/StandaloneVisibilityDto'
        isWindows:
          type: boolean
        disks:
          items:
            $ref: '#/components/schemas/StandAloneVmDiskForDetailsDto'
          type: array
        standAloneMetaDatas:
          items:
            $ref: '#/components/schemas/StandAloneMetaDataDtoForVm'
          type: array
        profile:
          $ref: '#/components/schemas/StandAloneProfileForDetailsDto'
      type: object
    StandaloneVmsListForPoller:
      example:
        data:
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: spotPrice
          flavorId: flavorId
          publicIpEnabled: true
          availabilityZone: availabilityZone
          volumeSize: 6
          shutOff: true
          spotInstance: true
          password: password
          hypervisor: hypervisor
          isWindows: true
          id: 0
          ram: 1
          standAloneVmDisks:
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          imageId: imageId
          imageName: imageName
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          revision: 5
          cloudInit: cloudInit
          name: name
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            name: name
            id: 2
            publicKey: publicKey
            revision: 7
          status: status
          username: username
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: spotPrice
          flavorId: flavorId
          publicIpEnabled: true
          availabilityZone: availabilityZone
          volumeSize: 6
          shutOff: true
          spotInstance: true
          password: password
          hypervisor: hypervisor
          isWindows: true
          id: 0
          ram: 1
          standAloneVmDisks:
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          - volumeType: volumeType
            size: 1
            name: name
            lunId: lunId
            id: 7
            deviceName: deviceName
            status: status
          imageId: imageId
          imageName: imageName
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          revision: 5
          cloudInit: cloudInit
          name: name
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 9
              portMinRange: 3
              portMaxRange: 2
              priority: 4
              remoteIpPrefix: remoteIpPrefix
            name: name
            id: 2
            publicKey: publicKey
            revision: 7
          status: status
          username: username
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/StandAloneVmFullDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StartStandaloneVmCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    Status:
      example:
        phase: phase
        lastBackup: 2000-01-23T04:56:07.000+00:00
      properties:
        lastBackup:
          format: date-time
          type: string
        phase:
          type: string
      type: object
    StopStandaloneVmCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    StorageClassDto:
      example:
        volumeBindingMode: volumeBindingMode
        provisioner: provisioner
        reclaimPolicy: reclaimPolicy
        allowVolumeExpansion: true
        metadataName: metadataName
        age: age
      properties:
        metadataName:
          type: string
        age:
          type: string
        provisioner:
          type: string
        reclaimPolicy:
          type: string
        volumeBindingMode:
          type: string
        allowVolumeExpansion:
          type: boolean
      type: object
    StorageClasses:
      example:
        data:
        - volumeBindingMode: volumeBindingMode
          provisioner: provisioner
          reclaimPolicy: reclaimPolicy
          allowVolumeExpansion: true
          metadataName: metadataName
          age: age
        - volumeBindingMode: volumeBindingMode
          provisioner: provisioner
          reclaimPolicy: reclaimPolicy
          allowVolumeExpansion: true
          metadataName: metadataName
          age: age
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/StorageClassDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StorageListCommand:
      example:
        tokenId: tokenId
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          minLength: 1
          type: string
        tokenId:
          minLength: 1
          type: string
        tokenSecret:
          minLength: 1
          type: string
      required:
      - tokenId
      - tokenSecret
      - url
      type: object
    StripeInvoiceListDto:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 0.8008281904610115
        chargeReason: chargeReason
        id: id
        invoiceStatus: invoiceStatus
        chargeStatus: chargeStatus
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        invoiceStatus:
          type: string
        chargeStatus:
          type: string
        chargeReason:
          type: string
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      type: object
    StripeInvoices:
      example:
        data:
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: 0.8008281904610115
          chargeReason: chargeReason
          id: id
          invoiceStatus: invoiceStatus
          chargeStatus: chargeStatus
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: 0.8008281904610115
          chargeReason: chargeReason
          id: id
          invoiceStatus: invoiceStatus
          chargeStatus: chargeStatus
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/StripeInvoiceListDto'
          type: array
      type: object
    StsDto:
      example:
        namespace: namespace
        metadataName: metadataName
        age: age
        status: status
      properties:
        metadataName:
          type: string
        status:
          type: string
        namespace:
          type: string
        age:
          type: string
      type: object
    StsList:
      example:
        data:
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        - namespace: namespace
          metadataName: metadataName
          age: age
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/StsDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StsSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    StsSearchList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonSearchKubernetesResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Subnet:
      example:
        name: name
        cidr: cidr
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        cidr:
          type: string
      type: object
    Subresource:
      example:
        metadata:
          vcsSubPath: vcsSubPath
          path: path
          vcsCommitTimestamp: 2000-01-23T04:56:07.000+00:00
          vcsCommitMessage: vcsCommitMessage
          vcsBranch: vcsBranch
          vcsCommitAuthorName: vcsCommitAuthorName
          type: type
          infracostCommand: infracostCommand
          vcsCommitSha: vcsCommitSha
          vcsRepositoryUrl: vcsRepositoryUrl
          vcsCommitAuthorEmail: vcsCommitAuthorEmail
        name: name
        hourlyCost: hourlyCost
        costComponents:
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          monthlyCost: monthlyCost
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          monthlyCost: monthlyCost
        monthlyCost: monthlyCost
      properties:
        name:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        hourlyCost:
          type: string
        monthlyCost:
          type: string
        costComponents:
          items:
            $ref: '#/components/schemas/CostComponent'
          type: array
      type: object
    SyncAppProxyCommand:
      type: object
    SyncBackupCredentialsCommand:
      type: object
    SyncOpaProfilesCommand:
      type: object
    SyncOrganizationsCommand:
      type: object
    SyncProjectAppCommand:
      example:
        projectAppId: 0
      properties:
        projectAppId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
      required:
      - projectAppId
      type: object
    SyncProjectAppsCommand:
      type: object
    SyncProjectsCommand:
      type: object
    TanzuCredentialsForProjectDto:
      example:
        volumeType: volumeType
        password: password
        port: 6
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          type: string
        url:
          type: string
        password:
          type: string
        volumeType:
          type: string
        namespace:
          type: string
        port:
          format: int32
          type: integer
      type: object
    TanzuCredentialsList:
      example:
        data:
        - volumeType: volumeType
          projectCount: 9
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 2
          createdAt: createdAt
          isDefault: true
          port: 3
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 7
          lastModified: lastModified
          continentName: continentName
          username: username
        - volumeType: volumeType
          projectCount: 9
          projects:
          - name: name
            id: 0
          - name: name
            id: 0
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 2
          createdAt: createdAt
          isDefault: true
          port: 3
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 7
          lastModified: lastModified
          continentName: continentName
          username: username
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/TanzuCredentialsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    TanzuCredentialsListDto:
      example:
        volumeType: volumeType
        projectCount: 9
        projects:
        - name: name
          id: 0
        - name: name
          id: 0
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        url: url
        organizationId: 2
        createdAt: createdAt
        isDefault: true
        port: 3
        createdBy: createdBy
        isLocked: true
        name: name
        namespace: namespace
        id: 7
        lastModified: lastModified
        continentName: continentName
        username: username
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        username:
          type: string
        url:
          type: string
        volumeType:
          type: string
        namespace:
          type: string
        port:
          format: int32
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/CommonDropdownDto'
          type: array
        createdBy:
          type: string
        createdAt:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          type: string
      type: object
    TanzuFlavorList:
      example:
        data:
        - name: name
          cpu: 0
          ram: 6
        - name: name
          cpu: 0
          ram: 6
        totalCount: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/TanzuFlavorsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    TanzuFlavorsListDto:
      example:
        name: name
        cpu: 0
        ram: 6
      properties:
        name:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      type: object
    TanzuImageList:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          imageId: imageId
          name: name
          details: "{}"
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          imageId: imageId
          name: name
          details: "{}"
          type: type
        totalCount: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/TanzuImagesListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    TanzuImagesListDto:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        imageId: imageId
        name: name
        details: "{}"
        type: type
      properties:
        imageId:
          type: string
        name:
          type: string
        createdAt:
          format: date-time
          type: string
        type:
          type: string
        details:
          type: object
      type: object
    TanzuStorageListCommand:
      example:
        password: password
        port: 0
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          type: string
        url:
          type: string
        password:
          type: string
        namespace:
          type: string
        port:
          format: int32
          type: integer
      type: object
    TicketPriority:
      enum:
      - 100
      - 200
      - 300
      format: int32
      type: integer
    ToggleDemoModeCommand:
      example:
        mode: mode
      properties:
        mode:
          type: string
      type: object
    ToggleKeycloakCommand:
      example:
        mode: mode
      properties:
        mode:
          type: string
      type: object
    TransferList:
      example:
        userName: userName
        userId: userId
      properties:
        userId:
          type: string
        userName:
          type: string
      type: object
    TransferTicketCommand:
      example:
        userId: userId
        ticketId: ticketId
      properties:
        ticketId:
          minLength: 1
          type: string
        userId:
          minLength: 1
          type: string
      required:
      - ticketId
      - userId
      type: object
    TriggerTemplateCommand:
      type: object
    TryForFreeCommand:
      example:
        organizationName: organizationName
        email: email
        username: username
      properties:
        organizationName:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        username:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        email:
          format: email
          maxLength: 200
          minLength: 3
          type: string
      required:
      - email
      - organizationName
      - username
      type: object
    UnbindAppRepositoryCommand:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          items:
            type: string
          type: array
      type: object
    UnbindFlavorFromProjectCommand:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          type: array
      type: object
    UnshelveStandaloneVmCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    UpdateAccessProfileDto:
      example:
        httpProxy: httpProxy
        name: name
      properties:
        name:
          type: string
        httpProxy:
          type: string
      type: object
    UpdateAlertingProfileCommand:
      example:
        organizationId: 1
        slackConfigurationId: 6
        reminder: null
        name: name
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        slackConfigurationId:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        reminder:
          $ref: '#/components/schemas/AlertingReminder'
      required:
      - id
      type: object
    UpdateAwsCommand:
      example:
        awsAccessKeyId: awsAccessKeyId
        name: name
        id: 0
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        awsSecretAccessKey:
          minLength: 1
          type: string
        awsAccessKeyId:
          minLength: 1
          type: string
      required:
      - awsAccessKeyId
      - awsSecretAccessKey
      - id
      - name
      type: object
    UpdateAzureCommand:
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        name: name
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        azureClientSecret:
          minLength: 1
          type: string
        azureClientId:
          minLength: 1
          type: string
      required:
      - azureClientId
      - azureClientSecret
      - id
      - name
      type: object
    UpdateCatalogDto:
      example:
        isBound: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    UpdateHypervisorsCommand:
      example:
        hypervisors:
        - hypervisors
        - hypervisors
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        hypervisors:
          items:
            type: string
          type: array
      required:
      - id
      type: object
    UpdateInvoiceDto:
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 6.027456183070403
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 0
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          type: string
        price:
          format: double
          type: number
      type: object
    UpdateKubernetesAlertDto:
      example:
        isSilenced: true
        fingerprint: fingerprint
        startsAt: 2000-01-23T04:56:07.000+00:00
        silenceReason: silenceReason
        endsAt: 2000-01-23T04:56:07.000+00:00
        status: status
        labels: "{}"
      properties:
        status:
          type: string
        labels:
          type: object
        startsAt:
          format: date-time
          type: string
        endsAt:
          format: date-time
          type: string
        fingerprint:
          type: string
        isSilenced:
          type: boolean
        silenceReason:
          type: string
      type: object
    UpdateOpenStackCommand:
      example:
        openStackPassword: openStackPassword
        name: name
        id: 0
        openStackUser: openStackUser
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        openStackUser:
          minLength: 1
          type: string
        openStackPassword:
          minLength: 1
          type: string
      required:
      - id
      - name
      - openStackPassword
      - openStackUser
      type: object
    UpdateOrganizationCommand:
      example:
        country: country
        discountRate: 6.027456183070403
        address: address
        city: city
        fullName: fullName
        isEligibleUpdateSubscription: true
        phone: phone
        billingEmail: billingEmail
        isLocked: true
        name: name
        id: 0
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        fullName:
          minLength: 1
          type: string
        phone:
          type: string
        email:
          type: string
        address:
          type: string
        country:
          type: string
        city:
          type: string
        vatNumber:
          type: string
        isLocked:
          type: boolean
        billingEmail:
          type: string
        discountRate:
          format: double
          type: number
        isEligibleUpdateSubscription:
          type: boolean
      required:
      - fullName
      - name
      type: object
    UpdateOrganizationSubscriptionCommand:
      example:
        isYearly: true
        subscriptionId: 0
      properties:
        subscriptionId:
          format: int32
          type: integer
        isYearly:
          type: boolean
      type: object
    UpdatePaymentIdCommand:
      example:
        paymentIntentId: paymentIntentId
        paymentMethodId: paymentMethodId
      properties:
        paymentMethodId:
          type: string
        paymentIntentId:
          type: string
      type: object
    UpdateProjectAppStatusCommand:
      type: object
    UpdateProjectGroupDto:
      example:
        name: name
        projectIds:
        - 0
        - 0
      properties:
        name:
          type: string
        projectIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    UpdateProjectQuotaMessageCommand:
      type: object
    UpdateProjectUserDto:
      example:
        isBound: true
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        isBound:
          type: boolean
      type: object
    UpdateProjectUserGroupDto:
      example:
        userGroupId: 0
        isBound: true
      properties:
        userGroupId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    UpdateProxmoxCommand:
      example:
        tokenId: tokenId
        name: name
        id: 0
        tokenSecret: tokenSecret
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        tokenId:
          minLength: 1
          type: string
        tokenSecret:
          minLength: 1
          type: string
      required:
      - id
      - name
      - tokenId
      - tokenSecret
      type: object
    UpdateQuotaCommand:
      example:
        serverRam: 16118616864787
        vmCpu: 563738
        serverDiskSize: 65567362554588
        vmRam: 25313078315917
        quotaId: 0
        vmVolumeSize: 72309
        serverCpu: 602746
      properties:
        quotaId:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        serverCpu:
          format: int64
          maximum: 1000000
          minimum: 2
          type: integer
        serverRam:
          format: int64
          maximum: 109951162777600
          minimum: 2147483648
          type: integer
        serverDiskSize:
          format: int64
          maximum: 109951162777600
          minimum: 32212254720
          type: integer
        vmCpu:
          format: int64
          maximum: 1000000
          minimum: 1
          type: integer
        vmRam:
          format: int64
          maximum: 109951162777600
          minimum: 1073741824
          type: integer
        vmVolumeSize:
          format: int64
          maximum: 102400
          minimum: 1
          type: integer
      required:
      - quotaId
      type: object
    UpdateServerCommand:
      example:
        instanceId: instanceId
        providerID: providerID
        awsHostName: awsHostName
        ip: ip
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        ip:
          maxLength: 300
          minLength: 3
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          type: string
        instanceId:
          type: string
        providerID:
          type: string
        awsHostName:
          type: string
      required:
      - id
      - ip
      type: object
    UpdateServerHealthDto:
      example:
        serverHealth: serverHealth
        ipAddress: ipAddress
      properties:
        ipAddress:
          type: string
        serverHealth:
          type: string
      type: object
    UpdateSlackConfigurationDto:
      example:
        organizationId: 0
        name: name
        channel: channel
        url: url
        slackType: null
      properties:
        organizationId:
          format: int32
          type: integer
        name:
          type: string
        url:
          type: string
        channel:
          type: string
        slackType:
          $ref: '#/components/schemas/SlackType'
      type: object
    UpdateStandAloneVmCommand:
      example:
        instanceId: instanceId
        disks:
        - name: name
          id: id
          deviceName: deviceName
        - name: name
          id: id
          deviceName: deviceName
        ipAddress: ipAddress
        flavorId: flavorId
        publicIp: publicIp
        id: 0
        revision: 6
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        ipAddress:
          type: string
        publicIp:
          type: string
        instanceId:
          type: string
        flavorId:
          type: string
        revision:
          format: int32
          type: integer
        disks:
          items:
            $ref: '#/components/schemas/UpdateStandAloneVmDiskDto'
          type: array
      required:
      - id
      type: object
    UpdateStandAloneVmDiskDto:
      example:
        name: name
        id: id
        deviceName: deviceName
      properties:
        name:
          type: string
        deviceName:
          type: string
        id:
          type: string
      type: object
    UpdateStandAloneVmFlavorCommand:
      example:
        flavor: flavor
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        flavor:
          minLength: 1
          type: string
      required:
      - flavor
      - id
      type: object
    UpdateStandaloneVmDiskCommand:
      example:
        size: 6
        id: 0
      properties:
        id:
          format: int32
          type: integer
        size:
          format: int64
          type: integer
      type: object
    UpdateStandaloneVmDiskSizeCommand:
      example:
        size: 6
        id: 0
      properties:
        id:
          format: int32
          type: integer
        size:
          format: int64
          type: integer
      type: object
    UpdateSubscriptionCommand:
      example:
        serverLimit: 1464
        yearlyPrice: 70614.01241503109
        projectLimit: 6027
        trialDays: 3
        cloudCredentialLimit: 5636
        tcuPrice: 930144.4243932576
        name: name
        id: 0
        userLimit: 5961
        monthlyPrice: 23021.358869347652
      properties:
        id:
          format: int32
          type: integer
        name:
          maxLength: 30
          minLength: 3
          type: string
        projectLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        serverLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        userLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        cloudCredentialLimit:
          format: int32
          maximum: 10000
          minimum: -1
          type: integer
        monthlyPrice:
          format: double
          maximum: 100000
          minimum: 0
          type: number
        yearlyPrice:
          format: double
          maximum: 100000
          minimum: 0
          type: number
        tcuPrice:
          format: double
          maximum: 1000000
          minimum: 0
          type: number
        trialDays:
          format: int32
          type: integer
      required:
      - name
      type: object
    UpdateTanzuCommand:
      example:
        password: password
        name: name
        id: 0
      properties:
        id:
          exclusiveMinimum: true
          format: int32
          minimum: 0
          type: integer
        name:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        password:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - id
      - name
      - password
      type: object
    UpdateUserCommand:
      example:
        role: null
        isApprovedByPartner: true
        displayName: displayName
        disable: true
        forceToResetPassword: true
        id: id
        email: email
        username: username
      properties:
        id:
          maxLength: 200
          minLength: 3
          type: string
        displayName:
          type: string
        username:
          maxLength: 30
          minLength: 3
          pattern: "^(?!.*([-])\\1)(?!.*[.-]$)(?!.*(-\\.|\\.-|\\.\\.))[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$"
          type: string
        email:
          format: email
          maxLength: 200
          minLength: 3
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        forceToResetPassword:
          type: boolean
        disable:
          type: boolean
        isApprovedByPartner:
          type: boolean
      required:
      - email
      - id
      - username
      type: object
    UpdateUserGroupDto:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    UpdateUserProjectDto:
      example:
        isBound: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isBound:
          type: boolean
      type: object
    UpdateUserProjectGroupDto:
      example:
        isBound: true
        projectGroupId: 0
      properties:
        projectGroupId:
          format: int32
          type: integer
        isBound:
          type: boolean
      type: object
    UserDetails:
      example:
        trialDays: 6
        data:
          owner: true
          role: role
          organizationName: organizationName
          hasRepo: true
          displayName: displayName
          hasPaymentMethod: true
          hasCustomerId: true
          isForcedToResetPassword: true
          boundProjects:
          - projectName: projectName
            projectId: 6
          - projectName: projectName
            projectId: 6
          isEligibleUpdateSubscription: true
          isCsm: true
          organizationId: 0
          createdAt: createdAt
          isReadOnly: true
          lastLoginAt: lastLoginAt
          isApprovedByPartner: true
          partner:
            name: name
            link: link
            logo: logo
            id: 1
          isLocked: true
          demoModeEnabled: true
          id: id
          email: email
          isEmailNotificationEnabled: true
          username: username
          isEmailConfirmed: true
        demoOrganization: 0
        isMaintenanceModeEnabled: true
      properties:
        data:
          $ref: '#/components/schemas/UserForListDto'
        isMaintenanceModeEnabled:
          type: boolean
        demoOrganization:
          format: int32
          type: integer
        trialDays:
          format: int32
          type: integer
      type: object
    UserDto:
      example:
        userName: userName
        userId: userId
      properties:
        userId:
          type: string
        userName:
          type: string
      type: object
    UserExistCommand:
      example:
        userName: userName
        email: email
      properties:
        email:
          type: string
        userName:
          type: string
      type: object
    UserForListDto:
      example:
        owner: true
        role: role
        organizationName: organizationName
        hasRepo: true
        displayName: displayName
        hasPaymentMethod: true
        hasCustomerId: true
        isForcedToResetPassword: true
        boundProjects:
        - projectName: projectName
          projectId: 6
        - projectName: projectName
          projectId: 6
        isEligibleUpdateSubscription: true
        isCsm: true
        organizationId: 0
        createdAt: createdAt
        isReadOnly: true
        lastLoginAt: lastLoginAt
        isApprovedByPartner: true
        partner:
          name: name
          link: link
          logo: logo
          id: 1
        isLocked: true
        demoModeEnabled: true
        id: id
        email: email
        isEmailNotificationEnabled: true
        username: username
        isEmailConfirmed: true
      properties:
        id:
          type: string
        username:
          type: string
        organizationName:
          type: string
        hasCustomerId:
          type: boolean
        hasPaymentMethod:
          type: boolean
        organizationId:
          format: int32
          type: integer
        role:
          type: string
        email:
          type: string
        displayName:
          type: string
        createdAt:
          type: string
        isEmailConfirmed:
          type: boolean
        isEmailNotificationEnabled:
          type: boolean
        isForcedToResetPassword:
          type: boolean
        isCsm:
          type: boolean
        isEligibleUpdateSubscription:
          type: boolean
        isLocked:
          type: boolean
        isApprovedByPartner:
          type: boolean
        owner:
          type: boolean
        isReadOnly:
          type: boolean
        hasRepo:
          type: boolean
        demoModeEnabled:
          type: boolean
        lastLoginAt:
          type: string
        boundProjects:
          items:
            $ref: '#/components/schemas/ProjectDto'
          type: array
        partner:
          $ref: '#/components/schemas/PartnerDetailsForUserDto'
      type: object
    UserGroupDetailsListDto:
      example:
        organizationId: 6
        organizationName: organizationName
        projectGroups:
        - name: name
          id: 1
        - name: name
          id: 1
        name: name
        id: 0
        users:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        users:
          items:
            $ref: '#/components/schemas/UserListDto'
          type: array
        projectGroups:
          items:
            $ref: '#/components/schemas/ProjectGroupEntityListDto'
          type: array
      type: object
    UserGroupEntityListDto:
      example:
        name: name
        id: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    UserGroupList:
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          projectGroups:
          - name: name
            id: 1
          - name: name
            id: 1
          name: name
          id: 0
          users:
          - name: name
            id: id
          - name: name
            id: id
        - organizationId: 6
          organizationName: organizationName
          projectGroups:
          - name: name
            id: 1
          - name: name
            id: 1
          name: name
          id: 0
          users:
          - name: name
            id: id
          - name: name
            id: id
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserGroupDetailsListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    UserListDto:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    UserResourceChartDto:
      example:
        diskSize: 6
        maxRam: 1
        cpu: 6
        maxCpu: 2
        projectName: projectName
        maxDiskSize: 6
        projectId: 9
        ram: 3
      properties:
        projectName:
          type: string
        projectId:
          format: int32
          type: integer
        diskSize:
          format: int64
          type: integer
        ram:
          format: int64
          type: integer
        cpu:
          format: int64
          type: integer
        maxRam:
          format: int64
          type: integer
        maxCpu:
          format: int64
          type: integer
        maxDiskSize:
          format: int64
          type: integer
      type: object
    UserRole:
      enum:
      - 100
      - 200
      - 250
      - 400
      - 6000
      format: int32
      type: integer
    UserTokenCreateCommand:
      example:
        isReadonly: true
        endpoints:
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        name: name
        bindALL: true
        expireDate: 2000-01-23T04:56:07.000+00:00
      properties:
        expireDate:
          format: date-time
          type: string
        isReadonly:
          type: boolean
        name:
          type: string
        endpoints:
          items:
            $ref: '#/components/schemas/AvailableEndpointData'
          type: array
        bindALL:
          type: boolean
      type: object
    UserTokenCreateDto:
      example:
        secretKey: secretKey
        accessKey: accessKey
      properties:
        accessKey:
          type: string
        secretKey:
          type: string
      type: object
    UserTokensListDto:
      example:
        createdAt: createdAt
        isReadonly: true
        accessKey: accessKey
        name: name
        expireDate: expireDate
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
        isReadonly:
          type: boolean
        expireDate:
          type: string
        accessKey:
          type: string
      type: object
    UsersList:
      example:
        data:
        - owner: true
          role: role
          organizationName: organizationName
          hasRepo: true
          displayName: displayName
          hasPaymentMethod: true
          hasCustomerId: true
          isForcedToResetPassword: true
          boundProjects:
          - projectName: projectName
            projectId: 6
          - projectName: projectName
            projectId: 6
          isEligibleUpdateSubscription: true
          isCsm: true
          organizationId: 0
          createdAt: createdAt
          isReadOnly: true
          lastLoginAt: lastLoginAt
          isApprovedByPartner: true
          partner:
            name: name
            link: link
            logo: logo
            id: 1
          isLocked: true
          demoModeEnabled: true
          id: id
          email: email
          isEmailNotificationEnabled: true
          username: username
          isEmailConfirmed: true
        - owner: true
          role: role
          organizationName: organizationName
          hasRepo: true
          displayName: displayName
          hasPaymentMethod: true
          hasCustomerId: true
          isForcedToResetPassword: true
          boundProjects:
          - projectName: projectName
            projectId: 6
          - projectName: projectName
            projectId: 6
          isEligibleUpdateSubscription: true
          isCsm: true
          organizationId: 0
          createdAt: createdAt
          isReadOnly: true
          lastLoginAt: lastLoginAt
          isApprovedByPartner: true
          partner:
            name: name
            link: link
            logo: logo
            id: 1
          isLocked: true
          demoModeEnabled: true
          id: id
          email: email
          isEmailNotificationEnabled: true
          username: username
          isEmailConfirmed: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserForListDto'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    UsersSearchCommand:
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        searchTerm:
          maxLength: 100
          minLength: 3
          type: string
      required:
      - searchTerm
      type: object
    UsersSearchList:
      example:
        data:
        - organizationId: 0
          organizationName: organizationName
          name: name
          id: id
          email: email
        - organizationId: 0
          organizationName: organizationName
          name: name
          id: id
          email: email
        totalCount: 6
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsersSearchResponseData'
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    UsersSearchResponseData:
      example:
        organizationId: 0
        organizationName: organizationName
        name: name
        id: id
        email: email
      properties:
        id:
          type: string
        name:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        email:
          type: string
      type: object
    VerifyEmailCommand:
      example:
        mode: mode
        token: token
      properties:
        token:
          type: string
        mode:
          type: string
      type: object
    VerifySlackCredentialsCommand:
      example:
        name: name
        channel: channel
        url: url
      properties:
        name:
          type: string
        url:
          type: string
        channel:
          type: string
      type: object
    VerifyWebhookCommand:
      example:
        url: url
      properties:
        url:
          minLength: 1
          type: string
      required:
      - url
      type: object
    VmConsoleScreenshotCommand:
      example:
        serverId: 0
      properties:
        serverId:
          format: int32
          type: integer
      type: object
    VmTemplateListCommand:
      example:
        tokenId: tokenId
        cloudId: 0
        url: url
        tokenSecret: tokenSecret
      properties:
        cloudId:
          format: int32
          type: integer
        url:
          type: string
        tokenId:
          type: string
        tokenSecret:
          type: string
      type: object
    WebhookHeaderDto:
      example:
        id: 5
        value: value
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          type: string
        value:
          type: string
      type: object
    WhiteListDomainCreateCommand:
      example:
        whiteListDomains:
        - name: name
        - name: name
        partnerId: 0
      properties:
        whiteListDomains:
          items:
            $ref: '#/components/schemas/WhiteListDomainCreateDto'
          type: array
        partnerId:
          format: int32
          type: integer
      type: object
    WhiteListDomainCreateDto:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    WhiteListDomainDeleteCommand:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    WhiteListDomainDto:
      example:
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
      type: object
    YamlValidatorCommand:
      example:
        yaml: yaml
      properties:
        yaml:
          type: string
      type: object
    Checker_Google_request:
      properties:
        Config:
          format: binary
          type: string
      type: object
    GoogleCloud_ZoneList_request:
      properties:
        Config:
          format: binary
          type: string
        Region:
          type: string
        CloudId:
          format: int32
          type: integer
      type: object
    GoogleCloud_Create_request:
      properties:
        Name:
          type: string
        Config:
          format: binary
          type: string
        ImportProject:
          type: boolean
        FolderId:
          type: string
        BillingAccountId:
          type: string
        AzCount:
          format: int32
          type: integer
        Region:
          type: string
        OrganizationId:
          format: int32
          type: integer
      type: object
    Partner_Create_request:
      properties:
        Name:
          type: string
        Domain:
          type: string
        Link:
          type: string
        Phone:
          type: string
        Email:
          type: string
        Country:
          type: string
        City:
          type: string
        VatNumber:
          type: string
        Address:
          type: string
        Logo:
          format: binary
          type: string
        BackgroundImage:
          format: binary
          type: string
        AllowRegistration:
          type: boolean
        RequiredUserApproval:
          type: boolean
        PaymentEnabled:
          type: boolean
      type: object
    StandAloneActions_InstancePassword_request:
      properties:
        Id:
          format: int32
          type: integer
        Key:
          type: string
        Config:
          format: binary
          type: string
      type: object
    AdminUserCreateCommand_password:
      allOf:
      - type: object
      - type: object
      - type: object
      - type: object
      type: object
  securitySchemes:
    Bearer:
      description: "Input your Bearer token in this format - Bearer {your token here}\
        \ to access this API"
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
