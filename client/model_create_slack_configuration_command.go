/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikungoclient

import (
	"encoding/json"
)

// checks if the CreateSlackConfigurationCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSlackConfigurationCommand{}

// CreateSlackConfigurationCommand struct for CreateSlackConfigurationCommand
type CreateSlackConfigurationCommand struct {
	OrganizationId NullableInt32 `json:"organizationId,omitempty"`
	Name string `json:"name"`
	Url string `json:"url"`
	Channel string `json:"channel"`
	SlackType *SlackType `json:"slackType,omitempty"`
}

// NewCreateSlackConfigurationCommand instantiates a new CreateSlackConfigurationCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSlackConfigurationCommand(name string, url string, channel string) *CreateSlackConfigurationCommand {
	this := CreateSlackConfigurationCommand{}
	this.Name = name
	this.Url = url
	this.Channel = channel
	return &this
}

// NewCreateSlackConfigurationCommandWithDefaults instantiates a new CreateSlackConfigurationCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSlackConfigurationCommandWithDefaults() *CreateSlackConfigurationCommand {
	this := CreateSlackConfigurationCommand{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSlackConfigurationCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSlackConfigurationCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateSlackConfigurationCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *CreateSlackConfigurationCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *CreateSlackConfigurationCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *CreateSlackConfigurationCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetName returns the Name field value
func (o *CreateSlackConfigurationCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSlackConfigurationCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateSlackConfigurationCommand) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *CreateSlackConfigurationCommand) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CreateSlackConfigurationCommand) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CreateSlackConfigurationCommand) SetUrl(v string) {
	o.Url = v
}

// GetChannel returns the Channel field value
func (o *CreateSlackConfigurationCommand) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *CreateSlackConfigurationCommand) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *CreateSlackConfigurationCommand) SetChannel(v string) {
	o.Channel = v
}

// GetSlackType returns the SlackType field value if set, zero value otherwise.
func (o *CreateSlackConfigurationCommand) GetSlackType() SlackType {
	if o == nil || IsNil(o.SlackType) {
		var ret SlackType
		return ret
	}
	return *o.SlackType
}

// GetSlackTypeOk returns a tuple with the SlackType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSlackConfigurationCommand) GetSlackTypeOk() (*SlackType, bool) {
	if o == nil || IsNil(o.SlackType) {
		return nil, false
	}
	return o.SlackType, true
}

// HasSlackType returns a boolean if a field has been set.
func (o *CreateSlackConfigurationCommand) HasSlackType() bool {
	if o != nil && !IsNil(o.SlackType) {
		return true
	}

	return false
}

// SetSlackType gets a reference to the given SlackType and assigns it to the SlackType field.
func (o *CreateSlackConfigurationCommand) SetSlackType(v SlackType) {
	o.SlackType = &v
}

func (o CreateSlackConfigurationCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSlackConfigurationCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["url"] = o.Url
	toSerialize["channel"] = o.Channel
	if !IsNil(o.SlackType) {
		toSerialize["slackType"] = o.SlackType
	}
	return toSerialize, nil
}

type NullableCreateSlackConfigurationCommand struct {
	value *CreateSlackConfigurationCommand
	isSet bool
}

func (v NullableCreateSlackConfigurationCommand) Get() *CreateSlackConfigurationCommand {
	return v.value
}

func (v *NullableCreateSlackConfigurationCommand) Set(val *CreateSlackConfigurationCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSlackConfigurationCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSlackConfigurationCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSlackConfigurationCommand(val *CreateSlackConfigurationCommand) *NullableCreateSlackConfigurationCommand {
	return &NullableCreateSlackConfigurationCommand{value: val, isSet: true}
}

func (v NullableCreateSlackConfigurationCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSlackConfigurationCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


