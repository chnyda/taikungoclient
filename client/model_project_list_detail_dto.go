/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectListDetailDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectListDetailDto{}

// ProjectListDetailDto struct for ProjectListDetailDto
type ProjectListDetailDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	IsKubernetes *bool `json:"isKubernetes,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	HasKubeConfigFile *bool `json:"hasKubeConfigFile,omitempty"`
	CloudCredentialName *string `json:"cloudCredentialName,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	Status *string `json:"status,omitempty"`
	Health *string `json:"health,omitempty"`
	CloudType *string `json:"cloudType,omitempty"`
	KubesprayCurrentVersion *string `json:"kubesprayCurrentVersion,omitempty"`
	KubesprayTargetVersion *string `json:"kubesprayTargetVersion,omitempty"`
	KubernetesCurrentVersion *string `json:"kubernetesCurrentVersion,omitempty"`
	KubernetesTargetVersion *string `json:"kubernetesTargetVersion,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	AlertsCount *int32 `json:"alertsCount,omitempty"`
	TotalServersCount *int32 `json:"totalServersCount,omitempty"`
	TotalStandaloneVmsCount *int32 `json:"totalStandaloneVmsCount,omitempty"`
	BoundUsers []UserDto `json:"boundUsers,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	ExpiredAt *string `json:"expiredAt,omitempty"`
	DeleteOnExpiration *bool `json:"deleteOnExpiration,omitempty"`
	CertificateExpiredAt *string `json:"certificateExpiredAt,omitempty"`
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	QuotaId *int32 `json:"quotaId,omitempty"`
	AllowFullSpotKubernetes *bool `json:"allowFullSpotKubernetes,omitempty"`
	AllowSpotWorkers *bool `json:"allowSpotWorkers,omitempty"`
	AllowSpotVMs *bool `json:"allowSpotVMs,omitempty"`
	MaxSpotPrice *float64 `json:"maxSpotPrice,omitempty"`
	ProjectAction *bool `json:"projectAction,omitempty"`
	HasExpirationWarning *bool `json:"hasExpirationWarning,omitempty"`
	TotalHourlyCost *float64 `json:"totalHourlyCost,omitempty"`
	IsAutoscalingEnabled *bool `json:"isAutoscalingEnabled,omitempty"`
}

// NewProjectListDetailDto instantiates a new ProjectListDetailDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectListDetailDto() *ProjectListDetailDto {
	this := ProjectListDetailDto{}
	return &this
}

// NewProjectListDetailDtoWithDefaults instantiates a new ProjectListDetailDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectListDetailDtoWithDefaults() *ProjectListDetailDto {
	this := ProjectListDetailDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectListDetailDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectListDetailDto) SetName(v string) {
	o.Name = &v
}

// GetIsKubernetes returns the IsKubernetes field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetIsKubernetes() bool {
	if o == nil || IsNil(o.IsKubernetes) {
		var ret bool
		return ret
	}
	return *o.IsKubernetes
}

// GetIsKubernetesOk returns a tuple with the IsKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIsKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubernetes) {
		return nil, false
	}
	return o.IsKubernetes, true
}

// HasIsKubernetes returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasIsKubernetes() bool {
	if o != nil && !IsNil(o.IsKubernetes) {
		return true
	}

	return false
}

// SetIsKubernetes gets a reference to the given bool and assigns it to the IsKubernetes field.
func (o *ProjectListDetailDto) SetIsKubernetes(v bool) {
	o.IsKubernetes = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectListDetailDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *ProjectListDetailDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetCloudCredentialName returns the CloudCredentialName field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetCloudCredentialName() string {
	if o == nil || IsNil(o.CloudCredentialName) {
		var ret string
		return ret
	}
	return *o.CloudCredentialName
}

// GetCloudCredentialNameOk returns a tuple with the CloudCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetCloudCredentialNameOk() (*string, bool) {
	if o == nil || IsNil(o.CloudCredentialName) {
		return nil, false
	}
	return o.CloudCredentialName, true
}

// HasCloudCredentialName returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCloudCredentialName() bool {
	if o != nil && !IsNil(o.CloudCredentialName) {
		return true
	}

	return false
}

// SetCloudCredentialName gets a reference to the given string and assigns it to the CloudCredentialName field.
func (o *ProjectListDetailDto) SetCloudCredentialName(v string) {
	o.CloudCredentialName = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ProjectListDetailDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectListDetailDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProjectListDetailDto) SetStatus(v string) {
	o.Status = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetHealth() string {
	if o == nil || IsNil(o.Health) {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetHealthOk() (*string, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *ProjectListDetailDto) SetHealth(v string) {
	o.Health = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetCloudTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *ProjectListDetailDto) SetCloudType(v string) {
	o.CloudType = &v
}

// GetKubesprayCurrentVersion returns the KubesprayCurrentVersion field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetKubesprayCurrentVersion() string {
	if o == nil || IsNil(o.KubesprayCurrentVersion) {
		var ret string
		return ret
	}
	return *o.KubesprayCurrentVersion
}

// GetKubesprayCurrentVersionOk returns a tuple with the KubesprayCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetKubesprayCurrentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubesprayCurrentVersion) {
		return nil, false
	}
	return o.KubesprayCurrentVersion, true
}

// HasKubesprayCurrentVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubesprayCurrentVersion() bool {
	if o != nil && !IsNil(o.KubesprayCurrentVersion) {
		return true
	}

	return false
}

// SetKubesprayCurrentVersion gets a reference to the given string and assigns it to the KubesprayCurrentVersion field.
func (o *ProjectListDetailDto) SetKubesprayCurrentVersion(v string) {
	o.KubesprayCurrentVersion = &v
}

// GetKubesprayTargetVersion returns the KubesprayTargetVersion field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetKubesprayTargetVersion() string {
	if o == nil || IsNil(o.KubesprayTargetVersion) {
		var ret string
		return ret
	}
	return *o.KubesprayTargetVersion
}

// GetKubesprayTargetVersionOk returns a tuple with the KubesprayTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetKubesprayTargetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubesprayTargetVersion) {
		return nil, false
	}
	return o.KubesprayTargetVersion, true
}

// HasKubesprayTargetVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubesprayTargetVersion() bool {
	if o != nil && !IsNil(o.KubesprayTargetVersion) {
		return true
	}

	return false
}

// SetKubesprayTargetVersion gets a reference to the given string and assigns it to the KubesprayTargetVersion field.
func (o *ProjectListDetailDto) SetKubesprayTargetVersion(v string) {
	o.KubesprayTargetVersion = &v
}

// GetKubernetesCurrentVersion returns the KubernetesCurrentVersion field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetKubernetesCurrentVersion() string {
	if o == nil || IsNil(o.KubernetesCurrentVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesCurrentVersion
}

// GetKubernetesCurrentVersionOk returns a tuple with the KubernetesCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetKubernetesCurrentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesCurrentVersion) {
		return nil, false
	}
	return o.KubernetesCurrentVersion, true
}

// HasKubernetesCurrentVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubernetesCurrentVersion() bool {
	if o != nil && !IsNil(o.KubernetesCurrentVersion) {
		return true
	}

	return false
}

// SetKubernetesCurrentVersion gets a reference to the given string and assigns it to the KubernetesCurrentVersion field.
func (o *ProjectListDetailDto) SetKubernetesCurrentVersion(v string) {
	o.KubernetesCurrentVersion = &v
}

// GetKubernetesTargetVersion returns the KubernetesTargetVersion field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetKubernetesTargetVersion() string {
	if o == nil || IsNil(o.KubernetesTargetVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesTargetVersion
}

// GetKubernetesTargetVersionOk returns a tuple with the KubernetesTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetKubernetesTargetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesTargetVersion) {
		return nil, false
	}
	return o.KubernetesTargetVersion, true
}

// HasKubernetesTargetVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubernetesTargetVersion() bool {
	if o != nil && !IsNil(o.KubernetesTargetVersion) {
		return true
	}

	return false
}

// SetKubernetesTargetVersion gets a reference to the given string and assigns it to the KubernetesTargetVersion field.
func (o *ProjectListDetailDto) SetKubernetesTargetVersion(v string) {
	o.KubernetesTargetVersion = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ProjectListDetailDto) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetAlertsCount returns the AlertsCount field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAlertsCount() int32 {
	if o == nil || IsNil(o.AlertsCount) {
		var ret int32
		return ret
	}
	return *o.AlertsCount
}

// GetAlertsCountOk returns a tuple with the AlertsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAlertsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertsCount) {
		return nil, false
	}
	return o.AlertsCount, true
}

// HasAlertsCount returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAlertsCount() bool {
	if o != nil && !IsNil(o.AlertsCount) {
		return true
	}

	return false
}

// SetAlertsCount gets a reference to the given int32 and assigns it to the AlertsCount field.
func (o *ProjectListDetailDto) SetAlertsCount(v int32) {
	o.AlertsCount = &v
}

// GetTotalServersCount returns the TotalServersCount field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetTotalServersCount() int32 {
	if o == nil || IsNil(o.TotalServersCount) {
		var ret int32
		return ret
	}
	return *o.TotalServersCount
}

// GetTotalServersCountOk returns a tuple with the TotalServersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetTotalServersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalServersCount) {
		return nil, false
	}
	return o.TotalServersCount, true
}

// HasTotalServersCount returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasTotalServersCount() bool {
	if o != nil && !IsNil(o.TotalServersCount) {
		return true
	}

	return false
}

// SetTotalServersCount gets a reference to the given int32 and assigns it to the TotalServersCount field.
func (o *ProjectListDetailDto) SetTotalServersCount(v int32) {
	o.TotalServersCount = &v
}

// GetTotalStandaloneVmsCount returns the TotalStandaloneVmsCount field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetTotalStandaloneVmsCount() int32 {
	if o == nil || IsNil(o.TotalStandaloneVmsCount) {
		var ret int32
		return ret
	}
	return *o.TotalStandaloneVmsCount
}

// GetTotalStandaloneVmsCountOk returns a tuple with the TotalStandaloneVmsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetTotalStandaloneVmsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalStandaloneVmsCount) {
		return nil, false
	}
	return o.TotalStandaloneVmsCount, true
}

// HasTotalStandaloneVmsCount returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasTotalStandaloneVmsCount() bool {
	if o != nil && !IsNil(o.TotalStandaloneVmsCount) {
		return true
	}

	return false
}

// SetTotalStandaloneVmsCount gets a reference to the given int32 and assigns it to the TotalStandaloneVmsCount field.
func (o *ProjectListDetailDto) SetTotalStandaloneVmsCount(v int32) {
	o.TotalStandaloneVmsCount = &v
}

// GetBoundUsers returns the BoundUsers field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetBoundUsers() []UserDto {
	if o == nil || IsNil(o.BoundUsers) {
		var ret []UserDto
		return ret
	}
	return o.BoundUsers
}

// GetBoundUsersOk returns a tuple with the BoundUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetBoundUsersOk() ([]UserDto, bool) {
	if o == nil || IsNil(o.BoundUsers) {
		return nil, false
	}
	return o.BoundUsers, true
}

// HasBoundUsers returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasBoundUsers() bool {
	if o != nil && !IsNil(o.BoundUsers) {
		return true
	}

	return false
}

// SetBoundUsers gets a reference to the given []UserDto and assigns it to the BoundUsers field.
func (o *ProjectListDetailDto) SetBoundUsers(v []UserDto) {
	o.BoundUsers = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *ProjectListDetailDto) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *ProjectListDetailDto) SetLastModified(v string) {
	o.LastModified = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetExpiredAt() string {
	if o == nil || IsNil(o.ExpiredAt) {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetExpiredAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiredAt) {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasExpiredAt() bool {
	if o != nil && !IsNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *ProjectListDetailDto) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

// GetDeleteOnExpiration returns the DeleteOnExpiration field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetDeleteOnExpiration() bool {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		var ret bool
		return ret
	}
	return *o.DeleteOnExpiration
}

// GetDeleteOnExpirationOk returns a tuple with the DeleteOnExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetDeleteOnExpirationOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		return nil, false
	}
	return o.DeleteOnExpiration, true
}

// HasDeleteOnExpiration returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasDeleteOnExpiration() bool {
	if o != nil && !IsNil(o.DeleteOnExpiration) {
		return true
	}

	return false
}

// SetDeleteOnExpiration gets a reference to the given bool and assigns it to the DeleteOnExpiration field.
func (o *ProjectListDetailDto) SetDeleteOnExpiration(v bool) {
	o.DeleteOnExpiration = &v
}

// GetCertificateExpiredAt returns the CertificateExpiredAt field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetCertificateExpiredAt() string {
	if o == nil || IsNil(o.CertificateExpiredAt) {
		var ret string
		return ret
	}
	return *o.CertificateExpiredAt
}

// GetCertificateExpiredAtOk returns a tuple with the CertificateExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetCertificateExpiredAtOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateExpiredAt) {
		return nil, false
	}
	return o.CertificateExpiredAt, true
}

// HasCertificateExpiredAt returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCertificateExpiredAt() bool {
	if o != nil && !IsNil(o.CertificateExpiredAt) {
		return true
	}

	return false
}

// SetCertificateExpiredAt gets a reference to the given string and assigns it to the CertificateExpiredAt field.
func (o *ProjectListDetailDto) SetCertificateExpiredAt(v string) {
	o.CertificateExpiredAt = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *ProjectListDetailDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetQuotaId returns the QuotaId field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetQuotaId() int32 {
	if o == nil || IsNil(o.QuotaId) {
		var ret int32
		return ret
	}
	return *o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetQuotaIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaId) {
		return nil, false
	}
	return o.QuotaId, true
}

// HasQuotaId returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasQuotaId() bool {
	if o != nil && !IsNil(o.QuotaId) {
		return true
	}

	return false
}

// SetQuotaId gets a reference to the given int32 and assigns it to the QuotaId field.
func (o *ProjectListDetailDto) SetQuotaId(v int32) {
	o.QuotaId = &v
}

// GetAllowFullSpotKubernetes returns the AllowFullSpotKubernetes field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAllowFullSpotKubernetes() bool {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		var ret bool
		return ret
	}
	return *o.AllowFullSpotKubernetes
}

// GetAllowFullSpotKubernetesOk returns a tuple with the AllowFullSpotKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAllowFullSpotKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		return nil, false
	}
	return o.AllowFullSpotKubernetes, true
}

// HasAllowFullSpotKubernetes returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAllowFullSpotKubernetes() bool {
	if o != nil && !IsNil(o.AllowFullSpotKubernetes) {
		return true
	}

	return false
}

// SetAllowFullSpotKubernetes gets a reference to the given bool and assigns it to the AllowFullSpotKubernetes field.
func (o *ProjectListDetailDto) SetAllowFullSpotKubernetes(v bool) {
	o.AllowFullSpotKubernetes = &v
}

// GetAllowSpotWorkers returns the AllowSpotWorkers field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAllowSpotWorkers() bool {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		var ret bool
		return ret
	}
	return *o.AllowSpotWorkers
}

// GetAllowSpotWorkersOk returns a tuple with the AllowSpotWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAllowSpotWorkersOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		return nil, false
	}
	return o.AllowSpotWorkers, true
}

// HasAllowSpotWorkers returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAllowSpotWorkers() bool {
	if o != nil && !IsNil(o.AllowSpotWorkers) {
		return true
	}

	return false
}

// SetAllowSpotWorkers gets a reference to the given bool and assigns it to the AllowSpotWorkers field.
func (o *ProjectListDetailDto) SetAllowSpotWorkers(v bool) {
	o.AllowSpotWorkers = &v
}

// GetAllowSpotVMs returns the AllowSpotVMs field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAllowSpotVMs() bool {
	if o == nil || IsNil(o.AllowSpotVMs) {
		var ret bool
		return ret
	}
	return *o.AllowSpotVMs
}

// GetAllowSpotVMsOk returns a tuple with the AllowSpotVMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAllowSpotVMsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotVMs) {
		return nil, false
	}
	return o.AllowSpotVMs, true
}

// HasAllowSpotVMs returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAllowSpotVMs() bool {
	if o != nil && !IsNil(o.AllowSpotVMs) {
		return true
	}

	return false
}

// SetAllowSpotVMs gets a reference to the given bool and assigns it to the AllowSpotVMs field.
func (o *ProjectListDetailDto) SetAllowSpotVMs(v bool) {
	o.AllowSpotVMs = &v
}

// GetMaxSpotPrice returns the MaxSpotPrice field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetMaxSpotPrice() float64 {
	if o == nil || IsNil(o.MaxSpotPrice) {
		var ret float64
		return ret
	}
	return *o.MaxSpotPrice
}

// GetMaxSpotPriceOk returns a tuple with the MaxSpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetMaxSpotPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.MaxSpotPrice) {
		return nil, false
	}
	return o.MaxSpotPrice, true
}

// HasMaxSpotPrice returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasMaxSpotPrice() bool {
	if o != nil && !IsNil(o.MaxSpotPrice) {
		return true
	}

	return false
}

// SetMaxSpotPrice gets a reference to the given float64 and assigns it to the MaxSpotPrice field.
func (o *ProjectListDetailDto) SetMaxSpotPrice(v float64) {
	o.MaxSpotPrice = &v
}

// GetProjectAction returns the ProjectAction field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetProjectAction() bool {
	if o == nil || IsNil(o.ProjectAction) {
		var ret bool
		return ret
	}
	return *o.ProjectAction
}

// GetProjectActionOk returns a tuple with the ProjectAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetProjectActionOk() (*bool, bool) {
	if o == nil || IsNil(o.ProjectAction) {
		return nil, false
	}
	return o.ProjectAction, true
}

// HasProjectAction returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasProjectAction() bool {
	if o != nil && !IsNil(o.ProjectAction) {
		return true
	}

	return false
}

// SetProjectAction gets a reference to the given bool and assigns it to the ProjectAction field.
func (o *ProjectListDetailDto) SetProjectAction(v bool) {
	o.ProjectAction = &v
}

// GetHasExpirationWarning returns the HasExpirationWarning field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetHasExpirationWarning() bool {
	if o == nil || IsNil(o.HasExpirationWarning) {
		var ret bool
		return ret
	}
	return *o.HasExpirationWarning
}

// GetHasExpirationWarningOk returns a tuple with the HasExpirationWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetHasExpirationWarningOk() (*bool, bool) {
	if o == nil || IsNil(o.HasExpirationWarning) {
		return nil, false
	}
	return o.HasExpirationWarning, true
}

// HasHasExpirationWarning returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasHasExpirationWarning() bool {
	if o != nil && !IsNil(o.HasExpirationWarning) {
		return true
	}

	return false
}

// SetHasExpirationWarning gets a reference to the given bool and assigns it to the HasExpirationWarning field.
func (o *ProjectListDetailDto) SetHasExpirationWarning(v bool) {
	o.HasExpirationWarning = &v
}

// GetTotalHourlyCost returns the TotalHourlyCost field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetTotalHourlyCost() float64 {
	if o == nil || IsNil(o.TotalHourlyCost) {
		var ret float64
		return ret
	}
	return *o.TotalHourlyCost
}

// GetTotalHourlyCostOk returns a tuple with the TotalHourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetTotalHourlyCostOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalHourlyCost) {
		return nil, false
	}
	return o.TotalHourlyCost, true
}

// HasTotalHourlyCost returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasTotalHourlyCost() bool {
	if o != nil && !IsNil(o.TotalHourlyCost) {
		return true
	}

	return false
}

// SetTotalHourlyCost gets a reference to the given float64 and assigns it to the TotalHourlyCost field.
func (o *ProjectListDetailDto) SetTotalHourlyCost(v float64) {
	o.TotalHourlyCost = &v
}

// GetIsAutoscalingEnabled returns the IsAutoscalingEnabled field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetIsAutoscalingEnabled() bool {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoscalingEnabled
}

// GetIsAutoscalingEnabledOk returns a tuple with the IsAutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIsAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		return nil, false
	}
	return o.IsAutoscalingEnabled, true
}

// HasIsAutoscalingEnabled returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasIsAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.IsAutoscalingEnabled) {
		return true
	}

	return false
}

// SetIsAutoscalingEnabled gets a reference to the given bool and assigns it to the IsAutoscalingEnabled field.
func (o *ProjectListDetailDto) SetIsAutoscalingEnabled(v bool) {
	o.IsAutoscalingEnabled = &v
}

func (o ProjectListDetailDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectListDetailDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IsKubernetes) {
		toSerialize["isKubernetes"] = o.IsKubernetes
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if !IsNil(o.CloudCredentialName) {
		toSerialize["cloudCredentialName"] = o.CloudCredentialName
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.KubesprayCurrentVersion) {
		toSerialize["kubesprayCurrentVersion"] = o.KubesprayCurrentVersion
	}
	if !IsNil(o.KubesprayTargetVersion) {
		toSerialize["kubesprayTargetVersion"] = o.KubesprayTargetVersion
	}
	if !IsNil(o.KubernetesCurrentVersion) {
		toSerialize["kubernetesCurrentVersion"] = o.KubernetesCurrentVersion
	}
	if !IsNil(o.KubernetesTargetVersion) {
		toSerialize["kubernetesTargetVersion"] = o.KubernetesTargetVersion
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.AlertsCount) {
		toSerialize["alertsCount"] = o.AlertsCount
	}
	if !IsNil(o.TotalServersCount) {
		toSerialize["totalServersCount"] = o.TotalServersCount
	}
	if !IsNil(o.TotalStandaloneVmsCount) {
		toSerialize["totalStandaloneVmsCount"] = o.TotalStandaloneVmsCount
	}
	if !IsNil(o.BoundUsers) {
		toSerialize["boundUsers"] = o.BoundUsers
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.ExpiredAt) {
		toSerialize["expiredAt"] = o.ExpiredAt
	}
	if !IsNil(o.DeleteOnExpiration) {
		toSerialize["deleteOnExpiration"] = o.DeleteOnExpiration
	}
	if !IsNil(o.CertificateExpiredAt) {
		toSerialize["certificateExpiredAt"] = o.CertificateExpiredAt
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.QuotaId) {
		toSerialize["quotaId"] = o.QuotaId
	}
	if !IsNil(o.AllowFullSpotKubernetes) {
		toSerialize["allowFullSpotKubernetes"] = o.AllowFullSpotKubernetes
	}
	if !IsNil(o.AllowSpotWorkers) {
		toSerialize["allowSpotWorkers"] = o.AllowSpotWorkers
	}
	if !IsNil(o.AllowSpotVMs) {
		toSerialize["allowSpotVMs"] = o.AllowSpotVMs
	}
	if !IsNil(o.MaxSpotPrice) {
		toSerialize["maxSpotPrice"] = o.MaxSpotPrice
	}
	if !IsNil(o.ProjectAction) {
		toSerialize["projectAction"] = o.ProjectAction
	}
	if !IsNil(o.HasExpirationWarning) {
		toSerialize["hasExpirationWarning"] = o.HasExpirationWarning
	}
	if !IsNil(o.TotalHourlyCost) {
		toSerialize["totalHourlyCost"] = o.TotalHourlyCost
	}
	if !IsNil(o.IsAutoscalingEnabled) {
		toSerialize["isAutoscalingEnabled"] = o.IsAutoscalingEnabled
	}
	return toSerialize, nil
}

type NullableProjectListDetailDto struct {
	value *ProjectListDetailDto
	isSet bool
}

func (v NullableProjectListDetailDto) Get() *ProjectListDetailDto {
	return v.value
}

func (v *NullableProjectListDetailDto) Set(val *ProjectListDetailDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectListDetailDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectListDetailDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectListDetailDto(val *ProjectListDetailDto) *NullableProjectListDetailDto {
	return &NullableProjectListDetailDto{value: val, isSet: true}
}

func (v NullableProjectListDetailDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectListDetailDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


