/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CredentialsForCliDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialsForCliDto{}

// CredentialsForCliDto struct for CredentialsForCliDto
type CredentialsForCliDto struct {
	Id *int32 `json:"id,omitempty"`
	CloudCredentialName *string `json:"cloudCredentialName,omitempty"`
	CloudType *string `json:"cloudType,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	PartnerName *string `json:"partnerName,omitempty"`
}

// NewCredentialsForCliDto instantiates a new CredentialsForCliDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsForCliDto() *CredentialsForCliDto {
	this := CredentialsForCliDto{}
	return &this
}

// NewCredentialsForCliDtoWithDefaults instantiates a new CredentialsForCliDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsForCliDtoWithDefaults() *CredentialsForCliDto {
	this := CredentialsForCliDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CredentialsForCliDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsForCliDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CredentialsForCliDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CredentialsForCliDto) SetId(v int32) {
	o.Id = &v
}

// GetCloudCredentialName returns the CloudCredentialName field value if set, zero value otherwise.
func (o *CredentialsForCliDto) GetCloudCredentialName() string {
	if o == nil || IsNil(o.CloudCredentialName) {
		var ret string
		return ret
	}
	return *o.CloudCredentialName
}

// GetCloudCredentialNameOk returns a tuple with the CloudCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsForCliDto) GetCloudCredentialNameOk() (*string, bool) {
	if o == nil || IsNil(o.CloudCredentialName) {
		return nil, false
	}
	return o.CloudCredentialName, true
}

// HasCloudCredentialName returns a boolean if a field has been set.
func (o *CredentialsForCliDto) HasCloudCredentialName() bool {
	if o != nil && !IsNil(o.CloudCredentialName) {
		return true
	}

	return false
}

// SetCloudCredentialName gets a reference to the given string and assigns it to the CloudCredentialName field.
func (o *CredentialsForCliDto) SetCloudCredentialName(v string) {
	o.CloudCredentialName = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *CredentialsForCliDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsForCliDto) GetCloudTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *CredentialsForCliDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *CredentialsForCliDto) SetCloudType(v string) {
	o.CloudType = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CredentialsForCliDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsForCliDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CredentialsForCliDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *CredentialsForCliDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *CredentialsForCliDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsForCliDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *CredentialsForCliDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *CredentialsForCliDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetPartnerName returns the PartnerName field value if set, zero value otherwise.
func (o *CredentialsForCliDto) GetPartnerName() string {
	if o == nil || IsNil(o.PartnerName) {
		var ret string
		return ret
	}
	return *o.PartnerName
}

// GetPartnerNameOk returns a tuple with the PartnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsForCliDto) GetPartnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerName) {
		return nil, false
	}
	return o.PartnerName, true
}

// HasPartnerName returns a boolean if a field has been set.
func (o *CredentialsForCliDto) HasPartnerName() bool {
	if o != nil && !IsNil(o.PartnerName) {
		return true
	}

	return false
}

// SetPartnerName gets a reference to the given string and assigns it to the PartnerName field.
func (o *CredentialsForCliDto) SetPartnerName(v string) {
	o.PartnerName = &v
}

func (o CredentialsForCliDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialsForCliDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CloudCredentialName) {
		toSerialize["cloudCredentialName"] = o.CloudCredentialName
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.PartnerName) {
		toSerialize["partnerName"] = o.PartnerName
	}
	return toSerialize, nil
}

type NullableCredentialsForCliDto struct {
	value *CredentialsForCliDto
	isSet bool
}

func (v NullableCredentialsForCliDto) Get() *CredentialsForCliDto {
	return v.value
}

func (v *NullableCredentialsForCliDto) Set(val *CredentialsForCliDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsForCliDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsForCliDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsForCliDto(val *CredentialsForCliDto) *NullableCredentialsForCliDto {
	return &NullableCredentialsForCliDto{value: val, isSet: true}
}

func (v NullableCredentialsForCliDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsForCliDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


