/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateStandAloneVmFlavorCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStandAloneVmFlavorCommand{}

// UpdateStandAloneVmFlavorCommand struct for UpdateStandAloneVmFlavorCommand
type UpdateStandAloneVmFlavorCommand struct {
	Id int32 `json:"id"`
	Flavor string `json:"flavor"`
}

// NewUpdateStandAloneVmFlavorCommand instantiates a new UpdateStandAloneVmFlavorCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStandAloneVmFlavorCommand(id int32, flavor string) *UpdateStandAloneVmFlavorCommand {
	this := UpdateStandAloneVmFlavorCommand{}
	this.Id = id
	this.Flavor = flavor
	return &this
}

// NewUpdateStandAloneVmFlavorCommandWithDefaults instantiates a new UpdateStandAloneVmFlavorCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStandAloneVmFlavorCommandWithDefaults() *UpdateStandAloneVmFlavorCommand {
	this := UpdateStandAloneVmFlavorCommand{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateStandAloneVmFlavorCommand) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateStandAloneVmFlavorCommand) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateStandAloneVmFlavorCommand) SetId(v int32) {
	o.Id = v
}

// GetFlavor returns the Flavor field value
func (o *UpdateStandAloneVmFlavorCommand) GetFlavor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value
// and a boolean to check if the value has been set.
func (o *UpdateStandAloneVmFlavorCommand) GetFlavorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flavor, true
}

// SetFlavor sets field value
func (o *UpdateStandAloneVmFlavorCommand) SetFlavor(v string) {
	o.Flavor = v
}

func (o UpdateStandAloneVmFlavorCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStandAloneVmFlavorCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["flavor"] = o.Flavor
	return toSerialize, nil
}

type NullableUpdateStandAloneVmFlavorCommand struct {
	value *UpdateStandAloneVmFlavorCommand
	isSet bool
}

func (v NullableUpdateStandAloneVmFlavorCommand) Get() *UpdateStandAloneVmFlavorCommand {
	return v.value
}

func (v *NullableUpdateStandAloneVmFlavorCommand) Set(val *UpdateStandAloneVmFlavorCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStandAloneVmFlavorCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStandAloneVmFlavorCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStandAloneVmFlavorCommand(val *UpdateStandAloneVmFlavorCommand) *NullableUpdateStandAloneVmFlavorCommand {
	return &NullableUpdateStandAloneVmFlavorCommand{value: val, isSet: true}
}

func (v NullableUpdateStandAloneVmFlavorCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStandAloneVmFlavorCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


