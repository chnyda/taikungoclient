/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateAlertingProfileCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAlertingProfileCommand{}

// UpdateAlertingProfileCommand struct for UpdateAlertingProfileCommand
type UpdateAlertingProfileCommand struct {
	Id int32 `json:"id"`
	Name *string `json:"name,omitempty"`
	SlackConfigurationId *int32 `json:"slackConfigurationId,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	Reminder *AlertingReminder `json:"reminder,omitempty"`
}

// NewUpdateAlertingProfileCommand instantiates a new UpdateAlertingProfileCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAlertingProfileCommand(id int32) *UpdateAlertingProfileCommand {
	this := UpdateAlertingProfileCommand{}
	this.Id = id
	return &this
}

// NewUpdateAlertingProfileCommandWithDefaults instantiates a new UpdateAlertingProfileCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAlertingProfileCommandWithDefaults() *UpdateAlertingProfileCommand {
	this := UpdateAlertingProfileCommand{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateAlertingProfileCommand) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateAlertingProfileCommand) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateAlertingProfileCommand) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAlertingProfileCommand) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertingProfileCommand) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAlertingProfileCommand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAlertingProfileCommand) SetName(v string) {
	o.Name = &v
}

// GetSlackConfigurationId returns the SlackConfigurationId field value if set, zero value otherwise.
func (o *UpdateAlertingProfileCommand) GetSlackConfigurationId() int32 {
	if o == nil || IsNil(o.SlackConfigurationId) {
		var ret int32
		return ret
	}
	return *o.SlackConfigurationId
}

// GetSlackConfigurationIdOk returns a tuple with the SlackConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertingProfileCommand) GetSlackConfigurationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SlackConfigurationId) {
		return nil, false
	}
	return o.SlackConfigurationId, true
}

// HasSlackConfigurationId returns a boolean if a field has been set.
func (o *UpdateAlertingProfileCommand) HasSlackConfigurationId() bool {
	if o != nil && !IsNil(o.SlackConfigurationId) {
		return true
	}

	return false
}

// SetSlackConfigurationId gets a reference to the given int32 and assigns it to the SlackConfigurationId field.
func (o *UpdateAlertingProfileCommand) SetSlackConfigurationId(v int32) {
	o.SlackConfigurationId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *UpdateAlertingProfileCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertingProfileCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *UpdateAlertingProfileCommand) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *UpdateAlertingProfileCommand) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetReminder returns the Reminder field value if set, zero value otherwise.
func (o *UpdateAlertingProfileCommand) GetReminder() AlertingReminder {
	if o == nil || IsNil(o.Reminder) {
		var ret AlertingReminder
		return ret
	}
	return *o.Reminder
}

// GetReminderOk returns a tuple with the Reminder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertingProfileCommand) GetReminderOk() (*AlertingReminder, bool) {
	if o == nil || IsNil(o.Reminder) {
		return nil, false
	}
	return o.Reminder, true
}

// HasReminder returns a boolean if a field has been set.
func (o *UpdateAlertingProfileCommand) HasReminder() bool {
	if o != nil && !IsNil(o.Reminder) {
		return true
	}

	return false
}

// SetReminder gets a reference to the given AlertingReminder and assigns it to the Reminder field.
func (o *UpdateAlertingProfileCommand) SetReminder(v AlertingReminder) {
	o.Reminder = &v
}

func (o UpdateAlertingProfileCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAlertingProfileCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SlackConfigurationId) {
		toSerialize["slackConfigurationId"] = o.SlackConfigurationId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Reminder) {
		toSerialize["reminder"] = o.Reminder
	}
	return toSerialize, nil
}

type NullableUpdateAlertingProfileCommand struct {
	value *UpdateAlertingProfileCommand
	isSet bool
}

func (v NullableUpdateAlertingProfileCommand) Get() *UpdateAlertingProfileCommand {
	return v.value
}

func (v *NullableUpdateAlertingProfileCommand) Set(val *UpdateAlertingProfileCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAlertingProfileCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAlertingProfileCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAlertingProfileCommand(val *UpdateAlertingProfileCommand) *NullableUpdateAlertingProfileCommand {
	return &NullableUpdateAlertingProfileCommand{value: val, isSet: true}
}

func (v NullableUpdateAlertingProfileCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAlertingProfileCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


