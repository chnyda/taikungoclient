/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the StandAloneMetaDataDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandAloneMetaDataDto{}

// StandAloneMetaDataDto struct for StandAloneMetaDataDto
type StandAloneMetaDataDto struct {
	Key string `json:"key"`
	Value string `json:"value"`
}

// NewStandAloneMetaDataDto instantiates a new StandAloneMetaDataDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandAloneMetaDataDto(key string, value string) *StandAloneMetaDataDto {
	this := StandAloneMetaDataDto{}
	this.Key = key
	this.Value = value
	return &this
}

// NewStandAloneMetaDataDtoWithDefaults instantiates a new StandAloneMetaDataDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandAloneMetaDataDtoWithDefaults() *StandAloneMetaDataDto {
	this := StandAloneMetaDataDto{}
	return &this
}

// GetKey returns the Key field value
func (o *StandAloneMetaDataDto) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *StandAloneMetaDataDto) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *StandAloneMetaDataDto) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *StandAloneMetaDataDto) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *StandAloneMetaDataDto) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *StandAloneMetaDataDto) SetValue(v string) {
	o.Value = v
}

func (o StandAloneMetaDataDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandAloneMetaDataDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableStandAloneMetaDataDto struct {
	value *StandAloneMetaDataDto
	isSet bool
}

func (v NullableStandAloneMetaDataDto) Get() *StandAloneMetaDataDto {
	return v.value
}

func (v *NullableStandAloneMetaDataDto) Set(val *StandAloneMetaDataDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStandAloneMetaDataDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStandAloneMetaDataDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandAloneMetaDataDto(val *StandAloneMetaDataDto) *NullableStandAloneMetaDataDto {
	return &NullableStandAloneMetaDataDto{value: val, isSet: true}
}

func (v NullableStandAloneMetaDataDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandAloneMetaDataDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


