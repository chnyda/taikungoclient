/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectAppListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectAppListDto{}

// ProjectAppListDto struct for ProjectAppListDto
type ProjectAppListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Status *string `json:"status,omitempty"`
	Version *string `json:"version,omitempty"`
	CatalogId *int32 `json:"catalogId,omitempty"`
	CatalogName *string `json:"catalogName,omitempty"`
	CatalogAppName *string `json:"catalogAppName,omitempty"`
	CatalogAppId *int32 `json:"catalogAppId,omitempty"`
	AppRepoName *string `json:"appRepoName,omitempty"`
	Logo *string `json:"logo,omitempty"`
	AutoSync *bool `json:"autoSync,omitempty"`
	Created *string `json:"created,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	ProjectName *string `json:"projectName,omitempty"`
}

// NewProjectAppListDto instantiates a new ProjectAppListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectAppListDto() *ProjectAppListDto {
	this := ProjectAppListDto{}
	return &this
}

// NewProjectAppListDtoWithDefaults instantiates a new ProjectAppListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectAppListDtoWithDefaults() *ProjectAppListDto {
	this := ProjectAppListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectAppListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectAppListDto) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ProjectAppListDto) SetNamespace(v string) {
	o.Namespace = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProjectAppListDto) SetStatus(v string) {
	o.Status = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ProjectAppListDto) SetVersion(v string) {
	o.Version = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetCatalogId() int32 {
	if o == nil || IsNil(o.CatalogId) {
		var ret int32
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetCatalogIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given int32 and assigns it to the CatalogId field.
func (o *ProjectAppListDto) SetCatalogId(v int32) {
	o.CatalogId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// HasCatalogName returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasCatalogName() bool {
	if o != nil && !IsNil(o.CatalogName) {
		return true
	}

	return false
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *ProjectAppListDto) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetCatalogAppName returns the CatalogAppName field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetCatalogAppName() string {
	if o == nil || IsNil(o.CatalogAppName) {
		var ret string
		return ret
	}
	return *o.CatalogAppName
}

// GetCatalogAppNameOk returns a tuple with the CatalogAppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetCatalogAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogAppName) {
		return nil, false
	}
	return o.CatalogAppName, true
}

// HasCatalogAppName returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasCatalogAppName() bool {
	if o != nil && !IsNil(o.CatalogAppName) {
		return true
	}

	return false
}

// SetCatalogAppName gets a reference to the given string and assigns it to the CatalogAppName field.
func (o *ProjectAppListDto) SetCatalogAppName(v string) {
	o.CatalogAppName = &v
}

// GetCatalogAppId returns the CatalogAppId field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetCatalogAppId() int32 {
	if o == nil || IsNil(o.CatalogAppId) {
		var ret int32
		return ret
	}
	return *o.CatalogAppId
}

// GetCatalogAppIdOk returns a tuple with the CatalogAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetCatalogAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogAppId) {
		return nil, false
	}
	return o.CatalogAppId, true
}

// HasCatalogAppId returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasCatalogAppId() bool {
	if o != nil && !IsNil(o.CatalogAppId) {
		return true
	}

	return false
}

// SetCatalogAppId gets a reference to the given int32 and assigns it to the CatalogAppId field.
func (o *ProjectAppListDto) SetCatalogAppId(v int32) {
	o.CatalogAppId = &v
}

// GetAppRepoName returns the AppRepoName field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetAppRepoName() string {
	if o == nil || IsNil(o.AppRepoName) {
		var ret string
		return ret
	}
	return *o.AppRepoName
}

// GetAppRepoNameOk returns a tuple with the AppRepoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetAppRepoNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppRepoName) {
		return nil, false
	}
	return o.AppRepoName, true
}

// HasAppRepoName returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasAppRepoName() bool {
	if o != nil && !IsNil(o.AppRepoName) {
		return true
	}

	return false
}

// SetAppRepoName gets a reference to the given string and assigns it to the AppRepoName field.
func (o *ProjectAppListDto) SetAppRepoName(v string) {
	o.AppRepoName = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *ProjectAppListDto) SetLogo(v string) {
	o.Logo = &v
}

// GetAutoSync returns the AutoSync field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetAutoSync() bool {
	if o == nil || IsNil(o.AutoSync) {
		var ret bool
		return ret
	}
	return *o.AutoSync
}

// GetAutoSyncOk returns a tuple with the AutoSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetAutoSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoSync) {
		return nil, false
	}
	return o.AutoSync, true
}

// HasAutoSync returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasAutoSync() bool {
	if o != nil && !IsNil(o.AutoSync) {
		return true
	}

	return false
}

// SetAutoSync gets a reference to the given bool and assigns it to the AutoSync field.
func (o *ProjectAppListDto) SetAutoSync(v bool) {
	o.AutoSync = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ProjectAppListDto) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *ProjectAppListDto) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *ProjectAppListDto) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *ProjectAppListDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ProjectAppListDto) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ProjectAppListDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectAppListDto) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ProjectAppListDto) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ProjectAppListDto) SetProjectName(v string) {
	o.ProjectName = &v
}

func (o ProjectAppListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectAppListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalogId"] = o.CatalogId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalogName"] = o.CatalogName
	}
	if !IsNil(o.CatalogAppName) {
		toSerialize["catalogAppName"] = o.CatalogAppName
	}
	if !IsNil(o.CatalogAppId) {
		toSerialize["catalogAppId"] = o.CatalogAppId
	}
	if !IsNil(o.AppRepoName) {
		toSerialize["appRepoName"] = o.AppRepoName
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.AutoSync) {
		toSerialize["autoSync"] = o.AutoSync
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	return toSerialize, nil
}

type NullableProjectAppListDto struct {
	value *ProjectAppListDto
	isSet bool
}

func (v NullableProjectAppListDto) Get() *ProjectAppListDto {
	return v.value
}

func (v *NullableProjectAppListDto) Set(val *ProjectAppListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectAppListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectAppListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectAppListDto(val *ProjectAppListDto) *NullableProjectAppListDto {
	return &NullableProjectAppListDto{value: val, isSet: true}
}

func (v NullableProjectAppListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectAppListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


