/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ReplyTicketCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplyTicketCommand{}

// ReplyTicketCommand struct for ReplyTicketCommand
type ReplyTicketCommand struct {
	TicketId string `json:"ticketId"`
	Body string `json:"body"`
}

// NewReplyTicketCommand instantiates a new ReplyTicketCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplyTicketCommand(ticketId string, body string) *ReplyTicketCommand {
	this := ReplyTicketCommand{}
	this.TicketId = ticketId
	this.Body = body
	return &this
}

// NewReplyTicketCommandWithDefaults instantiates a new ReplyTicketCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplyTicketCommandWithDefaults() *ReplyTicketCommand {
	this := ReplyTicketCommand{}
	return &this
}

// GetTicketId returns the TicketId field value
func (o *ReplyTicketCommand) GetTicketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TicketId
}

// GetTicketIdOk returns a tuple with the TicketId field value
// and a boolean to check if the value has been set.
func (o *ReplyTicketCommand) GetTicketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TicketId, true
}

// SetTicketId sets field value
func (o *ReplyTicketCommand) SetTicketId(v string) {
	o.TicketId = v
}

// GetBody returns the Body field value
func (o *ReplyTicketCommand) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *ReplyTicketCommand) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *ReplyTicketCommand) SetBody(v string) {
	o.Body = v
}

func (o ReplyTicketCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplyTicketCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ticketId"] = o.TicketId
	toSerialize["body"] = o.Body
	return toSerialize, nil
}

type NullableReplyTicketCommand struct {
	value *ReplyTicketCommand
	isSet bool
}

func (v NullableReplyTicketCommand) Get() *ReplyTicketCommand {
	return v.value
}

func (v *NullableReplyTicketCommand) Set(val *ReplyTicketCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableReplyTicketCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableReplyTicketCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplyTicketCommand(val *ReplyTicketCommand) *NullableReplyTicketCommand {
	return &NullableReplyTicketCommand{value: val, isSet: true}
}

func (v NullableReplyTicketCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplyTicketCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


