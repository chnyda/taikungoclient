/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the GoogleCommonImages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleCommonImages{}

// GoogleCommonImages struct for GoogleCommonImages
type GoogleCommonImages struct {
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
}

// NewGoogleCommonImages instantiates a new GoogleCommonImages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCommonImages() *GoogleCommonImages {
	this := GoogleCommonImages{}
	return &this
}

// NewGoogleCommonImagesWithDefaults instantiates a new GoogleCommonImages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCommonImagesWithDefaults() *GoogleCommonImages {
	this := GoogleCommonImages{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GoogleCommonImages) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCommonImages) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GoogleCommonImages) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GoogleCommonImages) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GoogleCommonImages) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCommonImages) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GoogleCommonImages) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GoogleCommonImages) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o GoogleCommonImages) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleCommonImages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	return toSerialize, nil
}

type NullableGoogleCommonImages struct {
	value *GoogleCommonImages
	isSet bool
}

func (v NullableGoogleCommonImages) Get() *GoogleCommonImages {
	return v.value
}

func (v *NullableGoogleCommonImages) Set(val *GoogleCommonImages) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCommonImages) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCommonImages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCommonImages(val *GoogleCommonImages) *NullableGoogleCommonImages {
	return &NullableGoogleCommonImages{value: val, isSet: true}
}

func (v NullableGoogleCommonImages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCommonImages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


