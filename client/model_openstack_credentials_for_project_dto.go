/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the OpenstackCredentialsForProjectDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenstackCredentialsForProjectDto{}

// OpenstackCredentialsForProjectDto struct for OpenstackCredentialsForProjectDto
type OpenstackCredentialsForProjectDto struct {
	OpenStackUser *string `json:"openStackUser,omitempty"`
	OpenStackDomain *string `json:"openStackDomain,omitempty"`
	OpenStackPassword *string `json:"openStackPassword,omitempty"`
	OpenStackProject *string `json:"openStackProject,omitempty"`
	OpenStackRegion *string `json:"openStackRegion,omitempty"`
	OpenStackUrl *string `json:"openStackUrl,omitempty"`
	OpenStackPublicNetwork *string `json:"openStackPublicNetwork,omitempty"`
	OpenStackAvailabilityZone *string `json:"openStackAvailabilityZone,omitempty"`
	OpenStackVolumeType *string `json:"openStackVolumeType,omitempty"`
	OpenStackTenantId *string `json:"openStackTenantId,omitempty"`
	OpenStackImportNetwork *bool `json:"openStackImportNetwork,omitempty"`
	OpenStackInternalSubnetId *string `json:"openStackInternalSubnetId,omitempty"`
	ApplicationCredEnabled *bool `json:"applicationCredEnabled,omitempty"`
}

// NewOpenstackCredentialsForProjectDto instantiates a new OpenstackCredentialsForProjectDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenstackCredentialsForProjectDto() *OpenstackCredentialsForProjectDto {
	this := OpenstackCredentialsForProjectDto{}
	return &this
}

// NewOpenstackCredentialsForProjectDtoWithDefaults instantiates a new OpenstackCredentialsForProjectDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenstackCredentialsForProjectDtoWithDefaults() *OpenstackCredentialsForProjectDto {
	this := OpenstackCredentialsForProjectDto{}
	return &this
}

// GetOpenStackUser returns the OpenStackUser field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackUser() string {
	if o == nil || IsNil(o.OpenStackUser) {
		var ret string
		return ret
	}
	return *o.OpenStackUser
}

// GetOpenStackUserOk returns a tuple with the OpenStackUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackUserOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackUser) {
		return nil, false
	}
	return o.OpenStackUser, true
}

// HasOpenStackUser returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackUser() bool {
	if o != nil && !IsNil(o.OpenStackUser) {
		return true
	}

	return false
}

// SetOpenStackUser gets a reference to the given string and assigns it to the OpenStackUser field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackUser(v string) {
	o.OpenStackUser = &v
}

// GetOpenStackDomain returns the OpenStackDomain field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackDomain() string {
	if o == nil || IsNil(o.OpenStackDomain) {
		var ret string
		return ret
	}
	return *o.OpenStackDomain
}

// GetOpenStackDomainOk returns a tuple with the OpenStackDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackDomainOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackDomain) {
		return nil, false
	}
	return o.OpenStackDomain, true
}

// HasOpenStackDomain returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackDomain() bool {
	if o != nil && !IsNil(o.OpenStackDomain) {
		return true
	}

	return false
}

// SetOpenStackDomain gets a reference to the given string and assigns it to the OpenStackDomain field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackDomain(v string) {
	o.OpenStackDomain = &v
}

// GetOpenStackPassword returns the OpenStackPassword field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackPassword() string {
	if o == nil || IsNil(o.OpenStackPassword) {
		var ret string
		return ret
	}
	return *o.OpenStackPassword
}

// GetOpenStackPasswordOk returns a tuple with the OpenStackPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackPassword) {
		return nil, false
	}
	return o.OpenStackPassword, true
}

// HasOpenStackPassword returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackPassword() bool {
	if o != nil && !IsNil(o.OpenStackPassword) {
		return true
	}

	return false
}

// SetOpenStackPassword gets a reference to the given string and assigns it to the OpenStackPassword field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackPassword(v string) {
	o.OpenStackPassword = &v
}

// GetOpenStackProject returns the OpenStackProject field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackProject() string {
	if o == nil || IsNil(o.OpenStackProject) {
		var ret string
		return ret
	}
	return *o.OpenStackProject
}

// GetOpenStackProjectOk returns a tuple with the OpenStackProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackProjectOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackProject) {
		return nil, false
	}
	return o.OpenStackProject, true
}

// HasOpenStackProject returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackProject() bool {
	if o != nil && !IsNil(o.OpenStackProject) {
		return true
	}

	return false
}

// SetOpenStackProject gets a reference to the given string and assigns it to the OpenStackProject field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackProject(v string) {
	o.OpenStackProject = &v
}

// GetOpenStackRegion returns the OpenStackRegion field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackRegion() string {
	if o == nil || IsNil(o.OpenStackRegion) {
		var ret string
		return ret
	}
	return *o.OpenStackRegion
}

// GetOpenStackRegionOk returns a tuple with the OpenStackRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackRegionOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackRegion) {
		return nil, false
	}
	return o.OpenStackRegion, true
}

// HasOpenStackRegion returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackRegion() bool {
	if o != nil && !IsNil(o.OpenStackRegion) {
		return true
	}

	return false
}

// SetOpenStackRegion gets a reference to the given string and assigns it to the OpenStackRegion field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackRegion(v string) {
	o.OpenStackRegion = &v
}

// GetOpenStackUrl returns the OpenStackUrl field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackUrl() string {
	if o == nil || IsNil(o.OpenStackUrl) {
		var ret string
		return ret
	}
	return *o.OpenStackUrl
}

// GetOpenStackUrlOk returns a tuple with the OpenStackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackUrl) {
		return nil, false
	}
	return o.OpenStackUrl, true
}

// HasOpenStackUrl returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackUrl() bool {
	if o != nil && !IsNil(o.OpenStackUrl) {
		return true
	}

	return false
}

// SetOpenStackUrl gets a reference to the given string and assigns it to the OpenStackUrl field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackUrl(v string) {
	o.OpenStackUrl = &v
}

// GetOpenStackPublicNetwork returns the OpenStackPublicNetwork field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackPublicNetwork() string {
	if o == nil || IsNil(o.OpenStackPublicNetwork) {
		var ret string
		return ret
	}
	return *o.OpenStackPublicNetwork
}

// GetOpenStackPublicNetworkOk returns a tuple with the OpenStackPublicNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackPublicNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackPublicNetwork) {
		return nil, false
	}
	return o.OpenStackPublicNetwork, true
}

// HasOpenStackPublicNetwork returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackPublicNetwork() bool {
	if o != nil && !IsNil(o.OpenStackPublicNetwork) {
		return true
	}

	return false
}

// SetOpenStackPublicNetwork gets a reference to the given string and assigns it to the OpenStackPublicNetwork field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackPublicNetwork(v string) {
	o.OpenStackPublicNetwork = &v
}

// GetOpenStackAvailabilityZone returns the OpenStackAvailabilityZone field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackAvailabilityZone() string {
	if o == nil || IsNil(o.OpenStackAvailabilityZone) {
		var ret string
		return ret
	}
	return *o.OpenStackAvailabilityZone
}

// GetOpenStackAvailabilityZoneOk returns a tuple with the OpenStackAvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackAvailabilityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackAvailabilityZone) {
		return nil, false
	}
	return o.OpenStackAvailabilityZone, true
}

// HasOpenStackAvailabilityZone returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackAvailabilityZone() bool {
	if o != nil && !IsNil(o.OpenStackAvailabilityZone) {
		return true
	}

	return false
}

// SetOpenStackAvailabilityZone gets a reference to the given string and assigns it to the OpenStackAvailabilityZone field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackAvailabilityZone(v string) {
	o.OpenStackAvailabilityZone = &v
}

// GetOpenStackVolumeType returns the OpenStackVolumeType field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackVolumeType() string {
	if o == nil || IsNil(o.OpenStackVolumeType) {
		var ret string
		return ret
	}
	return *o.OpenStackVolumeType
}

// GetOpenStackVolumeTypeOk returns a tuple with the OpenStackVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackVolumeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackVolumeType) {
		return nil, false
	}
	return o.OpenStackVolumeType, true
}

// HasOpenStackVolumeType returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackVolumeType() bool {
	if o != nil && !IsNil(o.OpenStackVolumeType) {
		return true
	}

	return false
}

// SetOpenStackVolumeType gets a reference to the given string and assigns it to the OpenStackVolumeType field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackVolumeType(v string) {
	o.OpenStackVolumeType = &v
}

// GetOpenStackTenantId returns the OpenStackTenantId field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackTenantId() string {
	if o == nil || IsNil(o.OpenStackTenantId) {
		var ret string
		return ret
	}
	return *o.OpenStackTenantId
}

// GetOpenStackTenantIdOk returns a tuple with the OpenStackTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackTenantId) {
		return nil, false
	}
	return o.OpenStackTenantId, true
}

// HasOpenStackTenantId returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackTenantId() bool {
	if o != nil && !IsNil(o.OpenStackTenantId) {
		return true
	}

	return false
}

// SetOpenStackTenantId gets a reference to the given string and assigns it to the OpenStackTenantId field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackTenantId(v string) {
	o.OpenStackTenantId = &v
}

// GetOpenStackImportNetwork returns the OpenStackImportNetwork field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackImportNetwork() bool {
	if o == nil || IsNil(o.OpenStackImportNetwork) {
		var ret bool
		return ret
	}
	return *o.OpenStackImportNetwork
}

// GetOpenStackImportNetworkOk returns a tuple with the OpenStackImportNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackImportNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenStackImportNetwork) {
		return nil, false
	}
	return o.OpenStackImportNetwork, true
}

// HasOpenStackImportNetwork returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackImportNetwork() bool {
	if o != nil && !IsNil(o.OpenStackImportNetwork) {
		return true
	}

	return false
}

// SetOpenStackImportNetwork gets a reference to the given bool and assigns it to the OpenStackImportNetwork field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackImportNetwork(v bool) {
	o.OpenStackImportNetwork = &v
}

// GetOpenStackInternalSubnetId returns the OpenStackInternalSubnetId field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackInternalSubnetId() string {
	if o == nil || IsNil(o.OpenStackInternalSubnetId) {
		var ret string
		return ret
	}
	return *o.OpenStackInternalSubnetId
}

// GetOpenStackInternalSubnetIdOk returns a tuple with the OpenStackInternalSubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetOpenStackInternalSubnetIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackInternalSubnetId) {
		return nil, false
	}
	return o.OpenStackInternalSubnetId, true
}

// HasOpenStackInternalSubnetId returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasOpenStackInternalSubnetId() bool {
	if o != nil && !IsNil(o.OpenStackInternalSubnetId) {
		return true
	}

	return false
}

// SetOpenStackInternalSubnetId gets a reference to the given string and assigns it to the OpenStackInternalSubnetId field.
func (o *OpenstackCredentialsForProjectDto) SetOpenStackInternalSubnetId(v string) {
	o.OpenStackInternalSubnetId = &v
}

// GetApplicationCredEnabled returns the ApplicationCredEnabled field value if set, zero value otherwise.
func (o *OpenstackCredentialsForProjectDto) GetApplicationCredEnabled() bool {
	if o == nil || IsNil(o.ApplicationCredEnabled) {
		var ret bool
		return ret
	}
	return *o.ApplicationCredEnabled
}

// GetApplicationCredEnabledOk returns a tuple with the ApplicationCredEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenstackCredentialsForProjectDto) GetApplicationCredEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplicationCredEnabled) {
		return nil, false
	}
	return o.ApplicationCredEnabled, true
}

// HasApplicationCredEnabled returns a boolean if a field has been set.
func (o *OpenstackCredentialsForProjectDto) HasApplicationCredEnabled() bool {
	if o != nil && !IsNil(o.ApplicationCredEnabled) {
		return true
	}

	return false
}

// SetApplicationCredEnabled gets a reference to the given bool and assigns it to the ApplicationCredEnabled field.
func (o *OpenstackCredentialsForProjectDto) SetApplicationCredEnabled(v bool) {
	o.ApplicationCredEnabled = &v
}

func (o OpenstackCredentialsForProjectDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenstackCredentialsForProjectDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenStackUser) {
		toSerialize["openStackUser"] = o.OpenStackUser
	}
	if !IsNil(o.OpenStackDomain) {
		toSerialize["openStackDomain"] = o.OpenStackDomain
	}
	if !IsNil(o.OpenStackPassword) {
		toSerialize["openStackPassword"] = o.OpenStackPassword
	}
	if !IsNil(o.OpenStackProject) {
		toSerialize["openStackProject"] = o.OpenStackProject
	}
	if !IsNil(o.OpenStackRegion) {
		toSerialize["openStackRegion"] = o.OpenStackRegion
	}
	if !IsNil(o.OpenStackUrl) {
		toSerialize["openStackUrl"] = o.OpenStackUrl
	}
	if !IsNil(o.OpenStackPublicNetwork) {
		toSerialize["openStackPublicNetwork"] = o.OpenStackPublicNetwork
	}
	if !IsNil(o.OpenStackAvailabilityZone) {
		toSerialize["openStackAvailabilityZone"] = o.OpenStackAvailabilityZone
	}
	if !IsNil(o.OpenStackVolumeType) {
		toSerialize["openStackVolumeType"] = o.OpenStackVolumeType
	}
	if !IsNil(o.OpenStackTenantId) {
		toSerialize["openStackTenantId"] = o.OpenStackTenantId
	}
	if !IsNil(o.OpenStackImportNetwork) {
		toSerialize["openStackImportNetwork"] = o.OpenStackImportNetwork
	}
	if !IsNil(o.OpenStackInternalSubnetId) {
		toSerialize["openStackInternalSubnetId"] = o.OpenStackInternalSubnetId
	}
	if !IsNil(o.ApplicationCredEnabled) {
		toSerialize["applicationCredEnabled"] = o.ApplicationCredEnabled
	}
	return toSerialize, nil
}

type NullableOpenstackCredentialsForProjectDto struct {
	value *OpenstackCredentialsForProjectDto
	isSet bool
}

func (v NullableOpenstackCredentialsForProjectDto) Get() *OpenstackCredentialsForProjectDto {
	return v.value
}

func (v *NullableOpenstackCredentialsForProjectDto) Set(val *OpenstackCredentialsForProjectDto) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenstackCredentialsForProjectDto) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenstackCredentialsForProjectDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenstackCredentialsForProjectDto(val *OpenstackCredentialsForProjectDto) *NullableOpenstackCredentialsForProjectDto {
	return &NullableOpenstackCredentialsForProjectDto{value: val, isSet: true}
}

func (v NullableOpenstackCredentialsForProjectDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenstackCredentialsForProjectDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


