/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the StandAloneVmFullDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandAloneVmFullDto{}

// StandAloneVmFullDto struct for StandAloneVmFullDto
type StandAloneVmFullDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	FlavorId *string `json:"flavorId,omitempty"`
	VolumeSize *int64 `json:"volumeSize,omitempty"`
	Ram *int64 `json:"ram,omitempty"`
	Cpu *int32 `json:"cpu,omitempty"`
	VolumeType *string `json:"volumeType,omitempty"`
	SshPublicKey *string `json:"sshPublicKey,omitempty"`
	PublicIpEnabled *bool `json:"publicIpEnabled,omitempty"`
	ImageId *string `json:"imageId,omitempty"`
	ImageName *string `json:"imageName,omitempty"`
	Status *string `json:"status,omitempty"`
	Revision *int32 `json:"revision,omitempty"`
	ShutOff *bool `json:"shutOff,omitempty"`
	PublicIp *string `json:"publicIp,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	CloudInit *string `json:"cloudInit,omitempty"`
	IsWindows *bool `json:"isWindows,omitempty"`
	StandAloneProfile *StandAloneProfileFullDto `json:"standAloneProfile,omitempty"`
	StandAloneVmDisks []StandAloneVmDiskFullDto `json:"standAloneVmDisks,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	SpotPrice *string `json:"spotPrice,omitempty"`
	Hypervisor *string `json:"hypervisor,omitempty"`
	SpotInstance *bool `json:"spotInstance,omitempty"`
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
}

// NewStandAloneVmFullDto instantiates a new StandAloneVmFullDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandAloneVmFullDto() *StandAloneVmFullDto {
	this := StandAloneVmFullDto{}
	return &this
}

// NewStandAloneVmFullDtoWithDefaults instantiates a new StandAloneVmFullDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandAloneVmFullDtoWithDefaults() *StandAloneVmFullDto {
	this := StandAloneVmFullDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *StandAloneVmFullDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StandAloneVmFullDto) SetName(v string) {
	o.Name = &v
}

// GetFlavorId returns the FlavorId field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetFlavorId() string {
	if o == nil || IsNil(o.FlavorId) {
		var ret string
		return ret
	}
	return *o.FlavorId
}

// GetFlavorIdOk returns a tuple with the FlavorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetFlavorIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlavorId) {
		return nil, false
	}
	return o.FlavorId, true
}

// HasFlavorId returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasFlavorId() bool {
	if o != nil && !IsNil(o.FlavorId) {
		return true
	}

	return false
}

// SetFlavorId gets a reference to the given string and assigns it to the FlavorId field.
func (o *StandAloneVmFullDto) SetFlavorId(v string) {
	o.FlavorId = &v
}

// GetVolumeSize returns the VolumeSize field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetVolumeSize() int64 {
	if o == nil || IsNil(o.VolumeSize) {
		var ret int64
		return ret
	}
	return *o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetVolumeSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.VolumeSize) {
		return nil, false
	}
	return o.VolumeSize, true
}

// HasVolumeSize returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasVolumeSize() bool {
	if o != nil && !IsNil(o.VolumeSize) {
		return true
	}

	return false
}

// SetVolumeSize gets a reference to the given int64 and assigns it to the VolumeSize field.
func (o *StandAloneVmFullDto) SetVolumeSize(v int64) {
	o.VolumeSize = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetRam() int64 {
	if o == nil || IsNil(o.Ram) {
		var ret int64
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetRamOk() (*int64, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given int64 and assigns it to the Ram field.
func (o *StandAloneVmFullDto) SetRam(v int64) {
	o.Ram = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *StandAloneVmFullDto) SetCpu(v int32) {
	o.Cpu = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetVolumeType() string {
	if o == nil || IsNil(o.VolumeType) {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetVolumeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeType) {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasVolumeType() bool {
	if o != nil && !IsNil(o.VolumeType) {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *StandAloneVmFullDto) SetVolumeType(v string) {
	o.VolumeType = &v
}

// GetSshPublicKey returns the SshPublicKey field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetSshPublicKey() string {
	if o == nil || IsNil(o.SshPublicKey) {
		var ret string
		return ret
	}
	return *o.SshPublicKey
}

// GetSshPublicKeyOk returns a tuple with the SshPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetSshPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshPublicKey) {
		return nil, false
	}
	return o.SshPublicKey, true
}

// HasSshPublicKey returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasSshPublicKey() bool {
	if o != nil && !IsNil(o.SshPublicKey) {
		return true
	}

	return false
}

// SetSshPublicKey gets a reference to the given string and assigns it to the SshPublicKey field.
func (o *StandAloneVmFullDto) SetSshPublicKey(v string) {
	o.SshPublicKey = &v
}

// GetPublicIpEnabled returns the PublicIpEnabled field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetPublicIpEnabled() bool {
	if o == nil || IsNil(o.PublicIpEnabled) {
		var ret bool
		return ret
	}
	return *o.PublicIpEnabled
}

// GetPublicIpEnabledOk returns a tuple with the PublicIpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetPublicIpEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PublicIpEnabled) {
		return nil, false
	}
	return o.PublicIpEnabled, true
}

// HasPublicIpEnabled returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasPublicIpEnabled() bool {
	if o != nil && !IsNil(o.PublicIpEnabled) {
		return true
	}

	return false
}

// SetPublicIpEnabled gets a reference to the given bool and assigns it to the PublicIpEnabled field.
func (o *StandAloneVmFullDto) SetPublicIpEnabled(v bool) {
	o.PublicIpEnabled = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *StandAloneVmFullDto) SetImageId(v string) {
	o.ImageId = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *StandAloneVmFullDto) SetImageName(v string) {
	o.ImageName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *StandAloneVmFullDto) SetStatus(v string) {
	o.Status = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetRevision() int32 {
	if o == nil || IsNil(o.Revision) {
		var ret int32
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given int32 and assigns it to the Revision field.
func (o *StandAloneVmFullDto) SetRevision(v int32) {
	o.Revision = &v
}

// GetShutOff returns the ShutOff field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetShutOff() bool {
	if o == nil || IsNil(o.ShutOff) {
		var ret bool
		return ret
	}
	return *o.ShutOff
}

// GetShutOffOk returns a tuple with the ShutOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetShutOffOk() (*bool, bool) {
	if o == nil || IsNil(o.ShutOff) {
		return nil, false
	}
	return o.ShutOff, true
}

// HasShutOff returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasShutOff() bool {
	if o != nil && !IsNil(o.ShutOff) {
		return true
	}

	return false
}

// SetShutOff gets a reference to the given bool and assigns it to the ShutOff field.
func (o *StandAloneVmFullDto) SetShutOff(v bool) {
	o.ShutOff = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *StandAloneVmFullDto) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *StandAloneVmFullDto) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetCloudInit returns the CloudInit field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetCloudInit() string {
	if o == nil || IsNil(o.CloudInit) {
		var ret string
		return ret
	}
	return *o.CloudInit
}

// GetCloudInitOk returns a tuple with the CloudInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetCloudInitOk() (*string, bool) {
	if o == nil || IsNil(o.CloudInit) {
		return nil, false
	}
	return o.CloudInit, true
}

// HasCloudInit returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasCloudInit() bool {
	if o != nil && !IsNil(o.CloudInit) {
		return true
	}

	return false
}

// SetCloudInit gets a reference to the given string and assigns it to the CloudInit field.
func (o *StandAloneVmFullDto) SetCloudInit(v string) {
	o.CloudInit = &v
}

// GetIsWindows returns the IsWindows field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetIsWindows() bool {
	if o == nil || IsNil(o.IsWindows) {
		var ret bool
		return ret
	}
	return *o.IsWindows
}

// GetIsWindowsOk returns a tuple with the IsWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetIsWindowsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWindows) {
		return nil, false
	}
	return o.IsWindows, true
}

// HasIsWindows returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasIsWindows() bool {
	if o != nil && !IsNil(o.IsWindows) {
		return true
	}

	return false
}

// SetIsWindows gets a reference to the given bool and assigns it to the IsWindows field.
func (o *StandAloneVmFullDto) SetIsWindows(v bool) {
	o.IsWindows = &v
}

// GetStandAloneProfile returns the StandAloneProfile field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetStandAloneProfile() StandAloneProfileFullDto {
	if o == nil || IsNil(o.StandAloneProfile) {
		var ret StandAloneProfileFullDto
		return ret
	}
	return *o.StandAloneProfile
}

// GetStandAloneProfileOk returns a tuple with the StandAloneProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetStandAloneProfileOk() (*StandAloneProfileFullDto, bool) {
	if o == nil || IsNil(o.StandAloneProfile) {
		return nil, false
	}
	return o.StandAloneProfile, true
}

// HasStandAloneProfile returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasStandAloneProfile() bool {
	if o != nil && !IsNil(o.StandAloneProfile) {
		return true
	}

	return false
}

// SetStandAloneProfile gets a reference to the given StandAloneProfileFullDto and assigns it to the StandAloneProfile field.
func (o *StandAloneVmFullDto) SetStandAloneProfile(v StandAloneProfileFullDto) {
	o.StandAloneProfile = &v
}

// GetStandAloneVmDisks returns the StandAloneVmDisks field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetStandAloneVmDisks() []StandAloneVmDiskFullDto {
	if o == nil || IsNil(o.StandAloneVmDisks) {
		var ret []StandAloneVmDiskFullDto
		return ret
	}
	return o.StandAloneVmDisks
}

// GetStandAloneVmDisksOk returns a tuple with the StandAloneVmDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetStandAloneVmDisksOk() ([]StandAloneVmDiskFullDto, bool) {
	if o == nil || IsNil(o.StandAloneVmDisks) {
		return nil, false
	}
	return o.StandAloneVmDisks, true
}

// HasStandAloneVmDisks returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasStandAloneVmDisks() bool {
	if o != nil && !IsNil(o.StandAloneVmDisks) {
		return true
	}

	return false
}

// SetStandAloneVmDisks gets a reference to the given []StandAloneVmDiskFullDto and assigns it to the StandAloneVmDisks field.
func (o *StandAloneVmFullDto) SetStandAloneVmDisks(v []StandAloneVmDiskFullDto) {
	o.StandAloneVmDisks = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *StandAloneVmFullDto) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *StandAloneVmFullDto) SetPassword(v string) {
	o.Password = &v
}

// GetSpotPrice returns the SpotPrice field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetSpotPrice() string {
	if o == nil || IsNil(o.SpotPrice) {
		var ret string
		return ret
	}
	return *o.SpotPrice
}

// GetSpotPriceOk returns a tuple with the SpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetSpotPriceOk() (*string, bool) {
	if o == nil || IsNil(o.SpotPrice) {
		return nil, false
	}
	return o.SpotPrice, true
}

// HasSpotPrice returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasSpotPrice() bool {
	if o != nil && !IsNil(o.SpotPrice) {
		return true
	}

	return false
}

// SetSpotPrice gets a reference to the given string and assigns it to the SpotPrice field.
func (o *StandAloneVmFullDto) SetSpotPrice(v string) {
	o.SpotPrice = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetHypervisor() string {
	if o == nil || IsNil(o.Hypervisor) {
		var ret string
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetHypervisorOk() (*string, bool) {
	if o == nil || IsNil(o.Hypervisor) {
		return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasHypervisor() bool {
	if o != nil && !IsNil(o.Hypervisor) {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given string and assigns it to the Hypervisor field.
func (o *StandAloneVmFullDto) SetHypervisor(v string) {
	o.Hypervisor = &v
}

// GetSpotInstance returns the SpotInstance field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetSpotInstance() bool {
	if o == nil || IsNil(o.SpotInstance) {
		var ret bool
		return ret
	}
	return *o.SpotInstance
}

// GetSpotInstanceOk returns a tuple with the SpotInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetSpotInstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.SpotInstance) {
		return nil, false
	}
	return o.SpotInstance, true
}

// HasSpotInstance returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasSpotInstance() bool {
	if o != nil && !IsNil(o.SpotInstance) {
		return true
	}

	return false
}

// SetSpotInstance gets a reference to the given bool and assigns it to the SpotInstance field.
func (o *StandAloneVmFullDto) SetSpotInstance(v bool) {
	o.SpotInstance = &v
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise.
func (o *StandAloneVmFullDto) GetAvailabilityZone() string {
	if o == nil || IsNil(o.AvailabilityZone) {
		var ret string
		return ret
	}
	return *o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmFullDto) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityZone) {
		return nil, false
	}
	return o.AvailabilityZone, true
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *StandAloneVmFullDto) HasAvailabilityZone() bool {
	if o != nil && !IsNil(o.AvailabilityZone) {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given string and assigns it to the AvailabilityZone field.
func (o *StandAloneVmFullDto) SetAvailabilityZone(v string) {
	o.AvailabilityZone = &v
}

func (o StandAloneVmFullDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandAloneVmFullDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FlavorId) {
		toSerialize["flavorId"] = o.FlavorId
	}
	if !IsNil(o.VolumeSize) {
		toSerialize["volumeSize"] = o.VolumeSize
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.VolumeType) {
		toSerialize["volumeType"] = o.VolumeType
	}
	if !IsNil(o.SshPublicKey) {
		toSerialize["sshPublicKey"] = o.SshPublicKey
	}
	if !IsNil(o.PublicIpEnabled) {
		toSerialize["publicIpEnabled"] = o.PublicIpEnabled
	}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	if !IsNil(o.ImageName) {
		toSerialize["imageName"] = o.ImageName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.ShutOff) {
		toSerialize["shutOff"] = o.ShutOff
	}
	if !IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.CloudInit) {
		toSerialize["cloudInit"] = o.CloudInit
	}
	if !IsNil(o.IsWindows) {
		toSerialize["isWindows"] = o.IsWindows
	}
	if !IsNil(o.StandAloneProfile) {
		toSerialize["standAloneProfile"] = o.StandAloneProfile
	}
	if !IsNil(o.StandAloneVmDisks) {
		toSerialize["standAloneVmDisks"] = o.StandAloneVmDisks
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.SpotPrice) {
		toSerialize["spotPrice"] = o.SpotPrice
	}
	if !IsNil(o.Hypervisor) {
		toSerialize["hypervisor"] = o.Hypervisor
	}
	if !IsNil(o.SpotInstance) {
		toSerialize["spotInstance"] = o.SpotInstance
	}
	if !IsNil(o.AvailabilityZone) {
		toSerialize["availabilityZone"] = o.AvailabilityZone
	}
	return toSerialize, nil
}

type NullableStandAloneVmFullDto struct {
	value *StandAloneVmFullDto
	isSet bool
}

func (v NullableStandAloneVmFullDto) Get() *StandAloneVmFullDto {
	return v.value
}

func (v *NullableStandAloneVmFullDto) Set(val *StandAloneVmFullDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStandAloneVmFullDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStandAloneVmFullDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandAloneVmFullDto(val *StandAloneVmFullDto) *NullableStandAloneVmFullDto {
	return &NullableStandAloneVmFullDto{value: val, isSet: true}
}

func (v NullableStandAloneVmFullDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandAloneVmFullDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


