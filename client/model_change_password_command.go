/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ChangePasswordCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangePasswordCommand{}

// ChangePasswordCommand struct for ChangePasswordCommand
type ChangePasswordCommand struct {
	Password AdminUserCreateCommandPassword `json:"password"`
	NewPassword AdminUserCreateCommandPassword `json:"newPassword"`
}

// NewChangePasswordCommand instantiates a new ChangePasswordCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePasswordCommand(password AdminUserCreateCommandPassword, newPassword AdminUserCreateCommandPassword) *ChangePasswordCommand {
	this := ChangePasswordCommand{}
	this.Password = password
	this.NewPassword = newPassword
	return &this
}

// NewChangePasswordCommandWithDefaults instantiates a new ChangePasswordCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePasswordCommandWithDefaults() *ChangePasswordCommand {
	this := ChangePasswordCommand{}
	return &this
}

// GetPassword returns the Password field value
func (o *ChangePasswordCommand) GetPassword() AdminUserCreateCommandPassword {
	if o == nil {
		var ret AdminUserCreateCommandPassword
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ChangePasswordCommand) GetPasswordOk() (*AdminUserCreateCommandPassword, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ChangePasswordCommand) SetPassword(v AdminUserCreateCommandPassword) {
	o.Password = v
}

// GetNewPassword returns the NewPassword field value
func (o *ChangePasswordCommand) GetNewPassword() AdminUserCreateCommandPassword {
	if o == nil {
		var ret AdminUserCreateCommandPassword
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *ChangePasswordCommand) GetNewPasswordOk() (*AdminUserCreateCommandPassword, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *ChangePasswordCommand) SetNewPassword(v AdminUserCreateCommandPassword) {
	o.NewPassword = v
}

func (o ChangePasswordCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangePasswordCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.Password
	toSerialize["newPassword"] = o.NewPassword
	return toSerialize, nil
}

type NullableChangePasswordCommand struct {
	value *ChangePasswordCommand
	isSet bool
}

func (v NullableChangePasswordCommand) Get() *ChangePasswordCommand {
	return v.value
}

func (v *NullableChangePasswordCommand) Set(val *ChangePasswordCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePasswordCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePasswordCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePasswordCommand(val *ChangePasswordCommand) *NullableChangePasswordCommand {
	return &NullableChangePasswordCommand{value: val, isSet: true}
}

func (v NullableChangePasswordCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePasswordCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


