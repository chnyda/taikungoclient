/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the DisableRepoCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisableRepoCommand{}

// DisableRepoCommand struct for DisableRepoCommand
type DisableRepoCommand struct {
	RepoName string `json:"repoName"`
}

// NewDisableRepoCommand instantiates a new DisableRepoCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisableRepoCommand(repoName string) *DisableRepoCommand {
	this := DisableRepoCommand{}
	this.RepoName = repoName
	return &this
}

// NewDisableRepoCommandWithDefaults instantiates a new DisableRepoCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisableRepoCommandWithDefaults() *DisableRepoCommand {
	this := DisableRepoCommand{}
	return &this
}

// GetRepoName returns the RepoName field value
func (o *DisableRepoCommand) GetRepoName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepoName
}

// GetRepoNameOk returns a tuple with the RepoName field value
// and a boolean to check if the value has been set.
func (o *DisableRepoCommand) GetRepoNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepoName, true
}

// SetRepoName sets field value
func (o *DisableRepoCommand) SetRepoName(v string) {
	o.RepoName = v
}

func (o DisableRepoCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisableRepoCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repoName"] = o.RepoName
	return toSerialize, nil
}

type NullableDisableRepoCommand struct {
	value *DisableRepoCommand
	isSet bool
}

func (v NullableDisableRepoCommand) Get() *DisableRepoCommand {
	return v.value
}

func (v *NullableDisableRepoCommand) Set(val *DisableRepoCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableDisableRepoCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableDisableRepoCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisableRepoCommand(val *DisableRepoCommand) *NullableDisableRepoCommand {
	return &NullableDisableRepoCommand{value: val, isSet: true}
}

func (v NullableDisableRepoCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisableRepoCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


