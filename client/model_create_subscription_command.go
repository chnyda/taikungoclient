/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CreateSubscriptionCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionCommand{}

// CreateSubscriptionCommand struct for CreateSubscriptionCommand
type CreateSubscriptionCommand struct {
	Name string `json:"name"`
	ProjectLimit *int32 `json:"projectLimit,omitempty"`
	ServerLimit *int32 `json:"serverLimit,omitempty"`
	UserLimit *int32 `json:"userLimit,omitempty"`
	CloudCredentialLimit *int32 `json:"cloudCredentialLimit,omitempty"`
	TrialDays *int32 `json:"trialDays,omitempty"`
	MonthlyPrice *float64 `json:"monthlyPrice,omitempty"`
	TcuPrice *float64 `json:"tcuPrice,omitempty"`
	YearlyPrice *float64 `json:"yearlyPrice,omitempty"`
}

// NewCreateSubscriptionCommand instantiates a new CreateSubscriptionCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionCommand(name string) *CreateSubscriptionCommand {
	this := CreateSubscriptionCommand{}
	this.Name = name
	return &this
}

// NewCreateSubscriptionCommandWithDefaults instantiates a new CreateSubscriptionCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionCommandWithDefaults() *CreateSubscriptionCommand {
	this := CreateSubscriptionCommand{}
	return &this
}

// GetName returns the Name field value
func (o *CreateSubscriptionCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateSubscriptionCommand) SetName(v string) {
	o.Name = v
}

// GetProjectLimit returns the ProjectLimit field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetProjectLimit() int32 {
	if o == nil || IsNil(o.ProjectLimit) {
		var ret int32
		return ret
	}
	return *o.ProjectLimit
}

// GetProjectLimitOk returns a tuple with the ProjectLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetProjectLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectLimit) {
		return nil, false
	}
	return o.ProjectLimit, true
}

// HasProjectLimit returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasProjectLimit() bool {
	if o != nil && !IsNil(o.ProjectLimit) {
		return true
	}

	return false
}

// SetProjectLimit gets a reference to the given int32 and assigns it to the ProjectLimit field.
func (o *CreateSubscriptionCommand) SetProjectLimit(v int32) {
	o.ProjectLimit = &v
}

// GetServerLimit returns the ServerLimit field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetServerLimit() int32 {
	if o == nil || IsNil(o.ServerLimit) {
		var ret int32
		return ret
	}
	return *o.ServerLimit
}

// GetServerLimitOk returns a tuple with the ServerLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetServerLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerLimit) {
		return nil, false
	}
	return o.ServerLimit, true
}

// HasServerLimit returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasServerLimit() bool {
	if o != nil && !IsNil(o.ServerLimit) {
		return true
	}

	return false
}

// SetServerLimit gets a reference to the given int32 and assigns it to the ServerLimit field.
func (o *CreateSubscriptionCommand) SetServerLimit(v int32) {
	o.ServerLimit = &v
}

// GetUserLimit returns the UserLimit field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetUserLimit() int32 {
	if o == nil || IsNil(o.UserLimit) {
		var ret int32
		return ret
	}
	return *o.UserLimit
}

// GetUserLimitOk returns a tuple with the UserLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetUserLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.UserLimit) {
		return nil, false
	}
	return o.UserLimit, true
}

// HasUserLimit returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasUserLimit() bool {
	if o != nil && !IsNil(o.UserLimit) {
		return true
	}

	return false
}

// SetUserLimit gets a reference to the given int32 and assigns it to the UserLimit field.
func (o *CreateSubscriptionCommand) SetUserLimit(v int32) {
	o.UserLimit = &v
}

// GetCloudCredentialLimit returns the CloudCredentialLimit field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetCloudCredentialLimit() int32 {
	if o == nil || IsNil(o.CloudCredentialLimit) {
		var ret int32
		return ret
	}
	return *o.CloudCredentialLimit
}

// GetCloudCredentialLimitOk returns a tuple with the CloudCredentialLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetCloudCredentialLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.CloudCredentialLimit) {
		return nil, false
	}
	return o.CloudCredentialLimit, true
}

// HasCloudCredentialLimit returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasCloudCredentialLimit() bool {
	if o != nil && !IsNil(o.CloudCredentialLimit) {
		return true
	}

	return false
}

// SetCloudCredentialLimit gets a reference to the given int32 and assigns it to the CloudCredentialLimit field.
func (o *CreateSubscriptionCommand) SetCloudCredentialLimit(v int32) {
	o.CloudCredentialLimit = &v
}

// GetTrialDays returns the TrialDays field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetTrialDays() int32 {
	if o == nil || IsNil(o.TrialDays) {
		var ret int32
		return ret
	}
	return *o.TrialDays
}

// GetTrialDaysOk returns a tuple with the TrialDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetTrialDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialDays) {
		return nil, false
	}
	return o.TrialDays, true
}

// HasTrialDays returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasTrialDays() bool {
	if o != nil && !IsNil(o.TrialDays) {
		return true
	}

	return false
}

// SetTrialDays gets a reference to the given int32 and assigns it to the TrialDays field.
func (o *CreateSubscriptionCommand) SetTrialDays(v int32) {
	o.TrialDays = &v
}

// GetMonthlyPrice returns the MonthlyPrice field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetMonthlyPrice() float64 {
	if o == nil || IsNil(o.MonthlyPrice) {
		var ret float64
		return ret
	}
	return *o.MonthlyPrice
}

// GetMonthlyPriceOk returns a tuple with the MonthlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetMonthlyPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.MonthlyPrice) {
		return nil, false
	}
	return o.MonthlyPrice, true
}

// HasMonthlyPrice returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasMonthlyPrice() bool {
	if o != nil && !IsNil(o.MonthlyPrice) {
		return true
	}

	return false
}

// SetMonthlyPrice gets a reference to the given float64 and assigns it to the MonthlyPrice field.
func (o *CreateSubscriptionCommand) SetMonthlyPrice(v float64) {
	o.MonthlyPrice = &v
}

// GetTcuPrice returns the TcuPrice field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetTcuPrice() float64 {
	if o == nil || IsNil(o.TcuPrice) {
		var ret float64
		return ret
	}
	return *o.TcuPrice
}

// GetTcuPriceOk returns a tuple with the TcuPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetTcuPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TcuPrice) {
		return nil, false
	}
	return o.TcuPrice, true
}

// HasTcuPrice returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasTcuPrice() bool {
	if o != nil && !IsNil(o.TcuPrice) {
		return true
	}

	return false
}

// SetTcuPrice gets a reference to the given float64 and assigns it to the TcuPrice field.
func (o *CreateSubscriptionCommand) SetTcuPrice(v float64) {
	o.TcuPrice = &v
}

// GetYearlyPrice returns the YearlyPrice field value if set, zero value otherwise.
func (o *CreateSubscriptionCommand) GetYearlyPrice() float64 {
	if o == nil || IsNil(o.YearlyPrice) {
		var ret float64
		return ret
	}
	return *o.YearlyPrice
}

// GetYearlyPriceOk returns a tuple with the YearlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionCommand) GetYearlyPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.YearlyPrice) {
		return nil, false
	}
	return o.YearlyPrice, true
}

// HasYearlyPrice returns a boolean if a field has been set.
func (o *CreateSubscriptionCommand) HasYearlyPrice() bool {
	if o != nil && !IsNil(o.YearlyPrice) {
		return true
	}

	return false
}

// SetYearlyPrice gets a reference to the given float64 and assigns it to the YearlyPrice field.
func (o *CreateSubscriptionCommand) SetYearlyPrice(v float64) {
	o.YearlyPrice = &v
}

func (o CreateSubscriptionCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.ProjectLimit) {
		toSerialize["projectLimit"] = o.ProjectLimit
	}
	if !IsNil(o.ServerLimit) {
		toSerialize["serverLimit"] = o.ServerLimit
	}
	if !IsNil(o.UserLimit) {
		toSerialize["userLimit"] = o.UserLimit
	}
	if !IsNil(o.CloudCredentialLimit) {
		toSerialize["cloudCredentialLimit"] = o.CloudCredentialLimit
	}
	if !IsNil(o.TrialDays) {
		toSerialize["trialDays"] = o.TrialDays
	}
	if !IsNil(o.MonthlyPrice) {
		toSerialize["monthlyPrice"] = o.MonthlyPrice
	}
	if !IsNil(o.TcuPrice) {
		toSerialize["tcuPrice"] = o.TcuPrice
	}
	if !IsNil(o.YearlyPrice) {
		toSerialize["yearlyPrice"] = o.YearlyPrice
	}
	return toSerialize, nil
}

type NullableCreateSubscriptionCommand struct {
	value *CreateSubscriptionCommand
	isSet bool
}

func (v NullableCreateSubscriptionCommand) Get() *CreateSubscriptionCommand {
	return v.value
}

func (v *NullableCreateSubscriptionCommand) Set(val *CreateSubscriptionCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionCommand(val *CreateSubscriptionCommand) *NullableCreateSubscriptionCommand {
	return &NullableCreateSubscriptionCommand{value: val, isSet: true}
}

func (v NullableCreateSubscriptionCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


