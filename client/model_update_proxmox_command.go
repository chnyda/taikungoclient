/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateProxmoxCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProxmoxCommand{}

// UpdateProxmoxCommand struct for UpdateProxmoxCommand
type UpdateProxmoxCommand struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	TokenId string `json:"tokenId"`
	TokenSecret string `json:"tokenSecret"`
}

// NewUpdateProxmoxCommand instantiates a new UpdateProxmoxCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProxmoxCommand(id int32, name string, tokenId string, tokenSecret string) *UpdateProxmoxCommand {
	this := UpdateProxmoxCommand{}
	this.Id = id
	this.Name = name
	this.TokenId = tokenId
	this.TokenSecret = tokenSecret
	return &this
}

// NewUpdateProxmoxCommandWithDefaults instantiates a new UpdateProxmoxCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProxmoxCommandWithDefaults() *UpdateProxmoxCommand {
	this := UpdateProxmoxCommand{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateProxmoxCommand) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateProxmoxCommand) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateProxmoxCommand) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *UpdateProxmoxCommand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateProxmoxCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateProxmoxCommand) SetName(v string) {
	o.Name = v
}

// GetTokenId returns the TokenId field value
func (o *UpdateProxmoxCommand) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *UpdateProxmoxCommand) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *UpdateProxmoxCommand) SetTokenId(v string) {
	o.TokenId = v
}

// GetTokenSecret returns the TokenSecret field value
func (o *UpdateProxmoxCommand) GetTokenSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenSecret
}

// GetTokenSecretOk returns a tuple with the TokenSecret field value
// and a boolean to check if the value has been set.
func (o *UpdateProxmoxCommand) GetTokenSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenSecret, true
}

// SetTokenSecret sets field value
func (o *UpdateProxmoxCommand) SetTokenSecret(v string) {
	o.TokenSecret = v
}

func (o UpdateProxmoxCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProxmoxCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["tokenId"] = o.TokenId
	toSerialize["tokenSecret"] = o.TokenSecret
	return toSerialize, nil
}

type NullableUpdateProxmoxCommand struct {
	value *UpdateProxmoxCommand
	isSet bool
}

func (v NullableUpdateProxmoxCommand) Get() *UpdateProxmoxCommand {
	return v.value
}

func (v *NullableUpdateProxmoxCommand) Set(val *UpdateProxmoxCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProxmoxCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProxmoxCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProxmoxCommand(val *UpdateProxmoxCommand) *NullableUpdateProxmoxCommand {
	return &NullableUpdateProxmoxCommand{value: val, isSet: true}
}

func (v NullableUpdateProxmoxCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProxmoxCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


