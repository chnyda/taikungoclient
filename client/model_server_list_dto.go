/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ServerListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerListDto{}

// ServerListDto struct for ServerListDto
type ServerListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ProjectName *string `json:"projectName,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	DiskSize *int64 `json:"diskSize,omitempty"`
	KubernetesHealth *string `json:"kubernetesHealth,omitempty"`
	GoogleMachineType *string `json:"googleMachineType,omitempty"`
	TanzuFlavor *string `json:"tanzuFlavor,omitempty"`
	ProxmoxFlavor *string `json:"proxmoxFlavor,omitempty"`
	Cpu *int32 `json:"cpu,omitempty"`
	Ram *int64 `json:"ram,omitempty"`
	Role *string `json:"role,omitempty"`
	Status *string `json:"status,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	OpenstackFlavor *string `json:"openstackFlavor,omitempty"`
	AwsInstanceType *string `json:"awsInstanceType,omitempty"`
	AzureVmSize *string `json:"azureVmSize,omitempty"`
	CloudType *string `json:"cloudType,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	SpotPrice *string `json:"spotPrice,omitempty"`
	SpotInstance *bool `json:"spotInstance,omitempty"`
	ShutOff *bool `json:"shutOff,omitempty"`
	AutoscalingGroup *string `json:"autoscalingGroup,omitempty"`
	ProviderID *string `json:"providerID,omitempty"`
	AwsHostName *string `json:"awsHostName,omitempty"`
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	Hypervisor *string `json:"hypervisor,omitempty"`
	ProxmoxRole *string `json:"proxmoxRole,omitempty"`
	ProxmoxNFSDiskSize *int32 `json:"proxmoxNFSDiskSize,omitempty"`
	ActionButtons *ServerActionButtonVisibilityDto `json:"actionButtons,omitempty"`
	KubernetesNodeLabels []KubernetesNodeLabelsDto `json:"kubernetesNodeLabels,omitempty"`
}

// NewServerListDto instantiates a new ServerListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerListDto() *ServerListDto {
	this := ServerListDto{}
	return &this
}

// NewServerListDtoWithDefaults instantiates a new ServerListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerListDtoWithDefaults() *ServerListDto {
	this := ServerListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServerListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServerListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServerListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServerListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServerListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServerListDto) SetName(v string) {
	o.Name = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ServerListDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ServerListDto) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ServerListDto) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ServerListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ServerListDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ServerListDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ServerListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ServerListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ServerListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ServerListDto) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ServerListDto) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ServerListDto) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ServerListDto) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ServerListDto) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ServerListDto) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *ServerListDto) GetDiskSize() int64 {
	if o == nil || IsNil(o.DiskSize) {
		var ret int64
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetDiskSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.DiskSize) {
		return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *ServerListDto) HasDiskSize() bool {
	if o != nil && !IsNil(o.DiskSize) {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given int64 and assigns it to the DiskSize field.
func (o *ServerListDto) SetDiskSize(v int64) {
	o.DiskSize = &v
}

// GetKubernetesHealth returns the KubernetesHealth field value if set, zero value otherwise.
func (o *ServerListDto) GetKubernetesHealth() string {
	if o == nil || IsNil(o.KubernetesHealth) {
		var ret string
		return ret
	}
	return *o.KubernetesHealth
}

// GetKubernetesHealthOk returns a tuple with the KubernetesHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetKubernetesHealthOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesHealth) {
		return nil, false
	}
	return o.KubernetesHealth, true
}

// HasKubernetesHealth returns a boolean if a field has been set.
func (o *ServerListDto) HasKubernetesHealth() bool {
	if o != nil && !IsNil(o.KubernetesHealth) {
		return true
	}

	return false
}

// SetKubernetesHealth gets a reference to the given string and assigns it to the KubernetesHealth field.
func (o *ServerListDto) SetKubernetesHealth(v string) {
	o.KubernetesHealth = &v
}

// GetGoogleMachineType returns the GoogleMachineType field value if set, zero value otherwise.
func (o *ServerListDto) GetGoogleMachineType() string {
	if o == nil || IsNil(o.GoogleMachineType) {
		var ret string
		return ret
	}
	return *o.GoogleMachineType
}

// GetGoogleMachineTypeOk returns a tuple with the GoogleMachineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetGoogleMachineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleMachineType) {
		return nil, false
	}
	return o.GoogleMachineType, true
}

// HasGoogleMachineType returns a boolean if a field has been set.
func (o *ServerListDto) HasGoogleMachineType() bool {
	if o != nil && !IsNil(o.GoogleMachineType) {
		return true
	}

	return false
}

// SetGoogleMachineType gets a reference to the given string and assigns it to the GoogleMachineType field.
func (o *ServerListDto) SetGoogleMachineType(v string) {
	o.GoogleMachineType = &v
}

// GetTanzuFlavor returns the TanzuFlavor field value if set, zero value otherwise.
func (o *ServerListDto) GetTanzuFlavor() string {
	if o == nil || IsNil(o.TanzuFlavor) {
		var ret string
		return ret
	}
	return *o.TanzuFlavor
}

// GetTanzuFlavorOk returns a tuple with the TanzuFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetTanzuFlavorOk() (*string, bool) {
	if o == nil || IsNil(o.TanzuFlavor) {
		return nil, false
	}
	return o.TanzuFlavor, true
}

// HasTanzuFlavor returns a boolean if a field has been set.
func (o *ServerListDto) HasTanzuFlavor() bool {
	if o != nil && !IsNil(o.TanzuFlavor) {
		return true
	}

	return false
}

// SetTanzuFlavor gets a reference to the given string and assigns it to the TanzuFlavor field.
func (o *ServerListDto) SetTanzuFlavor(v string) {
	o.TanzuFlavor = &v
}

// GetProxmoxFlavor returns the ProxmoxFlavor field value if set, zero value otherwise.
func (o *ServerListDto) GetProxmoxFlavor() string {
	if o == nil || IsNil(o.ProxmoxFlavor) {
		var ret string
		return ret
	}
	return *o.ProxmoxFlavor
}

// GetProxmoxFlavorOk returns a tuple with the ProxmoxFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetProxmoxFlavorOk() (*string, bool) {
	if o == nil || IsNil(o.ProxmoxFlavor) {
		return nil, false
	}
	return o.ProxmoxFlavor, true
}

// HasProxmoxFlavor returns a boolean if a field has been set.
func (o *ServerListDto) HasProxmoxFlavor() bool {
	if o != nil && !IsNil(o.ProxmoxFlavor) {
		return true
	}

	return false
}

// SetProxmoxFlavor gets a reference to the given string and assigns it to the ProxmoxFlavor field.
func (o *ServerListDto) SetProxmoxFlavor(v string) {
	o.ProxmoxFlavor = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *ServerListDto) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *ServerListDto) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *ServerListDto) SetCpu(v int32) {
	o.Cpu = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *ServerListDto) GetRam() int64 {
	if o == nil || IsNil(o.Ram) {
		var ret int64
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetRamOk() (*int64, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *ServerListDto) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given int64 and assigns it to the Ram field.
func (o *ServerListDto) SetRam(v int64) {
	o.Ram = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ServerListDto) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ServerListDto) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ServerListDto) SetRole(v string) {
	o.Role = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServerListDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServerListDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ServerListDto) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ServerListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServerListDto) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ServerListDto) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetOpenstackFlavor returns the OpenstackFlavor field value if set, zero value otherwise.
func (o *ServerListDto) GetOpenstackFlavor() string {
	if o == nil || IsNil(o.OpenstackFlavor) {
		var ret string
		return ret
	}
	return *o.OpenstackFlavor
}

// GetOpenstackFlavorOk returns a tuple with the OpenstackFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetOpenstackFlavorOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackFlavor) {
		return nil, false
	}
	return o.OpenstackFlavor, true
}

// HasOpenstackFlavor returns a boolean if a field has been set.
func (o *ServerListDto) HasOpenstackFlavor() bool {
	if o != nil && !IsNil(o.OpenstackFlavor) {
		return true
	}

	return false
}

// SetOpenstackFlavor gets a reference to the given string and assigns it to the OpenstackFlavor field.
func (o *ServerListDto) SetOpenstackFlavor(v string) {
	o.OpenstackFlavor = &v
}

// GetAwsInstanceType returns the AwsInstanceType field value if set, zero value otherwise.
func (o *ServerListDto) GetAwsInstanceType() string {
	if o == nil || IsNil(o.AwsInstanceType) {
		var ret string
		return ret
	}
	return *o.AwsInstanceType
}

// GetAwsInstanceTypeOk returns a tuple with the AwsInstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetAwsInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AwsInstanceType) {
		return nil, false
	}
	return o.AwsInstanceType, true
}

// HasAwsInstanceType returns a boolean if a field has been set.
func (o *ServerListDto) HasAwsInstanceType() bool {
	if o != nil && !IsNil(o.AwsInstanceType) {
		return true
	}

	return false
}

// SetAwsInstanceType gets a reference to the given string and assigns it to the AwsInstanceType field.
func (o *ServerListDto) SetAwsInstanceType(v string) {
	o.AwsInstanceType = &v
}

// GetAzureVmSize returns the AzureVmSize field value if set, zero value otherwise.
func (o *ServerListDto) GetAzureVmSize() string {
	if o == nil || IsNil(o.AzureVmSize) {
		var ret string
		return ret
	}
	return *o.AzureVmSize
}

// GetAzureVmSizeOk returns a tuple with the AzureVmSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetAzureVmSizeOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVmSize) {
		return nil, false
	}
	return o.AzureVmSize, true
}

// HasAzureVmSize returns a boolean if a field has been set.
func (o *ServerListDto) HasAzureVmSize() bool {
	if o != nil && !IsNil(o.AzureVmSize) {
		return true
	}

	return false
}

// SetAzureVmSize gets a reference to the given string and assigns it to the AzureVmSize field.
func (o *ServerListDto) SetAzureVmSize(v string) {
	o.AzureVmSize = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *ServerListDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetCloudTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *ServerListDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *ServerListDto) SetCloudType(v string) {
	o.CloudType = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ServerListDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ServerListDto) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *ServerListDto) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ServerListDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ServerListDto) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *ServerListDto) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *ServerListDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ServerListDto) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *ServerListDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetSpotPrice returns the SpotPrice field value if set, zero value otherwise.
func (o *ServerListDto) GetSpotPrice() string {
	if o == nil || IsNil(o.SpotPrice) {
		var ret string
		return ret
	}
	return *o.SpotPrice
}

// GetSpotPriceOk returns a tuple with the SpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetSpotPriceOk() (*string, bool) {
	if o == nil || IsNil(o.SpotPrice) {
		return nil, false
	}
	return o.SpotPrice, true
}

// HasSpotPrice returns a boolean if a field has been set.
func (o *ServerListDto) HasSpotPrice() bool {
	if o != nil && !IsNil(o.SpotPrice) {
		return true
	}

	return false
}

// SetSpotPrice gets a reference to the given string and assigns it to the SpotPrice field.
func (o *ServerListDto) SetSpotPrice(v string) {
	o.SpotPrice = &v
}

// GetSpotInstance returns the SpotInstance field value if set, zero value otherwise.
func (o *ServerListDto) GetSpotInstance() bool {
	if o == nil || IsNil(o.SpotInstance) {
		var ret bool
		return ret
	}
	return *o.SpotInstance
}

// GetSpotInstanceOk returns a tuple with the SpotInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetSpotInstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.SpotInstance) {
		return nil, false
	}
	return o.SpotInstance, true
}

// HasSpotInstance returns a boolean if a field has been set.
func (o *ServerListDto) HasSpotInstance() bool {
	if o != nil && !IsNil(o.SpotInstance) {
		return true
	}

	return false
}

// SetSpotInstance gets a reference to the given bool and assigns it to the SpotInstance field.
func (o *ServerListDto) SetSpotInstance(v bool) {
	o.SpotInstance = &v
}

// GetShutOff returns the ShutOff field value if set, zero value otherwise.
func (o *ServerListDto) GetShutOff() bool {
	if o == nil || IsNil(o.ShutOff) {
		var ret bool
		return ret
	}
	return *o.ShutOff
}

// GetShutOffOk returns a tuple with the ShutOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetShutOffOk() (*bool, bool) {
	if o == nil || IsNil(o.ShutOff) {
		return nil, false
	}
	return o.ShutOff, true
}

// HasShutOff returns a boolean if a field has been set.
func (o *ServerListDto) HasShutOff() bool {
	if o != nil && !IsNil(o.ShutOff) {
		return true
	}

	return false
}

// SetShutOff gets a reference to the given bool and assigns it to the ShutOff field.
func (o *ServerListDto) SetShutOff(v bool) {
	o.ShutOff = &v
}

// GetAutoscalingGroup returns the AutoscalingGroup field value if set, zero value otherwise.
func (o *ServerListDto) GetAutoscalingGroup() string {
	if o == nil || IsNil(o.AutoscalingGroup) {
		var ret string
		return ret
	}
	return *o.AutoscalingGroup
}

// GetAutoscalingGroupOk returns a tuple with the AutoscalingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetAutoscalingGroupOk() (*string, bool) {
	if o == nil || IsNil(o.AutoscalingGroup) {
		return nil, false
	}
	return o.AutoscalingGroup, true
}

// HasAutoscalingGroup returns a boolean if a field has been set.
func (o *ServerListDto) HasAutoscalingGroup() bool {
	if o != nil && !IsNil(o.AutoscalingGroup) {
		return true
	}

	return false
}

// SetAutoscalingGroup gets a reference to the given string and assigns it to the AutoscalingGroup field.
func (o *ServerListDto) SetAutoscalingGroup(v string) {
	o.AutoscalingGroup = &v
}

// GetProviderID returns the ProviderID field value if set, zero value otherwise.
func (o *ServerListDto) GetProviderID() string {
	if o == nil || IsNil(o.ProviderID) {
		var ret string
		return ret
	}
	return *o.ProviderID
}

// GetProviderIDOk returns a tuple with the ProviderID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetProviderIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderID) {
		return nil, false
	}
	return o.ProviderID, true
}

// HasProviderID returns a boolean if a field has been set.
func (o *ServerListDto) HasProviderID() bool {
	if o != nil && !IsNil(o.ProviderID) {
		return true
	}

	return false
}

// SetProviderID gets a reference to the given string and assigns it to the ProviderID field.
func (o *ServerListDto) SetProviderID(v string) {
	o.ProviderID = &v
}

// GetAwsHostName returns the AwsHostName field value if set, zero value otherwise.
func (o *ServerListDto) GetAwsHostName() string {
	if o == nil || IsNil(o.AwsHostName) {
		var ret string
		return ret
	}
	return *o.AwsHostName
}

// GetAwsHostNameOk returns a tuple with the AwsHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetAwsHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.AwsHostName) {
		return nil, false
	}
	return o.AwsHostName, true
}

// HasAwsHostName returns a boolean if a field has been set.
func (o *ServerListDto) HasAwsHostName() bool {
	if o != nil && !IsNil(o.AwsHostName) {
		return true
	}

	return false
}

// SetAwsHostName gets a reference to the given string and assigns it to the AwsHostName field.
func (o *ServerListDto) SetAwsHostName(v string) {
	o.AwsHostName = &v
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise.
func (o *ServerListDto) GetAvailabilityZone() string {
	if o == nil || IsNil(o.AvailabilityZone) {
		var ret string
		return ret
	}
	return *o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityZone) {
		return nil, false
	}
	return o.AvailabilityZone, true
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *ServerListDto) HasAvailabilityZone() bool {
	if o != nil && !IsNil(o.AvailabilityZone) {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given string and assigns it to the AvailabilityZone field.
func (o *ServerListDto) SetAvailabilityZone(v string) {
	o.AvailabilityZone = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *ServerListDto) GetHypervisor() string {
	if o == nil || IsNil(o.Hypervisor) {
		var ret string
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetHypervisorOk() (*string, bool) {
	if o == nil || IsNil(o.Hypervisor) {
		return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *ServerListDto) HasHypervisor() bool {
	if o != nil && !IsNil(o.Hypervisor) {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given string and assigns it to the Hypervisor field.
func (o *ServerListDto) SetHypervisor(v string) {
	o.Hypervisor = &v
}

// GetProxmoxRole returns the ProxmoxRole field value if set, zero value otherwise.
func (o *ServerListDto) GetProxmoxRole() string {
	if o == nil || IsNil(o.ProxmoxRole) {
		var ret string
		return ret
	}
	return *o.ProxmoxRole
}

// GetProxmoxRoleOk returns a tuple with the ProxmoxRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetProxmoxRoleOk() (*string, bool) {
	if o == nil || IsNil(o.ProxmoxRole) {
		return nil, false
	}
	return o.ProxmoxRole, true
}

// HasProxmoxRole returns a boolean if a field has been set.
func (o *ServerListDto) HasProxmoxRole() bool {
	if o != nil && !IsNil(o.ProxmoxRole) {
		return true
	}

	return false
}

// SetProxmoxRole gets a reference to the given string and assigns it to the ProxmoxRole field.
func (o *ServerListDto) SetProxmoxRole(v string) {
	o.ProxmoxRole = &v
}

// GetProxmoxNFSDiskSize returns the ProxmoxNFSDiskSize field value if set, zero value otherwise.
func (o *ServerListDto) GetProxmoxNFSDiskSize() int32 {
	if o == nil || IsNil(o.ProxmoxNFSDiskSize) {
		var ret int32
		return ret
	}
	return *o.ProxmoxNFSDiskSize
}

// GetProxmoxNFSDiskSizeOk returns a tuple with the ProxmoxNFSDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetProxmoxNFSDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.ProxmoxNFSDiskSize) {
		return nil, false
	}
	return o.ProxmoxNFSDiskSize, true
}

// HasProxmoxNFSDiskSize returns a boolean if a field has been set.
func (o *ServerListDto) HasProxmoxNFSDiskSize() bool {
	if o != nil && !IsNil(o.ProxmoxNFSDiskSize) {
		return true
	}

	return false
}

// SetProxmoxNFSDiskSize gets a reference to the given int32 and assigns it to the ProxmoxNFSDiskSize field.
func (o *ServerListDto) SetProxmoxNFSDiskSize(v int32) {
	o.ProxmoxNFSDiskSize = &v
}

// GetActionButtons returns the ActionButtons field value if set, zero value otherwise.
func (o *ServerListDto) GetActionButtons() ServerActionButtonVisibilityDto {
	if o == nil || IsNil(o.ActionButtons) {
		var ret ServerActionButtonVisibilityDto
		return ret
	}
	return *o.ActionButtons
}

// GetActionButtonsOk returns a tuple with the ActionButtons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetActionButtonsOk() (*ServerActionButtonVisibilityDto, bool) {
	if o == nil || IsNil(o.ActionButtons) {
		return nil, false
	}
	return o.ActionButtons, true
}

// HasActionButtons returns a boolean if a field has been set.
func (o *ServerListDto) HasActionButtons() bool {
	if o != nil && !IsNil(o.ActionButtons) {
		return true
	}

	return false
}

// SetActionButtons gets a reference to the given ServerActionButtonVisibilityDto and assigns it to the ActionButtons field.
func (o *ServerListDto) SetActionButtons(v ServerActionButtonVisibilityDto) {
	o.ActionButtons = &v
}

// GetKubernetesNodeLabels returns the KubernetesNodeLabels field value if set, zero value otherwise.
func (o *ServerListDto) GetKubernetesNodeLabels() []KubernetesNodeLabelsDto {
	if o == nil || IsNil(o.KubernetesNodeLabels) {
		var ret []KubernetesNodeLabelsDto
		return ret
	}
	return o.KubernetesNodeLabels
}

// GetKubernetesNodeLabelsOk returns a tuple with the KubernetesNodeLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerListDto) GetKubernetesNodeLabelsOk() ([]KubernetesNodeLabelsDto, bool) {
	if o == nil || IsNil(o.KubernetesNodeLabels) {
		return nil, false
	}
	return o.KubernetesNodeLabels, true
}

// HasKubernetesNodeLabels returns a boolean if a field has been set.
func (o *ServerListDto) HasKubernetesNodeLabels() bool {
	if o != nil && !IsNil(o.KubernetesNodeLabels) {
		return true
	}

	return false
}

// SetKubernetesNodeLabels gets a reference to the given []KubernetesNodeLabelsDto and assigns it to the KubernetesNodeLabels field.
func (o *ServerListDto) SetKubernetesNodeLabels(v []KubernetesNodeLabelsDto) {
	o.KubernetesNodeLabels = v
}

func (o ServerListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.DiskSize) {
		toSerialize["diskSize"] = o.DiskSize
	}
	if !IsNil(o.KubernetesHealth) {
		toSerialize["kubernetesHealth"] = o.KubernetesHealth
	}
	if !IsNil(o.GoogleMachineType) {
		toSerialize["googleMachineType"] = o.GoogleMachineType
	}
	if !IsNil(o.TanzuFlavor) {
		toSerialize["tanzuFlavor"] = o.TanzuFlavor
	}
	if !IsNil(o.ProxmoxFlavor) {
		toSerialize["proxmoxFlavor"] = o.ProxmoxFlavor
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.OpenstackFlavor) {
		toSerialize["openstackFlavor"] = o.OpenstackFlavor
	}
	if !IsNil(o.AwsInstanceType) {
		toSerialize["awsInstanceType"] = o.AwsInstanceType
	}
	if !IsNil(o.AzureVmSize) {
		toSerialize["azureVmSize"] = o.AzureVmSize
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.SpotPrice) {
		toSerialize["spotPrice"] = o.SpotPrice
	}
	if !IsNil(o.SpotInstance) {
		toSerialize["spotInstance"] = o.SpotInstance
	}
	if !IsNil(o.ShutOff) {
		toSerialize["shutOff"] = o.ShutOff
	}
	if !IsNil(o.AutoscalingGroup) {
		toSerialize["autoscalingGroup"] = o.AutoscalingGroup
	}
	if !IsNil(o.ProviderID) {
		toSerialize["providerID"] = o.ProviderID
	}
	if !IsNil(o.AwsHostName) {
		toSerialize["awsHostName"] = o.AwsHostName
	}
	if !IsNil(o.AvailabilityZone) {
		toSerialize["availabilityZone"] = o.AvailabilityZone
	}
	if !IsNil(o.Hypervisor) {
		toSerialize["hypervisor"] = o.Hypervisor
	}
	if !IsNil(o.ProxmoxRole) {
		toSerialize["proxmoxRole"] = o.ProxmoxRole
	}
	if !IsNil(o.ProxmoxNFSDiskSize) {
		toSerialize["proxmoxNFSDiskSize"] = o.ProxmoxNFSDiskSize
	}
	if !IsNil(o.ActionButtons) {
		toSerialize["actionButtons"] = o.ActionButtons
	}
	if !IsNil(o.KubernetesNodeLabels) {
		toSerialize["kubernetesNodeLabels"] = o.KubernetesNodeLabels
	}
	return toSerialize, nil
}

type NullableServerListDto struct {
	value *ServerListDto
	isSet bool
}

func (v NullableServerListDto) Get() *ServerListDto {
	return v.value
}

func (v *NullableServerListDto) Set(val *ServerListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableServerListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableServerListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerListDto(val *ServerListDto) *NullableServerListDto {
	return &NullableServerListDto{value: val, isSet: true}
}

func (v NullableServerListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


