/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the GroupedShowbackSummariesByProjectDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupedShowbackSummariesByProjectDto{}

// GroupedShowbackSummariesByProjectDto struct for GroupedShowbackSummariesByProjectDto
type GroupedShowbackSummariesByProjectDto struct {
	ProjectName *string `json:"projectName,omitempty"`
	TotalPrice *float64 `json:"totalPrice,omitempty"`
}

// NewGroupedShowbackSummariesByProjectDto instantiates a new GroupedShowbackSummariesByProjectDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupedShowbackSummariesByProjectDto() *GroupedShowbackSummariesByProjectDto {
	this := GroupedShowbackSummariesByProjectDto{}
	return &this
}

// NewGroupedShowbackSummariesByProjectDtoWithDefaults instantiates a new GroupedShowbackSummariesByProjectDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupedShowbackSummariesByProjectDtoWithDefaults() *GroupedShowbackSummariesByProjectDto {
	this := GroupedShowbackSummariesByProjectDto{}
	return &this
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *GroupedShowbackSummariesByProjectDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummariesByProjectDto) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *GroupedShowbackSummariesByProjectDto) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *GroupedShowbackSummariesByProjectDto) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *GroupedShowbackSummariesByProjectDto) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummariesByProjectDto) GetTotalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *GroupedShowbackSummariesByProjectDto) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *GroupedShowbackSummariesByProjectDto) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

func (o GroupedShowbackSummariesByProjectDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupedShowbackSummariesByProjectDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	return toSerialize, nil
}

type NullableGroupedShowbackSummariesByProjectDto struct {
	value *GroupedShowbackSummariesByProjectDto
	isSet bool
}

func (v NullableGroupedShowbackSummariesByProjectDto) Get() *GroupedShowbackSummariesByProjectDto {
	return v.value
}

func (v *NullableGroupedShowbackSummariesByProjectDto) Set(val *GroupedShowbackSummariesByProjectDto) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupedShowbackSummariesByProjectDto) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupedShowbackSummariesByProjectDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupedShowbackSummariesByProjectDto(val *GroupedShowbackSummariesByProjectDto) *NullableGroupedShowbackSummariesByProjectDto {
	return &NullableGroupedShowbackSummariesByProjectDto{value: val, isSet: true}
}

func (v NullableGroupedShowbackSummariesByProjectDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupedShowbackSummariesByProjectDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


