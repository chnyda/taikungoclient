/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the GroupedShowbackSummariesByLabelDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupedShowbackSummariesByLabelDto{}

// GroupedShowbackSummariesByLabelDto struct for GroupedShowbackSummariesByLabelDto
type GroupedShowbackSummariesByLabelDto struct {
	ByLabel *string `json:"byLabel,omitempty"`
	TotalPrice *float64 `json:"totalPrice,omitempty"`
}

// NewGroupedShowbackSummariesByLabelDto instantiates a new GroupedShowbackSummariesByLabelDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupedShowbackSummariesByLabelDto() *GroupedShowbackSummariesByLabelDto {
	this := GroupedShowbackSummariesByLabelDto{}
	return &this
}

// NewGroupedShowbackSummariesByLabelDtoWithDefaults instantiates a new GroupedShowbackSummariesByLabelDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupedShowbackSummariesByLabelDtoWithDefaults() *GroupedShowbackSummariesByLabelDto {
	this := GroupedShowbackSummariesByLabelDto{}
	return &this
}

// GetByLabel returns the ByLabel field value if set, zero value otherwise.
func (o *GroupedShowbackSummariesByLabelDto) GetByLabel() string {
	if o == nil || IsNil(o.ByLabel) {
		var ret string
		return ret
	}
	return *o.ByLabel
}

// GetByLabelOk returns a tuple with the ByLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummariesByLabelDto) GetByLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ByLabel) {
		return nil, false
	}
	return o.ByLabel, true
}

// HasByLabel returns a boolean if a field has been set.
func (o *GroupedShowbackSummariesByLabelDto) HasByLabel() bool {
	if o != nil && !IsNil(o.ByLabel) {
		return true
	}

	return false
}

// SetByLabel gets a reference to the given string and assigns it to the ByLabel field.
func (o *GroupedShowbackSummariesByLabelDto) SetByLabel(v string) {
	o.ByLabel = &v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *GroupedShowbackSummariesByLabelDto) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummariesByLabelDto) GetTotalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *GroupedShowbackSummariesByLabelDto) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *GroupedShowbackSummariesByLabelDto) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

func (o GroupedShowbackSummariesByLabelDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupedShowbackSummariesByLabelDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ByLabel) {
		toSerialize["byLabel"] = o.ByLabel
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	return toSerialize, nil
}

type NullableGroupedShowbackSummariesByLabelDto struct {
	value *GroupedShowbackSummariesByLabelDto
	isSet bool
}

func (v NullableGroupedShowbackSummariesByLabelDto) Get() *GroupedShowbackSummariesByLabelDto {
	return v.value
}

func (v *NullableGroupedShowbackSummariesByLabelDto) Set(val *GroupedShowbackSummariesByLabelDto) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupedShowbackSummariesByLabelDto) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupedShowbackSummariesByLabelDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupedShowbackSummariesByLabelDto(val *GroupedShowbackSummariesByLabelDto) *NullableGroupedShowbackSummariesByLabelDto {
	return &NullableGroupedShowbackSummariesByLabelDto{value: val, isSet: true}
}

func (v NullableGroupedShowbackSummariesByLabelDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupedShowbackSummariesByLabelDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


