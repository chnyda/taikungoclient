/*
Taikun - Showback API

Testing ShowbackRulesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package taikunshowback

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/chnyda/taikungoclient"
)

func Test_taikunshowback_ShowbackRulesApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ShowbackRulesApiService ShowbackRulesCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var v string

		resp, httpRes, err := apiClient.ShowbackRulesApi.ShowbackRulesCreate(context.Background(), v).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShowbackRulesApiService ShowbackRulesDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32
		var v string

		httpRes, err := apiClient.ShowbackRulesApi.ShowbackRulesDelete(context.Background(), id, v).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShowbackRulesApiService ShowbackRulesDeleteAll", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var v string

		httpRes, err := apiClient.ShowbackRulesApi.ShowbackRulesDeleteAll(context.Background(), v).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShowbackRulesApiService ShowbackRulesList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var v string

		resp, httpRes, err := apiClient.ShowbackRulesApi.ShowbackRulesList(context.Background(), v).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ShowbackRulesApiService ShowbackRulesUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var v string

		httpRes, err := apiClient.ShowbackRulesApi.ShowbackRulesUpdate(context.Background(), v).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
