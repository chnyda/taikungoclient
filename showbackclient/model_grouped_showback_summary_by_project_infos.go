/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the GroupedShowbackSummaryByProjectInfos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupedShowbackSummaryByProjectInfos{}

// GroupedShowbackSummaryByProjectInfos struct for GroupedShowbackSummaryByProjectInfos
type GroupedShowbackSummaryByProjectInfos struct {
	Data []GroupedShowbackSummariesByProjectDto `json:"data,omitempty"`
	RuleName *string `json:"ruleName,omitempty"`
	CredentialName *string `json:"credentialName,omitempty"`
	TotalPrice *float64 `json:"totalPrice,omitempty"`
}

// NewGroupedShowbackSummaryByProjectInfos instantiates a new GroupedShowbackSummaryByProjectInfos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupedShowbackSummaryByProjectInfos() *GroupedShowbackSummaryByProjectInfos {
	this := GroupedShowbackSummaryByProjectInfos{}
	return &this
}

// NewGroupedShowbackSummaryByProjectInfosWithDefaults instantiates a new GroupedShowbackSummaryByProjectInfos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupedShowbackSummaryByProjectInfosWithDefaults() *GroupedShowbackSummaryByProjectInfos {
	this := GroupedShowbackSummaryByProjectInfos{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GroupedShowbackSummaryByProjectInfos) GetData() []GroupedShowbackSummariesByProjectDto {
	if o == nil || IsNil(o.Data) {
		var ret []GroupedShowbackSummariesByProjectDto
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummaryByProjectInfos) GetDataOk() ([]GroupedShowbackSummariesByProjectDto, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryByProjectInfos) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GroupedShowbackSummariesByProjectDto and assigns it to the Data field.
func (o *GroupedShowbackSummaryByProjectInfos) SetData(v []GroupedShowbackSummariesByProjectDto) {
	o.Data = v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *GroupedShowbackSummaryByProjectInfos) GetRuleName() string {
	if o == nil || IsNil(o.RuleName) {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummaryByProjectInfos) GetRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleName) {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryByProjectInfos) HasRuleName() bool {
	if o != nil && !IsNil(o.RuleName) {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *GroupedShowbackSummaryByProjectInfos) SetRuleName(v string) {
	o.RuleName = &v
}

// GetCredentialName returns the CredentialName field value if set, zero value otherwise.
func (o *GroupedShowbackSummaryByProjectInfos) GetCredentialName() string {
	if o == nil || IsNil(o.CredentialName) {
		var ret string
		return ret
	}
	return *o.CredentialName
}

// GetCredentialNameOk returns a tuple with the CredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummaryByProjectInfos) GetCredentialNameOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialName) {
		return nil, false
	}
	return o.CredentialName, true
}

// HasCredentialName returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryByProjectInfos) HasCredentialName() bool {
	if o != nil && !IsNil(o.CredentialName) {
		return true
	}

	return false
}

// SetCredentialName gets a reference to the given string and assigns it to the CredentialName field.
func (o *GroupedShowbackSummaryByProjectInfos) SetCredentialName(v string) {
	o.CredentialName = &v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *GroupedShowbackSummaryByProjectInfos) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummaryByProjectInfos) GetTotalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryByProjectInfos) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *GroupedShowbackSummaryByProjectInfos) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

func (o GroupedShowbackSummaryByProjectInfos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupedShowbackSummaryByProjectInfos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.RuleName) {
		toSerialize["ruleName"] = o.RuleName
	}
	if !IsNil(o.CredentialName) {
		toSerialize["credentialName"] = o.CredentialName
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	return toSerialize, nil
}

type NullableGroupedShowbackSummaryByProjectInfos struct {
	value *GroupedShowbackSummaryByProjectInfos
	isSet bool
}

func (v NullableGroupedShowbackSummaryByProjectInfos) Get() *GroupedShowbackSummaryByProjectInfos {
	return v.value
}

func (v *NullableGroupedShowbackSummaryByProjectInfos) Set(val *GroupedShowbackSummaryByProjectInfos) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupedShowbackSummaryByProjectInfos) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupedShowbackSummaryByProjectInfos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupedShowbackSummaryByProjectInfos(val *GroupedShowbackSummaryByProjectInfos) *NullableGroupedShowbackSummaryByProjectInfos {
	return &NullableGroupedShowbackSummaryByProjectInfos{value: val, isSet: true}
}

func (v NullableGroupedShowbackSummaryByProjectInfos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupedShowbackSummaryByProjectInfos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


