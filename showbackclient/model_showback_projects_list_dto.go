/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@itera.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the ShowbackProjectsListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShowbackProjectsListDto{}

// ShowbackProjectsListDto struct for ShowbackProjectsListDto
type ShowbackProjectsListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	MonitoringUrl *string `json:"monitoringUrl,omitempty"`
	MonitoringUsername *string `json:"monitoringUsername,omitempty"`
	MonitoringPassword *string `json:"monitoringPassword,omitempty"`
}

// NewShowbackProjectsListDto instantiates a new ShowbackProjectsListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowbackProjectsListDto() *ShowbackProjectsListDto {
	this := ShowbackProjectsListDto{}
	return &this
}

// NewShowbackProjectsListDtoWithDefaults instantiates a new ShowbackProjectsListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowbackProjectsListDtoWithDefaults() *ShowbackProjectsListDto {
	this := ShowbackProjectsListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ShowbackProjectsListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackProjectsListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ShowbackProjectsListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ShowbackProjectsListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ShowbackProjectsListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackProjectsListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ShowbackProjectsListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ShowbackProjectsListDto) SetName(v string) {
	o.Name = &v
}

// GetMonitoringUrl returns the MonitoringUrl field value if set, zero value otherwise.
func (o *ShowbackProjectsListDto) GetMonitoringUrl() string {
	if o == nil || IsNil(o.MonitoringUrl) {
		var ret string
		return ret
	}
	return *o.MonitoringUrl
}

// GetMonitoringUrlOk returns a tuple with the MonitoringUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackProjectsListDto) GetMonitoringUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringUrl) {
		return nil, false
	}
	return o.MonitoringUrl, true
}

// HasMonitoringUrl returns a boolean if a field has been set.
func (o *ShowbackProjectsListDto) HasMonitoringUrl() bool {
	if o != nil && !IsNil(o.MonitoringUrl) {
		return true
	}

	return false
}

// SetMonitoringUrl gets a reference to the given string and assigns it to the MonitoringUrl field.
func (o *ShowbackProjectsListDto) SetMonitoringUrl(v string) {
	o.MonitoringUrl = &v
}

// GetMonitoringUsername returns the MonitoringUsername field value if set, zero value otherwise.
func (o *ShowbackProjectsListDto) GetMonitoringUsername() string {
	if o == nil || IsNil(o.MonitoringUsername) {
		var ret string
		return ret
	}
	return *o.MonitoringUsername
}

// GetMonitoringUsernameOk returns a tuple with the MonitoringUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackProjectsListDto) GetMonitoringUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringUsername) {
		return nil, false
	}
	return o.MonitoringUsername, true
}

// HasMonitoringUsername returns a boolean if a field has been set.
func (o *ShowbackProjectsListDto) HasMonitoringUsername() bool {
	if o != nil && !IsNil(o.MonitoringUsername) {
		return true
	}

	return false
}

// SetMonitoringUsername gets a reference to the given string and assigns it to the MonitoringUsername field.
func (o *ShowbackProjectsListDto) SetMonitoringUsername(v string) {
	o.MonitoringUsername = &v
}

// GetMonitoringPassword returns the MonitoringPassword field value if set, zero value otherwise.
func (o *ShowbackProjectsListDto) GetMonitoringPassword() string {
	if o == nil || IsNil(o.MonitoringPassword) {
		var ret string
		return ret
	}
	return *o.MonitoringPassword
}

// GetMonitoringPasswordOk returns a tuple with the MonitoringPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackProjectsListDto) GetMonitoringPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringPassword) {
		return nil, false
	}
	return o.MonitoringPassword, true
}

// HasMonitoringPassword returns a boolean if a field has been set.
func (o *ShowbackProjectsListDto) HasMonitoringPassword() bool {
	if o != nil && !IsNil(o.MonitoringPassword) {
		return true
	}

	return false
}

// SetMonitoringPassword gets a reference to the given string and assigns it to the MonitoringPassword field.
func (o *ShowbackProjectsListDto) SetMonitoringPassword(v string) {
	o.MonitoringPassword = &v
}

func (o ShowbackProjectsListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShowbackProjectsListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MonitoringUrl) {
		toSerialize["monitoringUrl"] = o.MonitoringUrl
	}
	if !IsNil(o.MonitoringUsername) {
		toSerialize["monitoringUsername"] = o.MonitoringUsername
	}
	if !IsNil(o.MonitoringPassword) {
		toSerialize["monitoringPassword"] = o.MonitoringPassword
	}
	return toSerialize, nil
}

type NullableShowbackProjectsListDto struct {
	value *ShowbackProjectsListDto
	isSet bool
}

func (v NullableShowbackProjectsListDto) Get() *ShowbackProjectsListDto {
	return v.value
}

func (v *NullableShowbackProjectsListDto) Set(val *ShowbackProjectsListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableShowbackProjectsListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableShowbackProjectsListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowbackProjectsListDto(val *ShowbackProjectsListDto) *NullableShowbackProjectsListDto {
	return &NullableShowbackProjectsListDto{value: val, isSet: true}
}

func (v NullableShowbackProjectsListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowbackProjectsListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


